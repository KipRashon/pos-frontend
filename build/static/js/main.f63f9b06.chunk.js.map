{"version":3,"sources":["components/table-icon/table-icon.jsx","services/api-handle.js","services/api-const.js","services/constants.js","services/utility.js","pages/admin/header.jsx","pages/admin/sidebar.jsx","pages/admin/with-template.jsx","components/modal/modal.jsx","pages/admin/admins/add-admin.jsx","pages/admin/admins/admins.jsx","components/counter/counter.jsx","components/select-period/select-period.jsx","pages/admin/dashboard/best-selling.jsx","pages/admin/dashboard/sales-graph.jsx","pages/admin/dashboard/admin-dashboard.jsx","components/category/category.jsx","components/header/header.jsx","components/process-transaction/process-transaction.jsx","components/receipt/receipt.jsx","components/receipt/receipt-print.jsx","pages/employee/with-employee-validation.jsx","pages/employee/employee-dashboard.jsx","pages/admin/employees/add-employee.jsx","pages/admin/employees/employees.jsx","pages/login/login.jsx","pages/admin/category/categories.jsx","pages/admin/goods/goods.jsx","pages/admin/pricing/pricing.jsx","pages/employee/employee-welcome.jsx","components/tooltip/tooltip-element.jsx","pages/employee/employee-sales.jsx","pages/employee/employee-sale-detai.jsx","pages/admin/sales/sale-detail.jsx","pages/admin/sales/sales.jsx","components/loader/loader.jsx","pages/admin/stock/add-stock.jsx","pages/admin/stock/stock.jsx","pages/admin/stock/stock-history.jsx","routes.js","App.js","reportWebVitals.js","services/common.js","index.js"],"names":["TableIcon","props","children","onClick","className","API","axios","create","baseURL","showNotification","title","color","position","toastId","toast","success","warn","error","sendPostRequest","url","params","post","sendGetRequest","get","handleSuccess","promiseFunc","successMessage","then","res","handleError","catch","err","response","message","data","errors","key","forEach","user_types","places","payment_methods","printer_widths","action_types","ADD","display","value","badgeColor","EDIT","SALE","time_periods","TODAY","YESTERDAY","THIS_WEEK","THIS_MONTH","THIS_YEAR","ALL_TIME","objetPropEmpty","obj","getDateTimeAgo","dateStr","moment","fromNow","getFromLocal","name","JSON","parse","localStorage","getItem","removeFromLocalStorage","removeItem","formatDate","date","isValid","format","formatUrl","urlParams","args","arg","substr","length","getFormattedAmount","amount","quantity","getFormattedMeasure","unit","measure","convertObjectToArray","arr","i","push","getMapDisplayDate","timePeriod","Header","currentUser","class","to","href","role","data-toggle","firstname","style","id","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","d","cx","cy","r","points","x1","y1","x2","y2","history","SideBar","data-feather","withTemplate","WrappedComponent","isAdmin","this","minHeight","React","Component","Modal","useEffect","$","addClass","removeClass","paddingRight","AddAdmin","handleClose","useState","lastname","email","phone","password","admin","setAdmin","updateAdminProp","htmlFor","type","placeholder","onChange","e","target","confirm_password","trackPromise","updateShowAdmin","showAddAdmin","setState","onDelete","fetchAdmins","state","admins","map","index","updated_at","Counter","icon","displayValue","extraTitle","SelectPeriod","selectedPeriod","updatePeriod","periodArr","displayPeriod","find","period","aria-expanded","BestSelling","bestSelling","item","stock_name","category_name","count","pricing","SalesGraph","barSales","restaurantSales","chart","setChart","chartData","labels","bar","restaurant","prepData","newOptions","options","categories","updateOptions","series","toolbar","show","plotOptions","horizontal","columnWidth","endingShape","colors","dataLabels","enabled","markers","shape","legend","fontSize","horizontalAlign","strokeWidth","strokeColor","fillColors","undefined","radius","offsetX","offsetY","grid","borderColor","xaxis","fontFamily","fontWeight","cssClass","crosshairs","yaxis","opacity","tooltip","y","formatter","val","barChart","ApexCharts","document","querySelector","render","updateData","totals","updateFilter","bar_sales_count","restaurant_sales_count","restaurant_profit","Math","abs","toFixed","bar_profit","bar_stock_worth","restaurant_stock_worth","out_of_stock","average_daily_sales","bar_sales","restaurant_sales","best_selling","Item","onItemClick","Category","category","goods","good","place","parseInt","aria-labelledby","ProcessTransaction","selectedItem","handleAddToCart","pricings","setPricings","setCount","selectedForCart","setSelectedForCart","itemId","pricingItem","quantity_remaining","toSend","price","removeFromCart","useOnlinePrice","itemPrice","setItemPrice","online_price","Receipt","cartItems","handleSale","payObj","setUseOnlinePrice","getRawTotalAmount","getTotalAmount","payment_method","transaction_code","total","receiptWidth","payment","setPayment","sale_id","useOnline","method","methods","removeFromArray","filter","it","includes","checkIfUseOnline","customer_pay","customer_change","parseFloat","continueToPrint","ReceiptPrint","setCartItems","cart_items","sale","onAfterPrint","goBack","maxWidth","colSpan","created_at","window","print","html2canvas","getElementById","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","withEmployeeValidation","handleChangeCategory","selectedCategoryId","getFilteredCategories","handleSearch","q","findIndex","cItem","splice","addSaleUrl","addHistoryUrl","sold_by","sold_goods","sold_by_text","saleResp","quantities","measures","prices","ids","match","showPrint","filteredCategories","saleId","receiptRef","createRef","getCategories","printReceipt","aria-label","aria-describedby","AddEmployee","updateEmpProp","showAddEmployee","employee","fetchEmployees","employees","emp","Login","updatePropChange","user","handleLogin","redirectUrl","level","toStoreInLocal","setItem","stringify","AddCategory","setCategory","updateShowAddCategory","showAddCategory","fetchCategories","AddProduct","product","setProduct","updateShowAddProduct","showAddProduct","fetchProducts","products","categoryId","selectedPricing","addPricing","goodId","updated_by","getPricings","showEditPricing","displayProfileLossBadge","buyingPrice","selllingPrice","percent","badgeClass","displayText","buying_price","alignItems","justifyContent","marginTop","ToolTipElement","data-placement","sales","setSales","goods_count","status","handleDelete","setSale","setHistory","good_name","Loader","usePromiseTracker","promiseInProgress","AddStock","handleCloseModal","selectedStock","selectedPlace","isEdit","setIsEdit","stock","setStock","updateStockChange","disabled","onEdit","showAddStock","toggleShowAdd","stock_id","getBadgeColor","action_type","action","act","hst","Routes","query","URLSearchParams","useLocation","search","hideProgressBar","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ready","click","toggleClass","Popper","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f63f9b06.chunk.js","sourcesContent":["import React from 'react';\r\nimport './table-icon.scss';\r\n\r\nfunction TableIcon(props) {\r\n  const {children, onClick} = props;\r\n  return (\r\n    <div\r\n      className='icon-container p-2 link rounded-circle shadow shadow-secondary text-center'\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableIcon;\r\n","import axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport {API_URL} from './api-const';\r\nlet API = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\nexport function showNotification(title, color, position, toastId) {\r\n  if (color === 'success') {\r\n    toast.success(title, {position: position || 'top-right', toastId});\r\n  } else if (color === 'warning') {\r\n    toast.warn(title, {position: position || 'top-right', toastId});\r\n  } else {\r\n    toast.error(title, {position: position || 'top-right', toastId});\r\n  }\r\n}\r\nexport function sendPostRequest(url, params) {\r\n  return API.post(url, params);\r\n}\r\n\r\nexport function sendGetRequest(url) {\r\n  return API.get(url);\r\n}\r\n\r\nexport function sendFormData(url, formData) {\r\n  return API({\r\n    url: url,\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      accept: 'application/json',\r\n    },\r\n    data: formData,\r\n  });\r\n}\r\n\r\nexport function handleSuccess(promiseFunc, successMessage) {\r\n  return promiseFunc.then((res) => {\r\n    if (showNotification) {\r\n      showNotification(successMessage, 'success');\r\n    }\r\n    return res;\r\n  });\r\n}\r\n\r\nexport function handleError(promiseFunc) {\r\n  return promiseFunc.catch((err) => {\r\n    if (err.response) {\r\n      let message = err.response.data;\r\n\r\n      if (message) {\r\n        if (message.errors) {\r\n          for (let key in message.errors) {\r\n            let error = message.errors[key];\r\n\r\n            error.forEach((err) => showNotification(err, 'danger'));\r\n          }\r\n        } else {\r\n          showNotification(message.message, 'danger');\r\n        }\r\n      } else {\r\n        showNotification('Database Error', 'danger');\r\n      }\r\n    } else {\r\n      showNotification('You are offline', 'warning');\r\n    }\r\n\r\n    return err;\r\n  });\r\n}\r\n","// export const API_URL = 'https://posbackend.sk.co.ke/api';\r\nexport const API_URL = 'http://127.0.0.1:8000/api/';\r\n","export const user_types = {\r\n  EMPLOYEE: 2,\r\n  ADMIN: 1,\r\n};\r\n\r\nexport const places = {\r\n  RESTAURANT: 1,\r\n  BAR: 2,\r\n};\r\n\r\nexport const payment_methods = [\r\n  'Cash',\r\n  'Mpesa',\r\n  'Card',\r\n  'Glovo',\r\n  'Jumia',\r\n  'Uber Eats',\r\n  'Little Cab',\r\n];\r\n\r\nexport const printer_widths = {\r\n  KITCHEN_PRINTER: '500px',\r\n  FUSION_PRINTER: '300px',\r\n};\r\n\r\nexport const action_types = {\r\n  ADD: {\r\n    display: 'Created stock',\r\n    value: 1,\r\n    badgeColor: 'dark',\r\n  },\r\n  EDIT: {\r\n    display: 'Updated stock',\r\n    value: 2,\r\n    badgeColor: 'primary',\r\n  },\r\n  SALE: {\r\n    display: 'Made a sale',\r\n    value: 3,\r\n    badgeColor: 'success',\r\n  },\r\n};\r\n\r\nexport const time_periods = {\r\n  TODAY: {display: 'Today', value: 'today'},\r\n  YESTERDAY: {display: 'Yesterday', value: 'yesterday'},\r\n  THIS_WEEK: {display: 'This week', value: 'week'},\r\n  THIS_MONTH: {display: 'This Month', value: 'month'},\r\n  THIS_YEAR: {display: 'This Year', value: 'year'},\r\n  ALL_TIME: {display: 'All Time', value: ''},\r\n};\r\n","import moment from 'moment';\r\nimport {time_periods} from './constants';\r\n\r\nexport function objetPropEmpty(obj) {\r\n  for (let key in obj) {\r\n    if (!obj[key]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getDateTimeAgo(dateStr) {\r\n  if (!dateStr) {\r\n    return '_';\r\n  }\r\n  let date = moment(dateStr);\r\n  // date.add(3, 'hours');\r\n  return date.fromNow();\r\n}\r\n\r\nexport function storeUserLocally(name, toStoreInLocal) {\r\n  localStorage.setItem(name, JSON.stringify(toStoreInLocal));\r\n}\r\nexport function getFromLocal(name) {\r\n  let fromLocalStorage = JSON.parse(\r\n    localStorage.getItem(name ? name : 'userSelection')\r\n  );\r\n  return fromLocalStorage;\r\n}\r\nexport function removeFromLocalStorage(name) {\r\n  localStorage.removeItem(name);\r\n}\r\n\r\n//function to format the date\r\nexport function formatDate(dateStr) {\r\n  if (!dateStr) {\r\n    return '_';\r\n  }\r\n\r\n  let date = moment(dateStr);\r\n  //return an empty string if the date is invalid\r\n  if (!date.isValid()) {\r\n    return '_';\r\n  }\r\n  // date.add(3, 'hours');\r\n\r\n  //format to 29/06/2020 12:57 pm\r\n  return date.format('DD/MM/YYYY h:mm a');\r\n}\r\n\r\nexport function formatUrl(url, ...args) {\r\n  let urlParams = '';\r\n  args.forEach((arg) => {\r\n    for (let key in arg) {\r\n      if (arg[key]) {\r\n        urlParams = `${urlParams}${key}=${arg[key]}&`;\r\n      }\r\n      if (arg[key] === 0) {\r\n        urlParams = `${urlParams}${key}=${arg[key]}&`; //allow for value=0\r\n      }\r\n    }\r\n  });\r\n  urlParams = urlParams.substr(0, urlParams.length - 1); //remove the & at the end\r\n\r\n  return `${url}?${urlParams}`;\r\n}\r\n\r\nexport function getFormattedAmount(amount, quantity) {\r\n  return `Ksh ${amount * quantity}`;\r\n}\r\n\r\nexport function getFormattedMeasure(unit, measure) {\r\n  if (unit === 'count') {\r\n    return measure;\r\n  }\r\n  return `${measure} ${unit}`;\r\n}\r\n\r\nexport function convertObjectToArray(obj) {\r\n  let arr = [];\r\n  for (let i in obj) {\r\n    arr.push(obj[i]);\r\n  }\r\n  return arr;\r\n}\r\n//used to get the display format for the graph\r\nexport function getMapDisplayDate(dateStr, timePeriod) {\r\n  let date = moment(dateStr);\r\n  switch (timePeriod) {\r\n    case time_periods.TODAY.value:\r\n      return date.format('h a');\r\n    case time_periods.THIS_WEEK.value:\r\n      return date.format('ddd');\r\n    case time_periods.THIS_MONTH.value:\r\n      return date.format('Do');\r\n    case time_periods.THIS_YEAR.value:\r\n      return date.format('MMM');\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {getFromLocal, removeFromLocalStorage} from '../../services/utility';\r\n\r\nexport default function Header(props) {\r\n  const handleLogout = () => {\r\n    removeFromLocalStorage('currentUser');\r\n    props.history.push('/');\r\n  };\r\n\r\n  let currentUser = getFromLocal('currentUser');\r\n  return (\r\n    <>\r\n      <div class='nav-header'>\r\n        <Link to='/admin' class='brand-logo h4 text-dark'>\r\n          SCRATCH LTD\r\n        </Link>\r\n\r\n        <div class='nav-control'>\r\n          <div class='hamburger'>\r\n            <span class='line'></span>\r\n            <span class='line'></span>\r\n            <span class='line'></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class='header'>\r\n        <div class='header-content'>\r\n          <nav class='navbar navbar-expand'>\r\n            <div class='collapse navbar-collapse justify-content-between'>\r\n              <div className='header-left'></div>\r\n              <ul class='navbar-nav header-right'>\r\n                <li class='nav-item dropdown header-profile'>\r\n                  <a\r\n                    class='nav-link'\r\n                    href='#'\r\n                    role='button'\r\n                    data-toggle='dropdown'\r\n                  >\r\n                    <div class='header-info'>\r\n                      <span>\r\n                        Hello, <strong>{currentUser.firstname}</strong>\r\n                      </span>\r\n                    </div>\r\n                    <div\r\n                      className='text-white h3 p-1 mr-2'\r\n                      style={{color: '#fff'}}\r\n                    >\r\n                      <svg\r\n                        id='icon-user1'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        class='text-white'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2'></path>\r\n                        <circle cx='12' cy='7' r='4'></circle>\r\n                      </svg>\r\n                    </div>\r\n                  </a>\r\n                  <div class='dropdown-menu dropdown-menu-right'>\r\n                    <a href='app-profile.html' class='dropdown-item ai-icon'>\r\n                      <svg\r\n                        id='icon-user1'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        class='text-primary'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2'></path>\r\n                        <circle cx='12' cy='7' r='4'></circle>\r\n                      </svg>\r\n                      <span class='ml-2'>Profile </span>\r\n                    </a>\r\n                    <a href='email-inbox.html' class='dropdown-item ai-icon'>\r\n                      <svg\r\n                        id='icon-inbox'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        class='text-success'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z'></path>\r\n                        <polyline points='22,6 12,13 2,6'></polyline>\r\n                      </svg>\r\n                      <span class='ml-2'>Inbox </span>\r\n                    </a>\r\n                    <a href='page-login.html' class='dropdown-item ai-icon'>\r\n                      <svg\r\n                        id='icon-logout'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        class='text-danger'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4'></path>\r\n                        <polyline points='16 17 21 12 16 7'></polyline>\r\n                        <line x1='21' y1='12' x2='9' y2='12'></line>\r\n                      </svg>\r\n                      <span class='ml-2' onClick={handleLogout}>\r\n                        Logout{' '}\r\n                      </span>\r\n                    </a>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function SideBar() {\r\n  return (\r\n    <div class='deznav'>\r\n      <div class='deznav-scroll'>\r\n        <div class='metismenu' id='menu'>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin'} className='nav-link  '>\r\n              <span data-feather='home'></span>\r\n              Dashboard <span className='sr-only'>(current)</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/admins'} className='nav-link'>\r\n              <span data-feather='file'></span>\r\n              Admins\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/employees'} className='nav-link'>\r\n              <span data-feather='shopping-cart'></span>\r\n              Employees\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/categories'} className='nav-link'>\r\n              <span data-feather='users'></span>\r\n              Categories\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/stock'} className='nav-link'>\r\n              <span data-feather='users'></span>\r\n              Stock\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/sales'} className='nav-link'>\r\n              <span data-feather='layers'></span>\r\n              Sale History\r\n            </Link>\r\n          </li>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Header from './header';\r\nimport SideBar from './sidebar';\r\nimport './dashboard/dashboard.css';\r\nimport {getFromLocal} from '../../services/utility';\r\n\r\nexport default function withTemplate(WrappedComponent) {\r\n  return class WithTemplate extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let currentUser = getFromLocal('currentUser');\r\n      if (!currentUser) {\r\n        this.props.history.push('/');\r\n      } else if (!currentUser.isAdmin) {\r\n        this.props.history.push('/');\r\n      }\r\n    }\r\n    render() {\r\n      return (\r\n        <div id='main-wrapper' className='show'>\r\n          <Header {...this.props} />\r\n\r\n          <SideBar />\r\n\r\n          <div class='content-body' style={{minHeight: '100vh'}}>\r\n            <div class='container-fluid'>\r\n              <WrappedComponent {...this.props} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport './modal.scss';\r\nimport $ from 'jquery';\r\n\r\nfunction Modal(props) {\r\n  const {children} = props;\r\n  useEffect(() => {\r\n    $('body').addClass('modal-open');\r\n    return () => {\r\n      $('body').removeClass('modal-open');\r\n    };\r\n  });\r\n  return (\r\n    <div\r\n      class='modal animate__animated animate__bounceInUp show'\r\n      id='basicModal'\r\n      style={{display: 'block', paddingRight: '19px'}}\r\n    >\r\n      <div class='modal-dialog' role='document'>\r\n        <div class='modal-content'>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, {useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {toast} from 'react-toastify';\r\nimport Modal from '../../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {objetPropEmpty} from '../../../services/utility';\r\n\r\nfunction AddAdmin(props) {\r\n  const {handleClose} = props;\r\n  const [admin, setAdmin] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n  });\r\n\r\n  const updateAdminProp = (obj) => {\r\n    setAdmin({...admin, ...obj});\r\n  };\r\n\r\n  const saveAdmin = () => {\r\n    if (admin.password !== admin.confirm_password) {\r\n      toast.error('The two passwords do not match');\r\n    } else if (objetPropEmpty(admin)) {\r\n      toast.error('Do not leave fields empty');\r\n    } else {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendPostRequest('admins', admin),\r\n            'Admin added successfully'\r\n          ).then((res) => {\r\n            handleClose();\r\n          })\r\n        )\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>New Admin</div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>First name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter firstname'\r\n              value={admin.firstname}\r\n              onChange={(e) => updateAdminProp({firstname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Last name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter lastname'\r\n              value={admin.lastname}\r\n              onChange={(e) => updateAdminProp({lastname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Phone Number</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter phone number'\r\n              value={admin.phone}\r\n              onChange={(e) => updateAdminProp({phone: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Email</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter email'\r\n              value={admin.email}\r\n              onChange={(e) => updateAdminProp({email: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Password</label>\r\n            <input\r\n              type='password'\r\n              className='form-control'\r\n              placeholder='Enter password'\r\n              value={admin.password}\r\n              onChange={(e) => updateAdminProp({password: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Confirm Password</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Confirm password'\r\n              value={admin.confirm_password}\r\n              onChange={(e) =>\r\n                updateAdminProp({confirm_password: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={saveAdmin}>\r\n              Save Admin\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddAdmin;\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport AddAdmin from './add-admin';\r\n\r\nclass Admins extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddAdmin: false,\r\n      admins: [],\r\n    };\r\n  }\r\n  fetchAdmins() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('admins')).then((res) => {\r\n          let admins = res.data;\r\n          this.setState({admins});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAdmins();\r\n  }\r\n\r\n  updateShowAdmin = (showAddAdmin) => {\r\n    this.setState({showAddAdmin});\r\n  };\r\n\r\n  onDelete = (admin) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`admins/${admin.id}/delete`),\r\n          'Admin deleted successfully'\r\n        ).then((res) => this.fetchAdmins())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddAdmin, admins} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddAdmin && (\r\n          <AddAdmin\r\n            handleClose={() => {\r\n              this.updateShowAdmin(false);\r\n              this.fetchAdmins();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Admins </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAdmin(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Phone Number</th>\r\n                <th>Email</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {admins.map((admin, index) => (\r\n                <tr key={admin.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{admin.firstname + ' ' + admin.lastname}</td>\r\n                  <td>{admin.phone}</td>\r\n                  <td>{admin.email}</td>\r\n                  <td>\r\n                    <span title={formatDate(admin.updated_at)}>\r\n                      {getDateTimeAgo(admin.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(admin)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Admins);\r\n","import React from 'react';\r\n\r\nexport default function Counter(props) {\r\n  const {icon, title, displayValue, extraTitle} = props;\r\n\r\n  return (\r\n    <div className='col-xl-3 col-xxl-3 col-lg-6 col-md-6 col-sm-6'>\r\n      <div className='widget-stat card'>\r\n        <div className='card-body p-4'>\r\n          <div className='media ai-icon'>\r\n            <span className='mr-3 bgl-primary text-primary'>\r\n              <i className={icon}></i>\r\n            </span>\r\n            <div className='media-body'>\r\n              <h3 className='mb-0 text-black'>\r\n                <span className='counter ml-0'>{displayValue}</span>\r\n              </h3>\r\n              <p className='mb-0'>{title}</p>\r\n              {extraTitle ? <small>{extraTitle}</small> : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {time_periods} from '../../services/constants';\r\nimport {convertObjectToArray} from '../../services/utility';\r\n\r\nexport default function SelectPeriod(props) {\r\n  const {selectedPeriod, updatePeriod} = props;\r\n  let periodArr = convertObjectToArray(time_periods);\r\n  let displayPeriod = periodArr.find(\r\n    (period) => period.value === selectedPeriod\r\n  );\r\n  if (!displayPeriod) {\r\n    displayPeriod = time_periods.THIS_YEAR; //fallback incase the time period is not found\r\n  }\r\n  return (\r\n    <div className='dropdown mt-3 mt-sm-0'>\r\n      <button\r\n        type='button'\r\n        className='btn btn-primary dropdown-toggle light fs-14'\r\n        data-toggle='dropdown'\r\n        aria-expanded='false'\r\n      >\r\n        {displayPeriod.display}\r\n      </button>\r\n      <div className='dropdown-menu'>\r\n        {periodArr.map((period) => (\r\n          <button\r\n            key={period.value}\r\n            className='dropdown-item'\r\n            onClick={() => updatePeriod(period.value)}\r\n          >\r\n            {period.display}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function BestSelling(props) {\r\n  const {bestSelling} = props;\r\n  return (\r\n    <div class='row'>\r\n      <div class='col-xl-12'>\r\n        <div class='card'>\r\n          <div class='card-header border-0 pb-0 d-sm-flex d-block'>\r\n            <div>\r\n              <h4 class='card-title mb-1'>Best Selling Items</h4>\r\n            </div>\r\n          </div>\r\n          <div class='card-body p-0 pt-3 border-top border-darken-1'>\r\n            {bestSelling.map((item, index) => (\r\n              <div class='media items-list-1' key={item.pricing}>\r\n                <span class='number col-1 px-0 align-self-center'>\r\n                  #{++index}\r\n                </span>\r\n                <div class='media-body col-sm-4 col-6 col-xxl-5 px-0'>\r\n                  <h5 class='mt-0 mb-3'>\r\n                    <a class='text-black' href='ecom-product-detail.html'>\r\n                      {item.stock_name}\r\n                    </a>\r\n                  </h5>\r\n                  <small class='font-w500'>\r\n                    <strong class='text-secondary mr-2'>\r\n                      Ksh {item.amount}\r\n                    </strong>\r\n                    <span class='text-primary'>{item.category_name}</span>\r\n                  </small>\r\n                </div>\r\n                <div class='media-footer ml-auto col-3 px-0 d-flex align-self-center align-items-center'>\r\n                  <div>\r\n                    <h3 class='mb-0 font-w600 text-black'>{item.count}</h3>\r\n                    <span class='fs-14'>Sales </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport ApexCharts from 'apexcharts';\r\nimport {getMapDisplayDate} from '../../../services/utility';\r\n\r\nexport default function SalesGraph(props) {\r\n  const {barSales, restaurantSales, period} = props;\r\n  const [chart, setChart] = useState(null);\r\n\r\n  const prepData = () => {\r\n    let labels = [],\r\n      bar = [],\r\n      restaurant = [];\r\n    for (let i = 0; i < barSales.length; i++) {\r\n      labels.push(getMapDisplayDate(barSales[i].date, period));\r\n      bar.push(barSales[i].count || 0);\r\n      restaurant.push(restaurantSales[i].count || 0);\r\n    }\r\n\r\n    return {\r\n      labels,\r\n      bar,\r\n      restaurant,\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const chartData = prepData();\r\n\r\n    if (chart) {\r\n      let newOptions = chart.options;\r\n      newOptions['series'] = [\r\n        {\r\n          name: 'Bar',\r\n          data: chartData.bar,\r\n          //radius: 12,\r\n        },\r\n        {\r\n          name: 'Restaurant',\r\n          data: chartData.restaurant,\r\n        },\r\n      ];\r\n      newOptions['xaxis'] = {\r\n        categories: chartData.labels,\r\n      };\r\n      chart.updateOptions(newOptions, false, true);\r\n    } else {\r\n      var options = {\r\n        series: [\r\n          {\r\n            name: 'Bar',\r\n            data: chartData.bar,\r\n            //radius: 12,\r\n          },\r\n          {\r\n            name: 'Restaurant',\r\n            data: chartData.restaurant,\r\n          },\r\n        ],\r\n        chart: {\r\n          type: 'area',\r\n          height: 350,\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            columnWidth: '55%',\r\n            endingShape: 'rounded',\r\n          },\r\n        },\r\n        colors: ['#2f4cdd', '#b519ec'],\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        markers: {\r\n          shape: 'circle',\r\n        },\r\n\r\n        legend: {\r\n          show: true,\r\n          fontSize: '12px',\r\n\r\n          labels: {\r\n            colors: '#000000',\r\n          },\r\n          position: 'top',\r\n          horizontalAlign: 'left',\r\n          markers: {\r\n            width: 19,\r\n            height: 19,\r\n            strokeWidth: 0,\r\n            strokeColor: '#fff',\r\n            fillColors: undefined,\r\n            radius: 4,\r\n            offsetX: -5,\r\n            offsetY: -5,\r\n          },\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 4,\r\n          colors: ['#2f4cdd', '#b519ec'],\r\n        },\r\n\r\n        grid: {\r\n          borderColor: '#eee',\r\n        },\r\n        xaxis: {\r\n          categories: chartData.labels,\r\n          labels: {\r\n            style: {\r\n              colors: '#3e4954',\r\n              fontSize: '13px',\r\n              fontFamily: 'Poppins',\r\n              fontWeight: 100,\r\n              cssClass: 'apexcharts-xaxis-label',\r\n            },\r\n          },\r\n          crosshairs: {\r\n            show: false,\r\n          },\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            style: {\r\n              colors: '#3e4954',\r\n              fontSize: '13px',\r\n              fontFamily: 'Poppins',\r\n              fontWeight: 100,\r\n              cssClass: 'apexcharts-xaxis-label',\r\n            },\r\n          },\r\n        },\r\n        fill: {\r\n          opacity: 1,\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + ' sales';\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n      let barChart = new ApexCharts(\r\n        document.querySelector('#chartBar'),\r\n        options\r\n      );\r\n      setChart(barChart);\r\n      barChart.render();\r\n    }\r\n  }, [barSales, restaurantSales]);\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header border-0 pb-0 d-sm-flex d-block'>\r\n        <div>\r\n          <h4 className='card-title mb-1'>Sales</h4>\r\n        </div>\r\n      </div>\r\n      <div className='card-body revenue-chart px-3'>\r\n        <div id='chartBar'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Counter from '../../../components/counter/counter';\r\nimport SelectPeriod from '../../../components/select-period/select-period';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {time_periods} from '../../../services/constants';\r\nimport {formatUrl} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport BestSelling from './best-selling';\r\nimport SalesGraph from './sales-graph';\r\n\r\nclass AdminDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totals: {},\r\n      period: time_periods.THIS_YEAR.value,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n  updateData = () => {\r\n    const {period} = this.state;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(formatUrl('dashboard', {period}))).then(\r\n          (res) => {\r\n            let totals = res.data.totals;\r\n            this.setState({totals});\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  updateFilter = (obj) => {\r\n    this.setState({...obj}, () => this.updateData());\r\n  };\r\n\r\n  render() {\r\n    const {totals, period} = this.state;\r\n    return (\r\n      <div className='mt-3 row'>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <div className='form-group'>\r\n            <SelectPeriod\r\n              selectedPeriod={period}\r\n              updatePeriod={(period) => this.updateFilter({period})}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Counter\r\n          title='Bar Sales'\r\n          icon='fa fa-glass-cheers'\r\n          displayValue={totals.bar_sales_count}\r\n        />\r\n        <Counter\r\n          title='Restaurant Sales'\r\n          icon='fa fa-utensils'\r\n          displayValue={totals.restaurant_sales_count}\r\n        />\r\n        <Counter\r\n          title={\r\n            totals.restaurant_profit > 0\r\n              ? 'Gross Restaurant Profit'\r\n              : 'Gross Restaurant Loss'\r\n          }\r\n          icon='fa fa-dollar'\r\n          displayValue={\r\n            <span\r\n              className={\r\n                totals.restaurant_profit > 0 ? 'text-success' : 'text-danger'\r\n              }\r\n            >\r\n              {Math.abs(totals.restaurant_profit).toFixed(1) + '%'}\r\n            </span>\r\n          }\r\n        />\r\n\r\n        <Counter\r\n          title={totals.bar_profit > 0 ? 'Gross Bar Profit' : 'Gross Bar Loss'}\r\n          icon='fa fa-dollar'\r\n          displayValue={\r\n            <span\r\n              className={totals.bar_profit > 0 ? 'text-success' : 'text-danger'}\r\n            >\r\n              {Math.abs(totals.bar_profit).toFixed(1) + '%'}\r\n            </span>\r\n          }\r\n        />\r\n\r\n        <Counter\r\n          title='Bar Stock Worth'\r\n          icon='fa fa-dollar'\r\n          displayValue={totals.bar_stock_worth}\r\n        />\r\n        <Counter\r\n          title='Restaurant Stock Worth'\r\n          icon='fa fa-dollar'\r\n          displayValue={totals.restaurant_stock_worth}\r\n        />\r\n        <Counter\r\n          title={<span className='text-danger'>Out of Stock!</span>}\r\n          icon='fa fa-exclamation-triangle'\r\n          displayValue={totals.out_of_stock}\r\n          extraTitle='(Bar)'\r\n        />\r\n        <Counter\r\n          title='Average Sales '\r\n          extraTitle='Per day (Bar & Restaurant)'\r\n          icon='fa fa-cart-arrow-down'\r\n          displayValue={totals.average_daily_sales}\r\n        />\r\n        <hr className='w-100 border border-secondary' />\r\n        <div className='col-xl-6 col-xxl-6 col-lg-12 col-md-12'>\r\n          <SalesGraph\r\n            barSales={totals.bar_sales || []}\r\n            restaurantSales={totals.restaurant_sales || []}\r\n            period={period}\r\n          />\r\n        </div>\r\n        <div class='col-xl-6 col-xxl-6 col-lg-12  col-lg-9 col-md-12'>\r\n          <BestSelling bestSelling={totals.best_selling || []} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(AdminDashboard);\r\n","import React from 'react';\r\nimport './category.scss';\r\n\r\nfunction Category(props) {\r\n  const {category, onItemClick} = props;\r\n\r\n  return (\r\n    <div className='category shadow shadow-secondary p-2 mb-2'>\r\n      <h5 className='text-center text-uppercase mb-1'>{category.name}</h5>\r\n      {category.goods.map((good) => (\r\n        <Item item={good} onItemClick={onItemClick} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Item(props) {\r\n  const {item, onItemClick} = props;\r\n  return (\r\n    <div\r\n      className='item p-2 link mb-2'\r\n      title='Click to add'\r\n      onClick={() => onItemClick(item)}\r\n    >\r\n      {item.name}\r\n      <div className='float-right'>\r\n        <i className='fa fa-plus'></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {places} from '../../services/constants';\r\nimport './header.scss';\r\n\r\nfunction Header(props) {\r\n  const {place} = props;\r\n\r\n  return (\r\n    <div className='employee-header w-100'>\r\n      <div className='float-left pl-3 place-icon '>\r\n        {parseInt(place) === places.BAR ? (\r\n          <i className='fas fa-glass-cheers'></i>\r\n        ) : (\r\n          <i className='fas fa-utensils'></i>\r\n        )}\r\n      </div>\r\n      <div className='dropdown float-right pr-3 dropleft'>\r\n        <button\r\n          className='btn bg-transparent dropdown-toggle '\r\n          data-toggle='dropdown'\r\n        >\r\n          <i className='fas fa-bars'></i>\r\n        </button>\r\n        <div className='dropdown-menu ' aria-labelledby='dropdownMenuButton'>\r\n          <Link className='dropdown-item ' to={`/employee/sales/${place}`}>\r\n            Sales\r\n          </Link>\r\n          <Link className='dropdown-item ' to={'/employee'}>\r\n            Main Page\r\n          </Link>\r\n          <Link className='dropdown-item ' to={'/'}>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className='h3 text-center text-white'>\r\n        {parseInt(place) === places.BAR ? 'SCRATCH BAR' : 'SCRATCH RESTAURANT'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../services/api-handle';\r\nimport {getFromLocal} from '../../services/utility';\r\nimport './process-transaction.scss';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {places} from '../../services/constants';\r\n\r\nexport default function ProcessTransaction(props) {\r\n  const {selectedItem, handleAddToCart, place} = props;\r\n  const [pricings, setPricings] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [selectedForCart, setSelectedForCart] = useState({\r\n    quantity: 1,\r\n  });\r\n  const currentUser = getFromLocal('currentUser');\r\n\r\n  useEffect(() => {\r\n    let itemId = selectedItem.id;\r\n    if (itemId) {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendGetRequest('pricings?good=' + itemId).then((res) => {\r\n              let pricings = res.data.pricings;\r\n              setPricings(pricings);\r\n              setCount(0);\r\n            })\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [selectedItem.id]);\r\n\r\n  const getCurrentPricing = () => {\r\n    if (pricings.length) {\r\n      return pricings[count] || {};\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const handleAddCart = () => {\r\n    let toSend = {\r\n      ...selectedForCart,\r\n      price: pricings[count],\r\n      ...selectedItem,\r\n    };\r\n    handleAddToCart(toSend);\r\n  };\r\n\r\n  let pricingItem = getCurrentPricing();\r\n  if (!selectedItem.name) {\r\n    return (\r\n      <div className='process-section bg-secondary pb-4'>\r\n        <h1 className='jumbotron jumbotron-fluid text-center bg-transparent  text-white '>\r\n          Hi there {currentUser.firstname},\r\n        </h1>\r\n        <p className='text-lead text-center text-warning'>\r\n          Please choose an item in the menu to proceed\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='process-section'>\r\n      <h1 className='text-center text-dark text-uppercase mb-4'>\r\n        {selectedItem.name}\r\n      </h1>\r\n\r\n      {pricings.length ? (\r\n        <>\r\n          <h3 className='text-center text-dark text-uppercase mt-4'>\r\n            Ksh {pricingItem.amount}\r\n          </h3>\r\n\r\n          <div className='add-subtract row justify-content-center'>\r\n            {pricingItem.unit === 'count' ? null : (\r\n              <>\r\n                <button\r\n                  className='btn btn-light col-3'\r\n                  onClick={() => {\r\n                    if (count > 0) {\r\n                      setCount(count - 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className='fa fa-minus'></i>\r\n                </button>\r\n                <div className='h4 text-center p-2 ml-1 mr-1'>\r\n                  {pricingItem.measure + ' ' + pricingItem.unit}\r\n                </div>\r\n                <button\r\n                  className='btn btn-light col-3'\r\n                  onClick={() => {\r\n                    if (count < pricings.length - 1) {\r\n                      setCount(count + 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className='fa fa-plus'></i>\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            <div className='w-100'></div>\r\n\r\n            <div className='form-group col-2 mt-3'>\r\n              <label htmlFor=''>Quantity</label>\r\n              <input\r\n                type='\r\n            '\r\n                className='form-control '\r\n                value={selectedForCart.quantity}\r\n                onChange={(e) =>\r\n                  setSelectedForCart({\r\n                    ...selectedForCart,\r\n                    quantity: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {(!pricingItem.quantity_remaining &&\r\n            parseInt(place) === places.BAR) ||\r\n          (pricingItem.quantity_remaining &&\r\n            parseInt(pricingItem.quantity_remaining) <\r\n              parseInt(selectedForCart.quantity) &&\r\n            parseInt(place) === places.BAR) ? (\r\n            <div className=' badge badge-danger text-white p-1 w-100'>\r\n              <h1 className='text-center'>Oops !</h1>\r\n              <h5 className='text-center'>This product is out of quantity!</h5>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className='mt-4 row justify-content-center'\r\n              onClick={handleAddCart}\r\n            >\r\n              <button className='btn btn-primary text-uppercase p-2 col-6'>\r\n                Add To Cart\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className='add-subtract bg-danger text-white p-2'>\r\n          <h1 className='text-center'>Oops !</h1>\r\n          <h5 className='text-center'>\r\n            This product do not have pricing, please add pricing in the admin\r\n            section\r\n          </h5>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {showNotification} from '../../services/api-handle';\r\nimport {\r\n  payment_methods,\r\n  places,\r\n  printer_widths,\r\n} from '../../services/constants';\r\nimport {getFormattedAmount, getFormattedMeasure} from '../../services/utility';\r\n\r\nfunction Receipt(props) {\r\n  const {cartItems, removeFromCart, handleSale, place, payObj} = props;\r\n  const [useOnlinePrice, setUseOnlinePrice] = useState(false);\r\n\r\n  const getRawTotalAmount = () => {\r\n    if (cartItems.length) {\r\n      let amount = 0;\r\n      cartItems.forEach((item) => {\r\n        if (useOnlinePrice && parseInt(item.price.online_price) === 0) {\r\n          showNotification(\r\n            'This good does not have online price. please add',\r\n            'error',\r\n            null,\r\n            'no-duplicate'\r\n          );\r\n          setUseOnlinePrice(false);\r\n          return;\r\n        }\r\n        amount +=\r\n          (useOnlinePrice\r\n            ? parseInt(item.price.online_price)\r\n            : item.price.amount) * item.quantity;\r\n      });\r\n      return amount;\r\n    }\r\n    return 0;\r\n  };\r\n  const getTotalAmount = () => {\r\n    return getFormattedAmount(getRawTotalAmount(), 1);\r\n  };\r\n\r\n  const [payment, setPayment] = useState({\r\n    payment_method: payment_methods[0],\r\n    transaction_code: '',\r\n    total: getTotalAmount(),\r\n    receiptWidth:\r\n      parseInt(place) === places.BAR\r\n        ? printer_widths.FUSION_PRINTER\r\n        : printer_widths.KITCHEN_PRINTER,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPayment({\r\n      ...payment,\r\n      ...payObj,\r\n    });\r\n  }, [payObj.sale_id, payObj]);\r\n\r\n  const checkIfUseOnline = (method) => {\r\n    let methods = [...payment_methods];\r\n    const removeFromArray = (item, arr) => {\r\n      return arr.filter((it) => it !== item);\r\n    };\r\n\r\n    methods = removeFromArray(\r\n      'Mpesa',\r\n      removeFromArray('Cash', removeFromArray('Card', methods))\r\n    );\r\n    return methods.includes(method);\r\n  };\r\n\r\n  return (\r\n    <div className='card bg-transparent border-0'>\r\n      <h4 className='text-uppercase text-center mb-3'>Receipt</h4>\r\n      {cartItems.map((item) => (\r\n        <Item\r\n          key={item.id + item.price.amount}\r\n          item={item}\r\n          removeFromCart={removeFromCart}\r\n          useOnlinePrice={useOnlinePrice}\r\n        />\r\n      ))}\r\n      <hr />\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>PAYMENT METHOD</div>\r\n        <div className='col text-center'>\r\n          <select\r\n            name=''\r\n            id=''\r\n            className='form-control'\r\n            value={payment.payment_method}\r\n            onChange={(e) => {\r\n              let payment_method = e.target.value;\r\n              setPayment({\r\n                ...payment,\r\n                payment_method,\r\n              });\r\n\r\n              let useOnline = checkIfUseOnline(payment_method);\r\n              setUseOnlinePrice(useOnline);\r\n            }}\r\n          >\r\n            {payment_methods.map((method) => (\r\n              <option value={method} key={method}>\r\n                {method}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>SUB TOTAL</div>\r\n        <div className='col text-center'>{getTotalAmount()}</div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>ADDITIONAL CHARGES</div>\r\n        <div className='col text-center'>Ksh 0</div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>TOTAL</div>\r\n        <div className='col text-center'>{getTotalAmount()}</div>\r\n      </div>\r\n      {payment.payment_method === 'Mpesa' && (\r\n        <div className='form-group  mt-3'>\r\n          <label htmlFor=''>Transaction Code</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='OK749ZTL6Y'\r\n            value={payment.transaction_code}\r\n            onChange={(e) =>\r\n              setPayment({...payment, transaction_code: e.target.value})\r\n            }\r\n          />\r\n        </div>\r\n      )}\r\n      <div className='form-group  mt-3'>\r\n        <label htmlFor=''>Customer Paid</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          placeholder='Amount customer paid'\r\n          value={payment.customer_pay}\r\n          onChange={(e) =>\r\n            setPayment({\r\n              ...payment,\r\n              customer_pay: e.target.value,\r\n              customer_change: parseFloat(e.target.value) - getRawTotalAmount(),\r\n            })\r\n          }\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label htmlFor=''>Choose Printer</label>\r\n        <select\r\n          name=''\r\n          id=''\r\n          className='form-control'\r\n          value={payment.receiptWidth}\r\n          onChange={(e) =>\r\n            setPayment({...payment, receiptWidth: e.target.value})\r\n          }\r\n        >\r\n          <option value={printer_widths.FUSION_PRINTER}>Fusion Printer</option>\r\n          <option value={printer_widths.KITCHEN_PRINTER}>\r\n            Kitchen Printer\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div className='mt-4 row justify-content-center '>\r\n        <button\r\n          className='btn btn-secondary text-uppercase p-1 mr-2'\r\n          onClick={() =>\r\n            handleSale({\r\n              ...payment,\r\n              total: getTotalAmount(),\r\n              continueToPrint: false,\r\n            })\r\n          }\r\n        >\r\n          {payment.sale_id ? 'Edit' : 'Confirm'}\r\n        </button>\r\n        <button\r\n          className='btn btn-success text-uppercase p-1 ml-2'\r\n          onClick={() =>\r\n            handleSale({\r\n              ...payment,\r\n              total: getTotalAmount(),\r\n              continueToPrint: true,\r\n            })\r\n          }\r\n        >\r\n          {payment.sale_id ? 'Edit' : 'Confirm'} & Print\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Item(props) {\r\n  const {item, removeFromCart, useOnlinePrice} = props;\r\n  const [itemPrice, setItemPrice] = useState('Ksh 0');\r\n\r\n  useEffect(() => {\r\n    setItemPrice(\r\n      getFormattedAmount(\r\n        useOnlinePrice ? item.price.online_price : item.price.amount,\r\n        item.quantity\r\n      )\r\n    );\r\n  }, [\r\n    item.quantity,\r\n    item.price.online_price,\r\n    item.price.amount,\r\n    useOnlinePrice,\r\n  ]);\r\n\r\n  return (\r\n    <div className='item p-2  mb-2'>\r\n      <div className='row'>\r\n        <div className='col text-left'>{item.name}</div>\r\n        <div className='col text-center'>\r\n          {getFormattedMeasure(item.price.unit, item.price.measure)}\r\n        </div>\r\n        <div className='col text-center'>{item.quantity}</div>\r\n        <div className='col text-center'>{itemPrice}</div>\r\n        <div\r\n          className='col text-right link'\r\n          onClick={() => removeFromCart(item)}\r\n        >\r\n          <i className='fa fa-times'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Receipt;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../services/api-handle';\r\nimport {formatDate} from '../../services/utility';\r\nimport './receipt-print.scss';\r\n\r\nimport {jsPDF} from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\nexport default function ReceiptPrint(props) {\r\n  const {width, sale_id} = props;\r\n\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [payment, setPayment] = useState({});\r\n  const [count, setCount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    let url = 'sales/cart-items/' + sale_id;\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          setCartItems(res.data.cart_items);\r\n          setPayment(res.data.sale);\r\n        })\r\n      )\r\n    );\r\n  }, [sale_id]);\r\n  const onAfterPrint = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const printAndroid = () => {\r\n    setCount(1);\r\n    for (let i = 1; i <= 2; i++) {\r\n      setCount(i);\r\n      html2canvas(document.getElementById('receipt')).then((canvas) => {\r\n        const imgData = canvas.toDataURL('image/png');\r\n        const pdf = new jsPDF();\r\n        pdf.addImage(imgData, 'JPEG', 0, 0);\r\n        pdf.save(`receipt${sale_id}-${i === 1 ? 'bill' : 'order'}.pdf`);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    setCount(1);\r\n    for (let i = 1; i <= 2; i++) {\r\n      setCount(i);\r\n      window.print();\r\n    }\r\n    onAfterPrint();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='ticket'\r\n        style={{width: width, maxWidth: width}}\r\n        id='receipt'\r\n      >\r\n        <p className='centered'>\r\n          SCRATCH KITCHEN LTD\r\n          <br />\r\n          {count === 1 ? 'CUSTOMER BILL' : 'ORDER'}\r\n          <br />\r\n          <small>\r\n            P.O.BOX 102358-00101 NRB TELEPHONE: 0791 482 995/0756936852\r\n          </small>\r\n          <br />\r\n          <small style={{fontWeight: 'bolder'}}>Till No. 4028177</small>\r\n        </p>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className='description'>Description</th>\r\n              <th className='quantity'>Q.</th>\r\n              <th className='price'>@</th>\r\n              <th className='price'>S.T</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cartItems.map((item) => (\r\n              <tr key={item.id}>\r\n                <td className='description'>{item.name}</td>\r\n                <td className='quantity'>{item.quantity}</td>\r\n                <td className='price'>{item.price.amount}</td>\r\n                <td className='price'>{item.price.amount * item.quantity}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <td className='description centered' colSpan='2'>\r\n                Total\r\n              </td>\r\n              <td className='price' colSpan='2'>\r\n                {payment.total}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p className='centered'>\r\n          Served by\r\n          {' ' +\r\n            payment.firstname +\r\n            ' ' +\r\n            payment.lastname +\r\n            ' at ' +\r\n            formatDate(payment.created_at)}\r\n          <br />\r\n          askscratchkitchen@gmail.com /ig@scratchkitchen\r\n        </p>\r\n      </div>\r\n      <div\r\n        className='justify-content-center  row hidden-print'\r\n        style={{width: width, maxWidth: width}}\r\n      >\r\n        <button\r\n          className='btn btn-secondary ml-2'\r\n          onClick={() => onAfterPrint()}\r\n        >\r\n          Back\r\n        </button>\r\n        <button\r\n          id='btnPrint'\r\n          className='hidden-print btn btn-dark ml-5 print-computer'\r\n          onClick={handlePrint}\r\n        >\r\n          Print\r\n        </button>\r\n        <button\r\n          id='btnPrint'\r\n          className='hidden-print btn btn-dark ml-5 print-android'\r\n          onClick={printAndroid}\r\n        >\r\n          Download Pdf\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {getFromLocal} from '../../services/utility';\r\n\r\nfunction withEmployeeValidation(WrappedComponent) {\r\n  return class WithEmployeeValidation extends Component {\r\n    render() {\r\n      let currentUser = getFromLocal('currentUser');\r\n      if (!currentUser || currentUser.isAdmin) {\r\n        this.props.history.push('/');\r\n        return <></>;\r\n      }\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n}\r\n\r\nexport default withEmployeeValidation;\r\n","import React, {Component} from 'react';\r\nimport Category from '../../components/category/category';\r\nimport Header from '../../components/header/header';\r\nimport ProcessTransaction from '../../components/process-transaction/process-transaction';\r\nimport Receipt from '../../components/receipt/receipt';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n  showNotification,\r\n} from '../../services/api-handle';\r\nimport {\r\n  formatUrl,\r\n  getFormattedMeasure,\r\n  getFromLocal,\r\n} from '../../services/utility';\r\nimport './employee.scss';\r\nimport ReceiptPrint from '../../components/receipt/receipt-print';\r\nimport withEmployeeValidation from './with-employee-validation';\r\nimport {trackPromise} from 'react-promise-tracker';\r\n\r\nclass EmployeeDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n      filteredCategories: [],\r\n      selectedCategoryId: '',\r\n      q: '',\r\n      selectedItem: {},\r\n      cartItems: [],\r\n      payment: {},\r\n      showPrint: false,\r\n      saleId: '',\r\n    };\r\n    this.receiptRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.getCategories();\r\n    let saleId = this.props.match.params.sale_id;\r\n    if (saleId) {\r\n      this.setState({saleId});\r\n      let url = 'sales/cart-items/' + saleId;\r\n\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(sendGetRequest(url)).then((res) => {\r\n            let cartItems = res.data.cart_items;\r\n            let sale = res.data.sale;\r\n            let payment = {\r\n              payment_method: sale.payment_method,\r\n              customer_pay: sale.customer_pay,\r\n              transaction_code: sale.transaction_code,\r\n              sale_id: sale.id,\r\n              customer_change: sale.customer_change,\r\n            };\r\n            this.setState({cartItems, payment});\r\n          })\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  getCategories() {\r\n    let place = this.props.match.params.id;\r\n\r\n    let url = formatUrl('categories', {place});\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let categories = res.data.categories;\r\n          this.setState({\r\n            categories: categories,\r\n            filteredCategories: categories,\r\n          });\r\n        })\r\n      )\r\n    );\r\n  }\r\n  getFilteredCategories() {\r\n    const {selectedCategoryId, q} = this.state;\r\n    let place = this.props.match.params.id;\r\n\r\n    let url = formatUrl(\r\n      'categories/filtered',\r\n      {category: selectedCategoryId},\r\n      {q},\r\n      {place}\r\n    );\r\n    handleError(\r\n      handleSuccess(sendGetRequest(url)).then((res) => {\r\n        this.setState({filteredCategories: res.data.categories});\r\n      })\r\n    );\r\n  }\r\n\r\n  handleChangeCategory = (e) => {\r\n    this.setState({selectedCategoryId: e.target.value}, () =>\r\n      this.getFilteredCategories()\r\n    );\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    this.setState({q: e.target.value}, () => this.getFilteredCategories());\r\n  };\r\n\r\n  onItemClick = (selectedItem) => {\r\n    this.setState({selectedItem});\r\n  };\r\n\r\n  handleAddToCart = (item) => {\r\n    let {cartItems} = this.state;\r\n    let index = cartItems.findIndex(\r\n      (cItem) =>\r\n        cItem.id === item.id && item.price.measure === cItem.price.measure\r\n    );\r\n    if (index >= 0) {\r\n      showNotification('Item updated in the cart', 'success', 'bottom-right');\r\n      cartItems[index] = item;\r\n    } else {\r\n      showNotification('Item added to cart', 'success', 'bottom-right');\r\n      cartItems.push(item);\r\n    }\r\n\r\n    this.setState({cartItems});\r\n  };\r\n\r\n  removeFromCart = (item) => {\r\n    let {cartItems} = this.state;\r\n\r\n    let index = cartItems.findIndex(\r\n      (cItem) =>\r\n        cItem.id === item.id && item.price.measure === cItem.price.measure\r\n    );\r\n    if (index >= 0) {\r\n      cartItems.splice(index, 1);\r\n\r\n      showNotification('Item removed from cart', 'warning', 'bottom-right');\r\n      this.setState(cartItems);\r\n    }\r\n  };\r\n\r\n  handleSale = (payment) => {\r\n    const {cartItems} = this.state;\r\n    const currentUser = getFromLocal('currentUser');\r\n    const {continueToPrint, sale_id} = payment;\r\n    let addSaleUrl = 'sales';\r\n    let addHistoryUrl = 'sales/history';\r\n    let successMessage = 'Sale made successfully';\r\n    if (sale_id) {\r\n      addSaleUrl = `sales/${sale_id}/edit`;\r\n      addHistoryUrl = `sales/${sale_id}/history/edit`;\r\n      successMessage = 'Sale edited successfully';\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(addSaleUrl, {\r\n            ...payment,\r\n            sold_by: `${currentUser.id}`,\r\n            sold_goods: cartItems.length,\r\n            sold_by_text: `${currentUser.firstname} ${currentUser.lastname}`,\r\n          }).then((res) => {\r\n            let saleResp = res.data.sale;\r\n            this.setState({\r\n              payment: {\r\n                ...saleResp,\r\n                sold_by_text: `${currentUser.firstname} ${currentUser.lastname}`,\r\n                receiptWidth: payment.receiptWidth,\r\n              },\r\n            });\r\n            let goods = [];\r\n            let quantities = [];\r\n            let measures = [];\r\n            let prices = [];\r\n            let ids = [];\r\n\r\n            cartItems.forEach((item) => {\r\n              goods.push(item.id);\r\n              quantities.push(parseInt(item.quantity));\r\n              measures.push(\r\n                getFormattedMeasure(item.price.unit, item.price.measure)\r\n              );\r\n              prices.push(`Ksh ${item.price.amount}`);\r\n              ids.push(item.price.id);\r\n            });\r\n\r\n            trackPromise(\r\n              handleError(\r\n                handleSuccess(\r\n                  sendPostRequest(addHistoryUrl, {\r\n                    goods,\r\n                    quantities,\r\n                    prices,\r\n                    measures,\r\n                    sale_id: saleResp.id,\r\n                    sold_by: `${currentUser.firstname} ${currentUser.lastname}`,\r\n                    ids,\r\n                  }),\r\n                  successMessage\r\n                ).then((res) => {\r\n                  if (continueToPrint) {\r\n                    this.props.history.push(\r\n                      formatUrl('/employee/print', {\r\n                        sale_id: saleResp.id,\r\n                        width: payment.receiptWidth,\r\n                      })\r\n                    );\r\n                  } else {\r\n                    this.onAfterPrint();\r\n                  }\r\n                })\r\n              )\r\n            );\r\n          })\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  onAfterPrint = () => {\r\n    let place = this.props.match.params.id;\r\n    this.setState({\r\n      selectedItem: {},\r\n      cartItems: [],\r\n      payment: {},\r\n      showPrint: false,\r\n    });\r\n    this.props.history.push('/employee/dashboard/' + place);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      categories,\r\n      filteredCategories,\r\n      q,\r\n      selectedItem,\r\n      cartItems,\r\n      payment,\r\n      showPrint,\r\n    } = this.state;\r\n\r\n    if (showPrint) {\r\n      return (\r\n        <ReceiptPrint\r\n          cartItems={cartItems}\r\n          payment={payment}\r\n          printReceipt={this.printReceipt}\r\n          onAfterPrint={this.onAfterPrint}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className='container-fluid hidden-print'>\r\n        <div className='row'>\r\n          <Header place={this.props.match.params.id} />\r\n\r\n          <div className='col-md-12 row mt-2 justify-content-center'>\r\n            <div className='col-sm  side-part p-2 section'>\r\n              <div className='input-group mb-3'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Search anything'\r\n                  aria-label=\"Recipient's username\"\r\n                  aria-describedby='basic-addon2'\r\n                  value={q}\r\n                  onChange={this.handleSearch}\r\n                />\r\n                <div className='input-group-append'>\r\n                  <button className='btn btn-outline-secondary' type='button'>\r\n                    <i className='fa fa-search'></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <label htmlFor='category'>Select Category</label>\r\n                <select\r\n                  name='\r\n                '\r\n                  id=''\r\n                  className='form-control'\r\n                  onChange={this.handleChangeCategory}\r\n                >\r\n                  <option value=''>All Categories</option>\r\n                  {categories.map((category) => (\r\n                    <option value={category.id} key={category.id}>\r\n                      {category.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {filteredCategories.map((category) =>\r\n                category.goods.length ? (\r\n                  <Category\r\n                    category={category}\r\n                    onItemClick={this.onItemClick}\r\n                    key={category.id}\r\n                  />\r\n                ) : null\r\n              )}\r\n            </div>\r\n\r\n            <div className='col-sm border-right border-dark border-left border-dark section'>\r\n              <ProcessTransaction\r\n                selectedItem={selectedItem}\r\n                handleAddToCart={this.handleAddToCart}\r\n                place={this.props.match.params.id}\r\n              />\r\n            </div>\r\n            <div className='col-sm'>\r\n              <Receipt\r\n                cartItems={cartItems}\r\n                removeFromCart={this.removeFromCart}\r\n                handleSale={this.handleSale}\r\n                place={this.props.match.params.id}\r\n                payObj={payment}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeDashboard);\r\n","import React, {useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\n\r\nimport {toast} from 'react-toastify';\r\nimport Modal from '../../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {objetPropEmpty} from '../../../services/utility';\r\n\r\nfunction AddEmployee(props) {\r\n  const {handleClose} = props;\r\n  const [admin, setAdmin] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n  });\r\n\r\n  const updateEmpProp = (obj) => {\r\n    setAdmin({...admin, ...obj});\r\n  };\r\n\r\n  const saveEmployee = () => {\r\n    if (admin.password !== admin.confirm_password) {\r\n      toast.error('The two passwords do not match');\r\n    } else if (objetPropEmpty(admin)) {\r\n      toast.error('Do not leave fields empty');\r\n    } else {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendPostRequest('employees', admin),\r\n            'Employee added successfully'\r\n          ).then((res) => {\r\n            handleClose();\r\n          })\r\n        )\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>New Employee</div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>First name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter firstname'\r\n              value={admin.firstname}\r\n              onChange={(e) => updateEmpProp({firstname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Last name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter lastname'\r\n              value={admin.lastname}\r\n              onChange={(e) => updateEmpProp({lastname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Phone Number</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter phone number'\r\n              value={admin.phone}\r\n              onChange={(e) => updateEmpProp({phone: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Email</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter email'\r\n              value={admin.email}\r\n              onChange={(e) => updateEmpProp({email: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Password</label>\r\n            <input\r\n              type='password'\r\n              className='form-control'\r\n              placeholder='Enter password'\r\n              value={admin.password}\r\n              onChange={(e) => updateEmpProp({password: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Confirm Password</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Confirm password'\r\n              value={admin.confirm_password}\r\n              onChange={(e) =>\r\n                updateEmpProp({confirm_password: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={saveEmployee}>\r\n              Save Employee\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddEmployee;\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport AddEmployee from './add-employee';\r\n\r\nclass Employees extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddEmployee: false,\r\n      employees: [],\r\n    };\r\n  }\r\n  fetchEmployees() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('employees')).then((res) => {\r\n          let employees = res.data;\r\n          this.setState({employees});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchEmployees();\r\n  }\r\n\r\n  updateShowAdmin = (showAddEmployee) => {\r\n    this.setState({showAddEmployee});\r\n  };\r\n\r\n  onDelete = (employee) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`employees/${employee.id}/delete`),\r\n          'Employee deleted successfully'\r\n        ).then((res) => this.fetchEmployees())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddEmployee, employees} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddEmployee && (\r\n          <AddEmployee\r\n            handleClose={() => {\r\n              this.updateShowAdmin(false);\r\n              this.fetchEmployees();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Employees </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAdmin(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Phone Number</th>\r\n                <th>Email</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {employees.map((emp, index) => (\r\n                <tr key={emp.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{emp.firstname + ' ' + emp.lastname}</td>\r\n                  <td>{emp.phone}</td>\r\n                  <td>{emp.email}</td>\r\n                  <td>\r\n                    <span title={formatDate(emp.updated_at)}>\r\n                      {getDateTimeAgo(emp.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(emp)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Employees);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../services/api-handle';\r\nimport {user_types} from '../../services/constants';\r\nimport {removeFromLocalStorage, storeUserLocally} from '../../services/utility';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        level: user_types.EMPLOYEE,\r\n      },\r\n    };\r\n  }\r\n\r\n  updatePropChange = (obj) => {\r\n    this.setState({\r\n      user: {\r\n        ...this.state.user,\r\n        ...obj,\r\n      },\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    removeFromLocalStorage('currentUser');\r\n  }\r\n\r\n  handleLogin = () => {\r\n    const {user} = this.state;\r\n    let url = 'admins/login';\r\n    let successMessage = 'Login successful';\r\n    let redirectUrl = '/admin';\r\n    let isAdmin = user.level === user_types.ADMIN;\r\n    if (!isAdmin) {\r\n      url = 'employees/login';\r\n      redirectUrl = '/employee';\r\n    }\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendPostRequest(url, user), successMessage).then(\r\n          (res) => {\r\n            let user = res.data.user;\r\n            storeUserLocally('currentUser', {\r\n              ...user,\r\n              isAdmin,\r\n            });\r\n            this.props.history.push(redirectUrl);\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {user} = this.state;\r\n    return (\r\n      <div className='container'>\r\n        <div className='row justify-content-center'>\r\n          <div className='card shadow shadow-secondary mt-4'>\r\n            <div className='card-body'>\r\n              <h1 className='jumbotron jumbotron-fluid bg-transparent'>\r\n                SCRATCH KITCHEN\r\n              </h1>\r\n              <hr />\r\n              <div className='form-group row justify-content-center'>\r\n                <div\r\n                  className='btn-group col-12'\r\n                  role='group'\r\n                  aria-label='Basic example'\r\n                >\r\n                  <button\r\n                    type='button'\r\n                    className={`btn btn-${\r\n                      user.level === user_types.EMPLOYEE\r\n                        ? 'white border-dark'\r\n                        : 'dark'\r\n                    }`}\r\n                    onClick={() =>\r\n                      this.updatePropChange({level: user_types.ADMIN})\r\n                    }\r\n                  >\r\n                    Admin\r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    className={`btn btn-${\r\n                      user.level === user_types.ADMIN\r\n                        ? 'white border-dark'\r\n                        : 'dark'\r\n                    }`}\r\n                    onClick={() =>\r\n                      this.updatePropChange({level: user_types.EMPLOYEE})\r\n                    }\r\n                  >\r\n                    Employee\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <label htmlFor='email'>Email</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Enter email'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({email: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='username'>Password</label>\r\n                <input\r\n                  type='password'\r\n                  className='form-control'\r\n                  placeholder='Enter password'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({password: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <hr />\r\n              <div className='row justify-content-center'>\r\n                <button\r\n                  className='btn btn-primary col-6'\r\n                  onClick={this.handleLogin}\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport Modal from '../../../components/modal/modal';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Categories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  fetchCategories() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('categories')).then((res) => {\r\n          this.setState({categories: res.data.categories});\r\n        })\r\n      )\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.fetchCategories();\r\n  }\r\n\r\n  updateShowAddCategory = (showAddCategory) => {\r\n    this.setState({showAddCategory});\r\n  };\r\n\r\n  onDelete = (category) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`categories/${category.id}/delete`),\r\n          'Category deleted successfully'\r\n        ).then((res) => this.fetchCategories())\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {showAddCategory, categories} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddCategory && (\r\n          <AddCategory\r\n            handleClose={() => {\r\n              this.updateShowAddCategory(false);\r\n              this.fetchCategories();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Categories </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAddCategory(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Created</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {categories.map((category, index) => (\r\n                <tr key={category.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/admin/products/${category.id}`}\r\n                      className='link'\r\n                    >\r\n                      {category.name}\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    {category.place === places.BAR ? 'Bar' : 'Restaurant'}\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(category.created_at)}>\r\n                      {getDateTimeAgo(category.created_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(category.updated_at)}>\r\n                      {getDateTimeAgo(category.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(category)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction AddCategory(props) {\r\n  const {handleClose} = props;\r\n  const [category, setCategory] = useState({});\r\n  const onSave = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('categories', category),\r\n          'Category added successfully'\r\n        ).then((res) => handleClose())\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className='modal-header'>\r\n        <div className='h4 text-center'>Add Category</div>\r\n      </div>\r\n      <div className='modal-body'>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Type</label>\r\n          <select\r\n            name=''\r\n            id=''\r\n            className='form-control'\r\n            onChange={(e) => setCategory({...category, place: e.target.value})}\r\n          >\r\n            <option value=''>Select Type</option>\r\n            <option value={places.BAR}>Bar</option>\r\n            <option value={places.RESTAURANT}>Restaurant</option>\r\n          </select>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Enter name '\r\n            value={category.name}\r\n            onChange={(e) => setCategory({...category, name: e.target.value})}\r\n          />\r\n        </div>\r\n\r\n        <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n          <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n            Cancel\r\n          </button>\r\n          <button className='btn btn-primary col-4' onClick={onSave}>\r\n            Save Category\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default withTemplate(Categories);\r\n","import React, {Component, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport Modal from '../../../components/modal/modal';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Goods extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddProduct: false,\r\n      products: [],\r\n      category: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.fetchProducts();\r\n  }\r\n\r\n  fetchProducts() {\r\n    let categoryId = this.props.match.params.id;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(`products?category=${categoryId}`)).then(\r\n          (res) => {\r\n            let {products, category} = res.data;\r\n            this.setState({products, category});\r\n          }\r\n        )\r\n      )\r\n    );\r\n  }\r\n  updateShowAddProduct = (showAddProduct) => {\r\n    this.setState({showAddProduct});\r\n  };\r\n  onDelete = (good) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`products/${good.id}/delete`),\r\n          'Product deleted successfully'\r\n        ).then((res) => this.fetchProducts())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddProduct, products, category} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddProduct && (\r\n          <AddProduct\r\n            handleClose={() => {\r\n              this.updateShowAddProduct(false);\r\n              this.fetchProducts();\r\n            }}\r\n            category={this.props.match.params.id}\r\n          />\r\n        )}\r\n        <h2>{`Products (${category.name})`}</h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAddProduct(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Created</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product, index) => (\r\n                <tr>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/admin/products/${product.id}/pricing`}\r\n                      className='link'\r\n                    >\r\n                      {product.name}\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(product.created_at)}>\r\n                      {getDateTimeAgo(product.created_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(product.updated_at)}>\r\n                      {getDateTimeAgo(product.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(product)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction AddProduct(props) {\r\n  const {handleClose, category} = props;\r\n  const [product, setProduct] = useState({});\r\n\r\n  const onSave = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('products', {...product, category}),\r\n          'Product added successfully'\r\n        ).then((res) => handleClose())\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className='modal-header'>\r\n        <div className='h4 text-center'>Add Product</div>\r\n      </div>\r\n      <div className='modal-body'>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Enter name '\r\n            value={product.name}\r\n            onChange={(e) => setProduct({...product, name: e.target.value})}\r\n          />\r\n        </div>\r\n\r\n        <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n          <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n            Cancel\r\n          </button>\r\n          <button className='btn btn-primary col-4' onClick={onSave}>\r\n            Save Product\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nexport default withTemplate(Goods);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {toast} from 'react-toastify';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {\r\n  formatDate,\r\n  getDateTimeAgo,\r\n  getFormattedMeasure,\r\n  getFromLocal,\r\n} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Pricing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pricings: [],\r\n      selectedPricing: {},\r\n      good: {},\r\n    };\r\n  }\r\n\r\n  getPricings() {\r\n    let goodId = this.props.match.params.id;\r\n    if (!goodId) {\r\n      toast.warn('The good id is required to view this page');\r\n      this.props.history.goBack();\r\n      return;\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('pricings?good=' + goodId)).then((res) => {\r\n          let pricings = res.data.pricings;\r\n          let good = res.data.good;\r\n          this.setState({pricings, good});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPricings();\r\n  }\r\n\r\n  updatePropChange = (obj) => {\r\n    this.setState({\r\n      selectedPricing: {\r\n        ...this.state.selectedPricing,\r\n        ...obj,\r\n      },\r\n    });\r\n  };\r\n\r\n  addPricing = () => {\r\n    const {selectedPricing} = this.state;\r\n    let goodId = this.props.match.params.id;\r\n    const currentUser = getFromLocal('currentUser') || {};\r\n\r\n    let url = 'pricings',\r\n      successMessage = 'Price added successfully';\r\n    if (selectedPricing.id) {\r\n      url = `pricings/${selectedPricing.id}/edit`;\r\n      successMessage = 'Price updated successfully';\r\n    }\r\n\r\n    selectedPricing.good = goodId;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(url, {\r\n            ...selectedPricing,\r\n            updated_by: `${currentUser.firstname} ${currentUser.lastname}`,\r\n          }),\r\n          successMessage\r\n        ).then((res) => {\r\n          this.setState({selectedPricing: {}});\r\n          this.getPricings();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  showEditPricing = (selectedPricing) => {\r\n    this.setState({selectedPricing});\r\n  };\r\n  onDelete = (pricing) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`pricings/${pricing.id}/delete`)\r\n        ).then((res) => this.getPricings())\r\n      )\r\n    );\r\n  };\r\n\r\n  displayProfileLossBadge = (buyingPrice, selllingPrice) => {\r\n    let percent = ((selllingPrice - buyingPrice) / buyingPrice) * 100;\r\n    let badgeClass = 'badge badge-danger ml-2',\r\n      displayText = 'loss';\r\n    if (percent >= 0) {\r\n      badgeClass = ' badge badge-success ml-2';\r\n      displayText = 'profit';\r\n    }\r\n\r\n    return (\r\n      <span className={badgeClass}>\r\n        {Math.abs(percent.toFixed(2)) + '% ' + displayText}\r\n      </span>\r\n    );\r\n  };\r\n  render() {\r\n    const {pricings, selectedPricing, good} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2>{`Pricing (${good.name})`} </h2>\r\n        <div className='card'>\r\n          <div className='card-body'>\r\n            <div className='row'>\r\n              <div className='form-group'>\r\n                <label htmlFor=''>Unit</label>\r\n                <select\r\n                  name=''\r\n                  id=''\r\n                  className='form-control'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({unit: e.target.value})\r\n                  }\r\n                  value={selectedPricing.unit || ''}\r\n                >\r\n                  <option value=''>Select Unit</option>\r\n                  <option value='ml'>ML</option>\r\n                  <option value='kg'>KG</option>\r\n                  <option value='count'>Count</option>\r\n                </select>\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Measure - {selectedPricing.unit}</label>\r\n\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Eg 1/4'\r\n                  value={selectedPricing.measure || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({measure: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Buying Price</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder=' Eg 200'\r\n                  value={selectedPricing.buying_price || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({buying_price: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Retail Price</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder=' Eg 300'\r\n                  value={selectedPricing.amount || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({amount: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Online Price</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder=' Eg 400'\r\n                  value={selectedPricing.online_price || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({online_price: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-2 mt-2 '>\r\n                <button\r\n                  className='btn btn-primary mt-4 w-100'\r\n                  onClick={this.addPricing}\r\n                >\r\n                  {selectedPricing.id ? (\r\n                    <i className='fa fa-edit mr-2'></i>\r\n                  ) : (\r\n                    <i className='fa fa-plus mr-2'></i>\r\n                  )}\r\n                  {selectedPricing.id ? 'Update' : 'Add'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='card mt-3'>\r\n          <div className='card-body'>\r\n            <div className='table-responsive'>\r\n              <table className='table table-striped table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Measure</th>\r\n                    <th>Buying Price</th>\r\n                    <th>Retail Price</th>\r\n                    <th>Online Price</th>\r\n                    <th>Created</th>\r\n                    <th>Updated</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {pricings.map((pricing, index) => (\r\n                    <tr key={pricing.id} className='link'>\r\n                      <td>{++index}</td>\r\n                      <td>\r\n                        {getFormattedMeasure(pricing.unit, pricing.measure)}\r\n                      </td>\r\n                      <td>{'Ksh ' + pricing.buying_price}</td>\r\n                      <td>\r\n                        {'Ksh ' + pricing.amount}\r\n                        {this.displayProfileLossBadge(\r\n                          pricing.buying_price,\r\n                          pricing.amount\r\n                        )}\r\n                      </td>\r\n\r\n                      <td>\r\n                        {'Ksh ' + pricing.online_price}\r\n                        {this.displayProfileLossBadge(\r\n                          pricing.buying_price,\r\n                          pricing.online_price\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <span title={formatDate(pricing.created_at)}>\r\n                          {getDateTimeAgo(pricing.created_at)}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <span title={formatDate(pricing.updated_at)}>\r\n                          {getDateTimeAgo(pricing.updated_at)}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <div className='d-flex justify-content-around w-75'>\r\n                          <TableIcon onClick={() => this.onDelete(pricing)}>\r\n                            <i className='fa fa-trash'></i>\r\n                          </TableIcon>\r\n                          <TableIcon\r\n                            onClick={() => this.showEditPricing(pricing)}\r\n                          >\r\n                            <i className='fa fa-edit'></i>\r\n                          </TableIcon>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Pricing);\r\n","import React from 'react';\r\nimport {places} from '../../services/constants';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nfunction EmployeeWelcome(props) {\r\n  return (\r\n    <div\r\n      className='row'\r\n      style={{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '50vh',\r\n        marginTop: '15vh',\r\n      }}\r\n    >\r\n      <h1 className='jumbotron-fluid bg-transparent text-center col-12'>\r\n        Menu\r\n      </h1>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '80px'}}\r\n        onClick={() => props.history.push(`/employee/dashboard/${places.BAR}`)}\r\n      >\r\n        <h5>\r\n          Bar <i className='float-right fas fa-glass-cheers'></i>\r\n        </h5>\r\n      </div>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '80px'}}\r\n        onClick={() =>\r\n          props.history.push(`/employee/dashboard/${places.RESTAURANT}`)\r\n        }\r\n      >\r\n        <h5>\r\n          Restaurant <i className='float-right fas fa-utensils'></i>\r\n        </h5>\r\n      </div>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '80px'}}\r\n        onClick={() =>\r\n          props.history.push(`/employee/sales/${places.RESTAURANT}`)\r\n        }\r\n      >\r\n        <h5>\r\n          Sale History <i className='float-right fas fa-history'></i>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeWelcome);\r\n","import React, {useEffect} from 'react';\r\nimport $ from 'jquery';\r\n\r\nexport default function ToolTipElement(props) {\r\n  const {children, tooltip} = props;\r\n  useEffect(() => {\r\n    $('[data-toggle=\"tooltip\"]').tooltip();\r\n  }, []);\r\n  return (\r\n    <div\r\n      className='link w-50 '\r\n      data-toggle='tooltip'\r\n      data-placement='bottom'\r\n      title={tooltip}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport ToolTipElement from '../../components/tooltip/tooltip-element';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../services/api-handle';\r\nimport {\r\n  formatDate,\r\n  formatUrl,\r\n  getFormattedAmount,\r\n  getFromLocal,\r\n} from '../../services/utility';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nfunction EmployeeSales(props) {\r\n  const currentUser = getFromLocal('currentUser');\r\n  const [sales, setSales] = useState([]);\r\n\r\n  const updateData = () => {\r\n    let url = formatUrl('sales', {sold_by: currentUser.id});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let sales = res.data.sales;\r\n          setSales(sales);\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(updateData, []);\r\n\r\n  const handleDelete = (id) => {\r\n    const updated_by = `${currentUser.firstname} ${currentUser.lastname}`;\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`sales/${id}/delete`, {sale_id: id, updated_by}),\r\n          'Sale deleted successfully'\r\n        ).then((res) => {\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n  const place = props.match.params.place;\r\n\r\n  return (\r\n    <div className='container-fluid ml-2 mr-2'>\r\n      <h4 className='text-center'>\r\n        Sales for {currentUser.firstname}\r\n        <small className='float-right'>\r\n          <span className='badge badge-success'>Total- {sales.length}</span>\r\n        </small>\r\n      </h4>\r\n      <div className='row justify-content-center'>\r\n        <div className='table-responsive'>\r\n          <table className='table table-bordered table-hover'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Date</th>\r\n                <th>Number of goods</th>\r\n                <th>Total amount</th>\r\n                <th>Payment Type</th>\r\n                <th>\r\n                  Customer Pay\r\n                  <br />\r\n                  Customer Change\r\n                </th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sales.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link to={`/employee/sales/view/${sale.id}`}>\r\n                      {formatDate(sale.created_at)}\r\n                    </Link>\r\n                  </td>\r\n                  <td>{sale.goods_count}</td>\r\n                  <td>{sale.total}</td>\r\n                  <td>{sale.payment_method}</td>\r\n                  <td>\r\n                    {getFormattedAmount(sale.customer_pay, 1)}\r\n                    <br />\r\n                    {getFormattedAmount(sale.customer_change, 1)}\r\n                  </td>\r\n                  <td>\r\n                    {sale.status !== 1 && (\r\n                      <>\r\n                        <button\r\n                          className='btn btn-danger ml-1'\r\n                          onClick={() => handleDelete(sale.id)}\r\n                        >\r\n                          <i className='fa fa-trash mr-2'></i>\r\n                          Delete\r\n                        </button>\r\n                        <button\r\n                          className='btn btn-info ml-1'\r\n                          onClick={() =>\r\n                            props.history.push(\r\n                              `/employee/dashboard/${place}/edit/${sale.id}`\r\n                            )\r\n                          }\r\n                        >\r\n                          <i className='fa fa-edit mr-2'></i>\r\n                          Edit\r\n                        </button>\r\n                      </>\r\n                    )}\r\n                    {sale.status === 2 && (\r\n                      <ToolTipElement\r\n                        tooltip={`Edited by ${sale.updated_by} at ${formatDate(\r\n                          sale.updated_at\r\n                        )}`}\r\n                      >\r\n                        <div className='badge badge-success'>Edited</div>\r\n                      </ToolTipElement>\r\n                    )}\r\n\r\n                    {sale.status === 1 && (\r\n                      <ToolTipElement\r\n                        tooltip={`Deleted by ${sale.updated_by} at ${formatDate(\r\n                          sale.updated_at\r\n                        )}`}\r\n                      >\r\n                        <div className='badge badge-danger'>Deleted</div>\r\n                      </ToolTipElement>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeSales);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  sendGetRequest,\r\n  handleError,\r\n  handleSuccess,\r\n} from '../../services/api-handle';\r\nimport {formatDate, formatUrl} from '../../services/utility';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nfunction EmployeeSaleDetail(props) {\r\n  const [sale, setSale] = useState({});\r\n  const [history, setHistory] = useState([]);\r\n  const saleId = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    let url = formatUrl('sales/history', {sale_id: saleId});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let sale = res.data.sale[0];\r\n          let history = res.data.history;\r\n          setSale(sale);\r\n          setHistory(history);\r\n        })\r\n      )\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className='container-fluid p-2 ml-2 mr-2'>\r\n      <h4 className='text-center'>Sale Details</h4>\r\n      <div className='p-2 col-12 row'>\r\n        <div className='col'>\r\n          Sold By : {`${sale.firstname} ${sale.lastname}`}\r\n        </div>\r\n        <div className='col'>Date: {formatDate(sale.created_at)}</div>\r\n        <div className='col'>Goods: {history.length}</div>\r\n        <div className='col'>Total: {sale.total}</div>\r\n      </div>\r\n      <div className='row justify-content-center pr-2 pl-2'>\r\n        <div className='table-responsive'>\r\n          <table className='table table-bordered table-hover'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Category</th>\r\n                <th>Quantity</th>\r\n                <th>Measure</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {history.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{sale.good_name}</td>\r\n                  <td>{sale.category_name}</td>\r\n                  <td>{sale.quantity}</td>\r\n                  <td>{sale.measure}</td>\r\n                  <td>{sale.price}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeSaleDetail);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleSuccess,\r\n  handleError,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatUrl, formatDate} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nfunction SaleDetail(props) {\r\n  const [sale, setSale] = useState({});\r\n  const [history, setHistory] = useState([]);\r\n  const saleId = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    let url = formatUrl('sales/history', {sale_id: saleId});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let sale = res.data.sale[0];\r\n          let history = res.data.history;\r\n          setSale(sale);\r\n          setHistory(history);\r\n        })\r\n      )\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className='mt-3'>\r\n      <h4 className='text-center'>Sale Details</h4>\r\n      <div className='p-2 col-12 row'>\r\n        <div className='col'>\r\n          Sold By : {`${sale.firstname} ${sale.lastname}`}\r\n        </div>\r\n        <div className='col'>Date: {formatDate(sale.created_at)}</div>\r\n        <div className='col'>Goods: {history.length}</div>\r\n        <div className='col'>Total: {sale.total}</div>\r\n      </div>\r\n      <div className='row justify-content-center pr-2 pl-2'>\r\n        <div className='table-responsive'>\r\n          <table className='table table-bordered table-hover'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Category</th>\r\n                <th>Quantity</th>\r\n                <th>Measure</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {history.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{sale.good_name}</td>\r\n                  <td>{sale.category_name}</td>\r\n                  <td>{sale.quantity}</td>\r\n                  <td>{sale.measure}</td>\r\n                  <td>{sale.price}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withTemplate(SaleDetail);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport ToolTipElement from '../../../components/tooltip/tooltip-element';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {\r\n  formatDate,\r\n  getFormattedAmount,\r\n  getFromLocal,\r\n} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Sales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sales: [],\r\n    };\r\n  }\r\n\r\n  updateData = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('sales')).then((res) => {\r\n          let sales = res.data.sales;\r\n          this.setState({sales});\r\n        })\r\n      )\r\n    );\r\n  };\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n  handleDelete = (id) => {\r\n    let currentUser = getFromLocal('currentUser');\r\n    const updated_by = `${currentUser.firstname} ${currentUser.lastname}`;\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`sales/${id}/delete`, {sale_id: id, updated_by}),\r\n          'Sale deleted successfully'\r\n        ).then((res) => {\r\n          this.updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {sales} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2>\r\n          Sales\r\n          <small className='float-right'>\r\n            <span className='badge badge-success'>Total- {sales.length}</span>\r\n          </small>\r\n        </h2>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Sold By</th>\r\n                <th>Payment Method</th>\r\n                <th>Number</th>\r\n                <th>Amount</th>\r\n                <th>Customer Pay</th>\r\n                <th>Customer Change</th>\r\n                <th>Date</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sales.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link to={'/admin/sales/view/' + sale.id}>\r\n                      {sale.firstname + ' ' + sale.lastname}\r\n                    </Link>\r\n                  </td>\r\n                  <td>{sale.payment_method}</td>\r\n                  <td>{sale.goods_count}</td>\r\n                  <td>{sale.total}</td>\r\n                  <td>{getFormattedAmount(sale.customer_pay, 1)}</td>\r\n                  <td>{getFormattedAmount(sale.customer_change, 1)}</td>\r\n                  <td>{formatDate(sale.created_at)}</td>\r\n                  <td>\r\n                    {sale.status === 1 && (\r\n                      <ToolTipElement\r\n                        tooltip={`Deleted by ${sale.updated_by} at ${formatDate(\r\n                          sale.updated_at\r\n                        )}`}\r\n                      >\r\n                        <div className='badge badge-danger'>Deleted</div>\r\n                      </ToolTipElement>\r\n                    )}\r\n                    {sale.status === 2 && (\r\n                      <ToolTipElement\r\n                        tooltip={`Edited by ${sale.updated_by} at ${formatDate(\r\n                          sale.updated_at\r\n                        )}`}\r\n                      >\r\n                        <div className='badge badge-success'>Edited</div>\r\n                      </ToolTipElement>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Sales);\r\n","import React from 'react';\r\nimport './loader.scss';\r\nimport {usePromiseTracker} from 'react-promise-tracker';\r\n\r\nfunction Loader() {\r\n  const {promiseInProgress} = usePromiseTracker();\r\n  if (promiseInProgress) {\r\n    return (\r\n      <div className='loader-container hidden-print'>\r\n        <div className='loader'>\r\n          <span>Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n\r\nexport default Loader;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Modal from '../../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {getFromLocal} from '../../../services/utility';\r\n\r\nexport default function AddStock(props) {\r\n  const {handleCloseModal, updateData, selectedStock, selectedPlace} = props;\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [stock, setStock] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (selectedStock.id) {\r\n      setStock(selectedStock);\r\n      setIsEdit(true);\r\n    }\r\n  }, [selectedStock]);\r\n\r\n  const handleSubmit = () => {\r\n    let url = '',\r\n      successMessage = '';\r\n    const currentUser = getFromLocal('currentUser') || {};\r\n\r\n    if (selectedPlace === places.RESTAURANT) {\r\n      url = 'stock/add-restaurant';\r\n      successMessage = 'Stock added successfully';\r\n\r\n      if (isEdit) {\r\n        url = 'stock/edit-restaurant';\r\n        successMessage = 'Stock edited successfully';\r\n      }\r\n    } else {\r\n      if (isEdit) {\r\n        url = `pricings/${stock.id}/edit`;\r\n        successMessage = 'Stock updated successfully';\r\n        stock.quantity_remaining = stock.quantity;\r\n        stock.buying_price = stock.price;\r\n      }\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(url, {\r\n            ...stock,\r\n            updated_by: `${currentUser.firstname} ${currentUser.lastname}`,\r\n          }),\r\n          successMessage\r\n        ).then((res) => {\r\n          setStock({});\r\n          handleCloseModal();\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateStockChange = (obj) => {\r\n    setStock({...stock, ...obj});\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>\r\n            {isEdit ? 'Edit Stock' : 'New Stock'}\r\n          </div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='E.g Salt'\r\n              value={stock.stock_name}\r\n              onChange={(e) => updateStockChange({stock_name: e.target.value})}\r\n              disabled={selectedPlace === places.BAR}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Buying Price</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Eg 300'\r\n              value={stock.price}\r\n              onChange={(e) => updateStockChange({price: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Quantity</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Eg 2Kg'\r\n              value={stock.quantity}\r\n              onChange={(e) => updateStockChange({quantity: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button\r\n              className='btn btn-secondary col-4'\r\n              onClick={handleCloseModal}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={handleSubmit}>\r\n              Save Stock\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {formatUrl} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport AddStock from './add-stock';\r\n\r\nclass Stock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedPlace: places.BAR,\r\n      stock: [],\r\n      showAddStock: false,\r\n      selectedStock: {},\r\n    };\r\n  }\r\n\r\n  updateData = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendGetRequest(formatUrl('stock', {place: this.state.selectedPlace}))\r\n        ).then((res) => {\r\n          let {stock} = res.data;\r\n          this.setState({stock, selectedStock: {}});\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n\r\n  updatePropChange = (obj) => {\r\n    this.setState({...this.state, ...obj}, () => this.updateData());\r\n  };\r\n\r\n  onDelete = (item) => {\r\n    const {selectedPlace} = this.state;\r\n    let url = `stock/${item.id}/delete`;\r\n\r\n    if (selectedPlace === places.BAR) {\r\n      url = `pricings/${item.id}/delete`;\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendPostRequest(url)).then((res) => {\r\n          this.updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  onEdit = (selectedStock) => {\r\n    this.setState({selectedStock, showAddStock: true});\r\n  };\r\n\r\n  toggleShowAdd = () => {\r\n    this.setState({showAddStock: !this.state.showAddStock, selectedStock: {}});\r\n  };\r\n\r\n  render() {\r\n    const {selectedPlace, stock, showAddStock, selectedStock} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2>Stock</h2>\r\n        {showAddStock && (\r\n          <AddStock\r\n            selectedStock={selectedStock}\r\n            handleCloseModal={this.toggleShowAdd}\r\n            updateData={this.updateData}\r\n            selectedPlace={selectedPlace}\r\n          />\r\n        )}\r\n        <div className='row '>\r\n          <div className='col row justify-content-start'>\r\n            <div className='form-group'>\r\n              <div\r\n                className='btn-group col-12'\r\n                role='group'\r\n                aria-label='Basic example'\r\n              >\r\n                <button\r\n                  type='button'\r\n                  className={`btn btn-${\r\n                    selectedPlace === places.RESTAURANT\r\n                      ? 'white border-dark'\r\n                      : 'dark'\r\n                  }`}\r\n                  onClick={() =>\r\n                    this.updatePropChange({selectedPlace: places.BAR})\r\n                  }\r\n                >\r\n                  Bar Stock\r\n                </button>\r\n                <button\r\n                  type='button'\r\n                  className={`btn btn-${\r\n                    selectedPlace === places.BAR ? 'white border-dark' : 'dark'\r\n                  }`}\r\n                  onClick={() =>\r\n                    this.updatePropChange({selectedPlace: places.RESTAURANT})\r\n                  }\r\n                >\r\n                  Restaurant Stock\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col row justify-content-end'>\r\n            {selectedPlace === places.RESTAURANT && (\r\n              <div className='form-group'>\r\n                <button className='btn btn-info' onClick={this.toggleShowAdd}>\r\n                  <i className='fa fa-plus mr-2'></i>\r\n                  Add Stock\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Good</th>\r\n                <th>Quantity</th>\r\n                <th>@</th>\r\n                <th>Total</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {stock.map((item, index) => (\r\n                <tr key={item.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={formatUrl('/admin/stock/history', {\r\n                        stock: item.id,\r\n                        place: selectedPlace,\r\n                      })}\r\n                    >\r\n                      {item.stock_name}\r\n                    </Link>\r\n                  </td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{'Ksh ' + item.buying_price || '_'}</td>\r\n                  <td>{'Ksh ' + item.price}</td>\r\n                  <td>\r\n                    <div className='d-flex justify-content-center w-75'>\r\n                      <TableIcon onClick={() => this.onDelete(item)}>\r\n                        <i className='fa fa-trash'></i>\r\n                      </TableIcon>\r\n                      <TableIcon onClick={() => this.onEdit(item)}>\r\n                        <i className='fa fa-edit'></i>\r\n                      </TableIcon>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Stock);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {action_types} from '../../../services/constants';\r\nimport {\r\n  formatDate,\r\n  formatUrl,\r\n  getDateTimeAgo,\r\n  convertObjectToArray,\r\n} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass StockHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [],\r\n      stock: {},\r\n    };\r\n  }\r\n\r\n  updateData = () => {\r\n    const {stock, place} = this.props;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendGetRequest(formatUrl('stock/history', {stock_id: stock, place}))\r\n        ).then((res) => {\r\n          const {history, stock} = res.data;\r\n          this.setState({history, stock});\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n\r\n  getBadgeColor = (action_type) => {\r\n    let action =\r\n      convertObjectToArray(action_types).find(\r\n        (act) => act.value === parseInt(action_type)\r\n      ) || {};\r\n\r\n    return (\r\n      <span className={`badge badge-${action.badgeColor}`}>\r\n        {action.display}\r\n      </span>\r\n    );\r\n  };\r\n  render() {\r\n    const {history, stock} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h3 className='text-center mb-2'>Stock history</h3>\r\n        <div className='card'>\r\n          <div className='card-header'>\r\n            <div className='row'>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Stock Name</h6>\r\n                <p className='text-dark'>{stock.stock_name}</p>\r\n              </div>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Current Quantity</h6>\r\n                <p className='text-dark'>{stock.quantity}</p>\r\n              </div>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Total Stock Cost</h6>\r\n                <p className='text-dark'>{stock.price}</p>\r\n              </div>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Created</h6>\r\n                <p className='text-dark'>{formatDate(stock.created_at)}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='card-body'>\r\n            <div className='table-responsive'>\r\n              <table className='table table-striped table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Date</th>\r\n                    <th>Buying Price</th>\r\n                    <th>Quantity</th>\r\n                    <th>Action Type</th>\r\n                    <th>Updated By</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {history.map((hst, index) => (\r\n                    <tr key={hst.id}>\r\n                      <td>{++index}</td>\r\n                      <td title={formatDate(hst.updated_at)}>\r\n                        {getDateTimeAgo(hst.updated_at)}\r\n                      </td>\r\n                      <td>{'Ksh ' + hst.buying_price}</td>\r\n                      <td>{hst.quantity}</td>\r\n                      <td>{this.getBadgeColor(hst.action_type)}</td>\r\n                      <td>{hst.updated_by}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(StockHistory);\r\n","import {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport Admins from './pages/admin/admins/admins';\r\nimport AdminDashboard from './pages/admin/dashboard/admin-dashboard';\r\nimport EmployeeDashboard from './pages/employee/employee-dashboard';\r\nimport Employees from './pages/admin/employees/employees';\r\nimport Login from './pages/login/login';\r\nimport Categories from './pages/admin/category/categories';\r\nimport Goods from './pages/admin/goods/goods';\r\nimport Pricing from './pages/admin/pricing/pricing';\r\nimport EmployeeWelcome from './pages/employee/employee-welcome';\r\nimport EmployeeSales from './pages/employee/employee-sales';\r\nimport EmployeeSaleDetail from './pages/employee/employee-sale-detai';\r\nimport SaleDetail from './pages/admin/sales/sale-detail';\r\nimport Sales from './pages/admin/sales/sales';\r\nimport Loader from './components/loader/loader';\r\nimport ReceiptPrint from './components/receipt/receipt-print';\r\nimport Stock from './pages/admin/stock/stock';\r\nimport stock from './pages/admin/stock/stock';\r\nimport StockHistory from './pages/admin/stock/stock-history';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nfunction Routes() {\r\n  let query = useQuery();\r\n  return (\r\n    <>\r\n      <Loader />\r\n\r\n      <ToastContainer hideProgressBar={true} />\r\n      <Switch>\r\n        <Route path='/login' render={(props) => <Login {...props} />}></Route>\r\n        <Route\r\n          exact\r\n          path='/employee'\r\n          render={(props) => <EmployeeWelcome {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/dashboard/:id'\r\n          render={(props) => <EmployeeDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/dashboard/:id/edit/:sale_id'\r\n          render={(props) => <EmployeeDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/sales/:place'\r\n          render={(props) => <EmployeeSales {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/sales/view/:id'\r\n          render={(props) => <EmployeeSaleDetail {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/print'\r\n          render={(props) => (\r\n            <ReceiptPrint\r\n              {...props}\r\n              sale_id={query.get('sale_id')}\r\n              width={query.get('width')}\r\n            />\r\n          )}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin'\r\n          render={(props) => <AdminDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='admin/dashboard'\r\n          render={(props) => <AdminDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/sales/view/:id'\r\n          render={(props) => <SaleDetail {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/sales'\r\n          render={(props) => <Sales {...props} />}\r\n        ></Route>\r\n\r\n        <Route\r\n          exact\r\n          path='/admin/admins'\r\n          render={(props) => <Admins {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/stock'\r\n          render={(props) => <Stock {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/stock/history'\r\n          render={(props) => (\r\n            <StockHistory\r\n              {...props}\r\n              stock={query.get('stock')}\r\n              place={query.get('place')}\r\n            />\r\n          )}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/employees'\r\n          render={(props) => <Employees {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/categories'\r\n          render={(props) => <Categories {...props} />}\r\n        ></Route>\r\n\r\n        <Route\r\n          exact\r\n          path='/admin/products/:id'\r\n          render={(props) => <Goods {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/products/:id/pricing'\r\n          render={(props) => <Pricing {...props} />}\r\n        ></Route>\r\n\r\n        <Redirect exact to='/login' />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport Routes from './routes';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import $ from 'jquery';\r\n\r\n$(document).ready(function () {\r\n  $('.nav-control').click(function () {\r\n    $('#main-wrapper').toggleClass('menu-toggle');\r\n\r\n    $('.hamburger').toggleClass('is-active');\r\n    $('.deznav').toggleClass('d-none');\r\n    $('.content-body').toggleClass('ml-0');\r\n  });\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\n\nimport 'bootstrap';\nimport 'bootstrap-select';\nimport 'global';\nimport './services/common';\nimport './sass/app.scss';\n\nwindow.$ = $;\nwindow.Popper = Popper;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}