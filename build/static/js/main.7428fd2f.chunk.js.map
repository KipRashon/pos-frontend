{"version":3,"sources":["components/table-icon/table-icon.jsx","services/api-handle.js","services/api-const.js","services/utility.js","pages/admin/header.jsx","pages/admin/sidebar.jsx","pages/admin/with-template.jsx","components/modal/modal.jsx","pages/admin/admins/add-admin.jsx","pages/admin/admins/admins.jsx","pages/admin/dashboard/admin-dashboard.jsx","components/category/category.jsx","services/constants.js","components/header/header.jsx","components/process-transaction/process-transaction.jsx","components/receipt/receipt.jsx","components/receipt/receipt-print.jsx","pages/employee/with-employee-validation.jsx","pages/employee/employee-dashboard.jsx","pages/admin/employees/add-employee.jsx","pages/admin/employees/employees.jsx","pages/login/login.jsx","pages/admin/category/categories.jsx","pages/admin/goods/goods.jsx","pages/admin/pricing/pricing.jsx","pages/employee/employee-welcome.jsx","pages/employee/employee-sales.jsx","pages/employee/employee-sale-detai.jsx","pages/admin/sales/sale-detail.jsx","pages/admin/sales/sales.jsx","components/loader/loader.jsx","routes.js","App.js","reportWebVitals.js","index.js"],"names":["TableIcon","props","children","onClick","className","API","axios","create","baseURL","showNotification","title","color","position","toast","success","warn","error","sendPostRequest","url","params","post","sendGetRequest","get","handleSuccess","promiseFunc","successMessage","then","res","handleError","catch","err","response","message","data","errors","key","forEach","objetPropEmpty","obj","console","log","getDateTimeAgo","dateStr","moment","fromNow","getFromLocal","name","JSON","parse","localStorage","getItem","removeFromLocalStorage","removeItem","formatDate","date","isValid","format","formatUrl","urlParams","args","arg","substr","length","getFormattedAmount","amount","quantity","getFormattedMeasure","unit","measure","Header","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","history","push","SideBar","id","data-feather","withTemplate","WrappedComponent","currentUser","isAdmin","this","role","React","Component","Modal","AddAdmin","handleClose","useState","firstname","lastname","email","phone","password","admin","setAdmin","updateAdminProp","htmlFor","placeholder","value","onChange","e","target","confirm_password","trackPromise","updateShowAdmin","showAddAdmin","setState","onDelete","fetchAdmins","state","admins","map","index","updated_at","sales","sale","payment_method","goods_count","total","customer_pay","customer_change","created_at","Item","item","onItemClick","Category","category","goods","good","user_types","places","payment_methods","place","parseInt","class","aria-labelledby","ProcessTransaction","selectedItem","handleAddToCart","pricings","setPricings","count","setCount","selectedForCart","setSelectedForCart","useEffect","itemId","pricingItem","toSend","price","removeFromCart","Receipt","cartItems","handleSale","getRawTotalAmount","getTotalAmount","transaction_code","payment","setPayment","method","parseFloat","ReceiptPrint","receiptRef","createRef","document","getElementById","click","onAfterPrint","trigger","content","current","removeAfterPrint","delay","ref","ReceiptItem","style","borderStyle","sold_by_text","withEmployeeValidation","handleChangeCategory","selectedCategoryId","getFilteredCategories","handleSearch","q","findIndex","cItem","splice","sold_by","sold_goods","saleResp","quantities","measures","prices","sale_id","showPrint","categories","filteredCategories","getCategories","match","printReceipt","aria-describedby","AddEmployee","updateEmpProp","showAddEmployee","employee","fetchEmployees","employees","emp","Login","updatePropChange","user","handleLogin","redirectUrl","level","toStoreInLocal","setItem","stringify","AddCategory","setCategory","updateShowAddCategory","showAddCategory","fetchCategories","AddProduct","product","setProduct","updateShowAddProduct","showAddProduct","fetchProducts","products","categoryId","selectedPricing","addPricing","goodId","getPricings","showEditPricing","pricing","goBack","alignItems","justifyContent","height","marginTop","setSales","setSale","setHistory","saleId","good_name","category_name","Loader","usePromiseTracker","promiseInProgress","Routes","hideProgressBar","path","render","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","window","$","Popper","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7428fd2f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './table-icon.scss';\r\n\r\nfunction TableIcon(props) {\r\n  const {children, onClick} = props;\r\n  return (\r\n    <div\r\n      className='icon-container p-2 link rounded-circle shadow shadow-secondary text-center'\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableIcon;\r\n","import axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport {API_URL} from './api-const';\r\nlet API = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\nexport function showNotification(title, color, position) {\r\n  if (color === 'success') {\r\n    toast.success(title, {position: position || 'top-right'});\r\n  } else if (color === 'warning') {\r\n    toast.warn(title, {position: position || 'top-right'});\r\n  } else {\r\n    toast.error(title, {position: position || 'top-right'});\r\n  }\r\n}\r\nexport function sendPostRequest(url, params) {\r\n  return API.post(url, params);\r\n}\r\n\r\nexport function sendGetRequest(url) {\r\n  return API.get(url);\r\n}\r\n\r\nexport function sendFormData(url, formData) {\r\n  return API({\r\n    url: url,\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      accept: 'application/json',\r\n    },\r\n    data: formData,\r\n  });\r\n}\r\n\r\nexport function handleSuccess(promiseFunc, successMessage) {\r\n  return promiseFunc.then((res) => {\r\n    if (showNotification) {\r\n      showNotification(successMessage, 'success');\r\n    }\r\n    return res;\r\n  });\r\n}\r\n\r\nexport function handleError(promiseFunc) {\r\n  return promiseFunc.catch((err) => {\r\n    if (err.response) {\r\n      let message = err.response.data;\r\n\r\n      if (message) {\r\n        if (message.errors) {\r\n          for (let key in message.errors) {\r\n            let error = message.errors[key];\r\n\r\n            error.forEach((err) => showNotification(err, 'danger'));\r\n          }\r\n        } else {\r\n          showNotification(message.message, 'danger');\r\n        }\r\n      } else {\r\n        showNotification('Database Error', 'danger');\r\n      }\r\n    } else {\r\n      showNotification('You are offline', 'warning');\r\n    }\r\n\r\n    return err;\r\n  });\r\n}\r\n","export const API_URL = 'https://posbackend.sk.co.ke/api';\r\n// export const API_URL = 'http://127.0.0.1:8000/api/';\r\n","import moment from 'moment';\r\n\r\nexport function objetPropEmpty(obj) {\r\n  for (let key in obj) {\r\n    console.log(obj[key]);\r\n    if (!obj[key]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getDateTimeAgo(dateStr) {\r\n  if (!dateStr) {\r\n    return '_';\r\n  }\r\n  let date = moment(dateStr);\r\n  // date.add(3, 'hours');\r\n  return date.fromNow();\r\n}\r\n\r\nexport function storeUserLocally(name, toStoreInLocal) {\r\n  localStorage.setItem(name, JSON.stringify(toStoreInLocal));\r\n}\r\nexport function getFromLocal(name) {\r\n  let fromLocalStorage = JSON.parse(\r\n    localStorage.getItem(name ? name : 'userSelection')\r\n  );\r\n  return fromLocalStorage;\r\n}\r\nexport function removeFromLocalStorage(name) {\r\n  localStorage.removeItem(name);\r\n}\r\n\r\n//function to format the date\r\nexport function formatDate(dateStr) {\r\n  if (!dateStr) {\r\n    return '_';\r\n  }\r\n\r\n  let date = moment(dateStr);\r\n  //return an empty string if the date is invalid\r\n  if (!date.isValid()) {\r\n    return '_';\r\n  }\r\n  // date.add(3, 'hours');\r\n\r\n  //format to 29/06/2020 12:57 pm\r\n  return date.format('DD/MM/YYYY h:mm a');\r\n}\r\n\r\nexport function formatUrl(url, ...args) {\r\n  let urlParams = '';\r\n  args.forEach((arg) => {\r\n    for (let key in arg) {\r\n      if (arg[key]) {\r\n        urlParams = `${urlParams}${key}=${arg[key]}&`;\r\n      }\r\n      if (arg[key] === 0) {\r\n        urlParams = `${urlParams}${key}=${arg[key]}&`; //allow for value=0\r\n      }\r\n    }\r\n  });\r\n  urlParams = urlParams.substr(0, urlParams.length - 1); //remove the & at the end\r\n\r\n  return `${url}?${urlParams}`;\r\n}\r\n\r\nexport function getFormattedAmount(amount, quantity) {\r\n  return `Ksh ${amount * quantity}`;\r\n}\r\n\r\nexport function getFormattedMeasure(unit, measure) {\r\n  if (unit === 'count') {\r\n    return measure;\r\n  }\r\n  return `${measure} ${unit}`;\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {removeFromLocalStorage} from '../../services/utility';\r\n\r\nexport default function Header(props) {\r\n  const handleLogout = () => {\r\n    removeFromLocalStorage('currentUser');\r\n    props.history.push('/');\r\n  };\r\n  return (\r\n    <nav className='navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow'>\r\n      <Link className='navbar-brand col-md-3 col-lg-2 mr-0 px-3' to='/admin'>\r\n        Scratch Kitchen\r\n      </Link>\r\n      <button\r\n        className='navbar-toggler position-absolute d-md-none collapsed'\r\n        type='button'\r\n        data-toggle='collapse'\r\n        data-target='#sidebarMenu'\r\n        aria-controls='sidebarMenu'\r\n        aria-expanded='false'\r\n        aria-label='Toggle navigation'\r\n      >\r\n        <span className='navbar-toggler-icon'></span>\r\n      </button>\r\n      <ul className='navbar-nav px-3'>\r\n        <li className='nav-item text-nowrap'>\r\n          <button className='nav-link link-button' onClick={handleLogout}>\r\n            Sign out\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function SideBar() {\r\n  return (\r\n    <nav\r\n      id='sidebarMenu'\r\n      className='col-md-3 col-lg-2 d-md-block bg-light sidebar collapse'\r\n    >\r\n      <div className='sidebar-sticky pt-3'>\r\n        <ul className='nav flex-column'>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin'} className='nav-link  '>\r\n              <span data-feather='home'></span>\r\n              Dashboard <span className='sr-only'>(current)</span>\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/admins'} className='nav-link'>\r\n              <span data-feather='file'></span>\r\n              Admins\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/employees'} className='nav-link'>\r\n              <span data-feather='shopping-cart'></span>\r\n              Employees\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/categories'} className='nav-link'>\r\n              <span data-feather='users'></span>\r\n              Categories\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/sales'} className='nav-link'>\r\n              <span data-feather='layers'></span>\r\n              Sale History\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Header from './header';\r\nimport SideBar from './sidebar';\r\nimport './dashboard/dashboard.css';\r\nimport {getFromLocal} from '../../services/utility';\r\n\r\nexport default function withTemplate(WrappedComponent) {\r\n  return class WithTemplate extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let currentUser = getFromLocal('currentUser');\r\n      if (!currentUser) {\r\n        this.props.history.push('/');\r\n      } else if (!currentUser.isAdmin) {\r\n        this.props.history.push('/');\r\n      }\r\n    }\r\n    render() {\r\n      return (\r\n        <>\r\n          <Header {...this.props} />\r\n          <div className='container-fluid'>\r\n            <div className='row'>\r\n              <SideBar />\r\n\r\n              <main\r\n                role='main'\r\n                className='col-md-9 ml-sm-auto col-lg-10 px-md-4'\r\n              >\r\n                <WrappedComponent {...this.props} />\r\n              </main>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from 'react';\r\nimport './modal.scss';\r\n\r\nfunction Modal(props) {\r\n  const {children} = props;\r\n  return (\r\n    <div className='mymodal animate__animated animate__bounceInUp'>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, {useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {toast} from 'react-toastify';\r\nimport Modal from '../../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {objetPropEmpty} from '../../../services/utility';\r\n\r\nfunction AddAdmin(props) {\r\n  const {handleClose} = props;\r\n  const [admin, setAdmin] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n  });\r\n\r\n  const updateAdminProp = (obj) => {\r\n    setAdmin({...admin, ...obj});\r\n  };\r\n\r\n  const saveAdmin = () => {\r\n    if (admin.password !== admin.confirm_password) {\r\n      toast.error('The two passwords do not match');\r\n    } else if (objetPropEmpty(admin)) {\r\n      toast.error('Do not leave fields empty');\r\n    } else {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendPostRequest('admins', admin),\r\n            'Admin added successfully'\r\n          ).then((res) => {\r\n            handleClose();\r\n          })\r\n        )\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>New Admin</div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>First name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter firstname'\r\n              value={admin.firstname}\r\n              onChange={(e) => updateAdminProp({firstname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Last name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter lastname'\r\n              value={admin.lastname}\r\n              onChange={(e) => updateAdminProp({lastname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Phone Number</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter phone number'\r\n              value={admin.phone}\r\n              onChange={(e) => updateAdminProp({phone: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Email</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter email'\r\n              value={admin.email}\r\n              onChange={(e) => updateAdminProp({email: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Password</label>\r\n            <input\r\n              type='password'\r\n              className='form-control'\r\n              placeholder='Enter password'\r\n              value={admin.password}\r\n              onChange={(e) => updateAdminProp({password: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Confirm Password</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Confirm password'\r\n              value={admin.confirm_password}\r\n              onChange={(e) =>\r\n                updateAdminProp({confirm_password: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={saveAdmin}>\r\n              Save Admin\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddAdmin;\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport AddAdmin from './add-admin';\r\n\r\nclass Admins extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddAdmin: false,\r\n      admins: [],\r\n    };\r\n  }\r\n  fetchAdmins() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('admins')).then((res) => {\r\n          let admins = res.data;\r\n          this.setState({admins});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAdmins();\r\n  }\r\n\r\n  updateShowAdmin = (showAddAdmin) => {\r\n    this.setState({showAddAdmin});\r\n  };\r\n\r\n  onDelete = (admin) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`admins/${admin.id}/delete`),\r\n          'Admin deleted successfully'\r\n        ).then((res) => this.fetchAdmins())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddAdmin, admins} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddAdmin && (\r\n          <AddAdmin\r\n            handleClose={() => {\r\n              this.updateShowAdmin(false);\r\n              this.fetchAdmins();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Admins </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAdmin(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Phone Number</th>\r\n                <th>Email</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {admins.map((admin, index) => (\r\n                <tr key={admin.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{admin.firstname + ' ' + admin.lastname}</td>\r\n                  <td>{admin.phone}</td>\r\n                  <td>{admin.email}</td>\r\n                  <td>\r\n                    <span title={formatDate(admin.updated_at)}>\r\n                      {getDateTimeAgo(admin.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(admin)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Admins);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatDate, getFormattedAmount} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass AdminDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sales: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('sales')).then((res) => {\r\n          let sales = res.data.sales;\r\n          this.setState({sales});\r\n        })\r\n      )\r\n    );\r\n  }\r\n  render() {\r\n    const {sales} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2>Latest Sales</h2>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Sold By</th>\r\n                <th>Payment Method</th>\r\n                <th>Number</th>\r\n                <th>Amount</th>\r\n                <th>Customer Pay</th>\r\n                <th>Customer Change</th>\r\n                <th>Date</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sales.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{sale.firstname + ' ' + sale.lastname}</td>\r\n                  <td>{sale.payment_method}</td>\r\n                  <td>{sale.goods_count}</td>\r\n                  <td>{sale.total}</td>\r\n                  <td>{getFormattedAmount(sale.customer_pay, 1)}</td>\r\n                  <td>{getFormattedAmount(sale.customer_change, 1)}</td>\r\n                  <td>{formatDate(sale.created_at)}</td>\r\n                  <td>\r\n                    <button\r\n                      className='btn btn-secondary'\r\n                      onClick={() =>\r\n                        this.props.history.push('/admin/sales/view/' + sale.id)\r\n                      }\r\n                    >\r\n                      <i className='fa fa-eye mr-2'></i>\r\n                      View\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(AdminDashboard);\r\n","import React from 'react';\r\nimport './category.scss';\r\n\r\nfunction Category(props) {\r\n  const {category, onItemClick} = props;\r\n\r\n  return (\r\n    <div className='category shadow shadow-secondary p-2 mb-2'>\r\n      <h5 className='text-center text-uppercase mb-1'>{category.name}</h5>\r\n      {category.goods.map((good) => (\r\n        <Item item={good} onItemClick={onItemClick} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Item(props) {\r\n  const {item, onItemClick} = props;\r\n  return (\r\n    <div\r\n      className='item p-2 link mb-2'\r\n      title='Click to add'\r\n      onClick={() => onItemClick(item)}\r\n    >\r\n      {item.name}\r\n      <div className='float-right'>\r\n        <i className='fa fa-plus'></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","export const user_types = {\r\n  EMPLOYEE: 2,\r\n  ADMIN: 1,\r\n};\r\n\r\nexport const places = {\r\n  RESTAURANT: 1,\r\n  BAR: 2,\r\n};\r\n\r\nexport const payment_methods = [\r\n  'Cash',\r\n  'Mpesa',\r\n  'Card',\r\n  'Glovo',\r\n  'Jumia',\r\n  'Uber Eats',\r\n  'Little Cab',\r\n];\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {places} from '../../services/constants';\r\nimport './header.scss';\r\n\r\nfunction Header(props) {\r\n  const {place} = props;\r\n\r\n  return (\r\n    <div className='header w-100'>\r\n      <div className='float-left pl-3 '>\r\n        {parseInt(place) === places.BAR ? (\r\n          <i className='fas fa-glass-cheers'></i>\r\n        ) : (\r\n          <i className='fas fa-utensils'></i>\r\n        )}\r\n      </div>\r\n      <div class='dropdown float-right pr-3 dropleft'>\r\n        <button\r\n          className='btn btn-light dropdown-toggle '\r\n          data-toggle='dropdown'\r\n        >\r\n          <i className='fas fa-bars'></i>\r\n        </button>\r\n        <div class='dropdown-menu ' aria-labelledby='dropdownMenuButton'>\r\n          <Link class='dropdown-item ' to={'/employee/sales'}>\r\n            Sales\r\n          </Link>\r\n          <Link class='dropdown-item ' to={'/employee'}>\r\n            Main Page\r\n          </Link>\r\n          <Link class='dropdown-item ' to={'/'}>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className='h3 text-center'>\r\n        {parseInt(place) === places.BAR ? 'SCRATCH BAR' : 'SCRATCH RESTAURANT'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../services/api-handle';\r\nimport {getFromLocal} from '../../services/utility';\r\nimport './process-transaction.scss';\r\nimport {trackPromise} from 'react-promise-tracker';\r\n\r\nexport default function ProcessTransaction(props) {\r\n  const {selectedItem, handleAddToCart} = props;\r\n  const [pricings, setPricings] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [selectedForCart, setSelectedForCart] = useState({\r\n    quantity: 1,\r\n  });\r\n  const currentUser = getFromLocal('currentUser');\r\n\r\n  useEffect(() => {\r\n    let itemId = selectedItem.id;\r\n    if (itemId) {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendGetRequest('pricings?good=' + itemId).then((res) => {\r\n              let pricings = res.data.pricings;\r\n              setPricings(pricings);\r\n              setCount(0);\r\n            })\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [selectedItem.id]);\r\n\r\n  const getCurrentPricing = () => {\r\n    if (pricings.length) {\r\n      return pricings[count] || {};\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const handleAddCart = () => {\r\n    let toSend = {\r\n      ...selectedForCart,\r\n      price: pricings[count],\r\n      ...selectedItem,\r\n    };\r\n    handleAddToCart(toSend);\r\n  };\r\n\r\n  let pricingItem = getCurrentPricing();\r\n  if (!selectedItem.name) {\r\n    return (\r\n      <div className='process-section bg-secondary pb-4'>\r\n        <h1 className='jumbotron jumbotron-fluid text-center bg-transparent  text-white '>\r\n          Hi there {currentUser.firstname},\r\n        </h1>\r\n        <p className='text-lead text-center text-warning'>\r\n          Please choose an item in the menu to proceed\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className='process-section'>\r\n      <h1 className='text-center text-dark text-uppercase mb-4'>\r\n        {selectedItem.name}\r\n      </h1>\r\n\r\n      {pricings.length ? (\r\n        <>\r\n          <h3 className='text-center text-dark text-uppercase mt-4'>\r\n            Ksh {pricingItem.amount}\r\n          </h3>\r\n\r\n          <div className='add-subtract row justify-content-center'>\r\n            {pricingItem.unit === 'count' ? null : (\r\n              <>\r\n                <button\r\n                  className='btn btn-light col-3'\r\n                  onClick={() => {\r\n                    if (count > 0) {\r\n                      setCount(count - 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className='fa fa-minus'></i>\r\n                </button>\r\n                <div className='h4 text-center p-2 ml-1 mr-1'>\r\n                  {pricingItem.measure + ' ' + pricingItem.unit}\r\n                </div>\r\n                <button\r\n                  className='btn btn-light col-3'\r\n                  onClick={() => {\r\n                    if (count < pricings.length - 1) {\r\n                      setCount(count + 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className='fa fa-plus'></i>\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            <div className='w-100'></div>\r\n\r\n            <div className='form-group col-2 mt-3'>\r\n              <label htmlFor=''>Quantity</label>\r\n              <input\r\n                type='\r\n            '\r\n                className='form-control '\r\n                value={selectedForCart.quantity}\r\n                onChange={(e) =>\r\n                  setSelectedForCart({\r\n                    ...selectedForCart,\r\n                    quantity: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className='mt-4 row justify-content-center'\r\n            onClick={handleAddCart}\r\n          >\r\n            <button className='btn btn-primary text-uppercase p-2 col-6'>\r\n              Add To Cart\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className='add-subtract bg-danger text-white p-2'>\r\n          <h1 className='text-center'>Oops !</h1>\r\n          <h5 className='text-center'>\r\n            This product do not have pricing, please add pricing in the admin\r\n            section\r\n          </h5>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {payment_methods} from '../../services/constants';\r\nimport {getFormattedAmount, getFormattedMeasure} from '../../services/utility';\r\n\r\nfunction Receipt(props) {\r\n  const {cartItems, removeFromCart, handleSale} = props;\r\n\r\n  const getRawTotalAmount = () => {\r\n    if (cartItems.length) {\r\n      let amount = 0;\r\n      cartItems.forEach((item) => {\r\n        amount += item.price.amount * item.quantity;\r\n      });\r\n      return amount;\r\n    }\r\n    return 0;\r\n  };\r\n  const getTotalAmount = () => {\r\n    return getFormattedAmount(getRawTotalAmount(), 1);\r\n  };\r\n\r\n  const [payment, setPayment] = useState({\r\n    payment_method: payment_methods[0],\r\n    transaction_code: '',\r\n    total: getTotalAmount(),\r\n  });\r\n\r\n  return (\r\n    <div className='card bg-transparent border-0'>\r\n      <h4 className='text-uppercase text-center mb-3'>Receipt</h4>\r\n      {cartItems.map((item) => (\r\n        <Item\r\n          key={item.id + item.price.amount}\r\n          item={item}\r\n          removeFromCart={removeFromCart}\r\n        />\r\n      ))}\r\n      <hr />\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>PAYMENT METHOD</div>\r\n        <div className='col text-center'>\r\n          <select\r\n            name=''\r\n            id=''\r\n            className='form-control'\r\n            value={payment.payment_method}\r\n            onChange={(e) =>\r\n              setPayment({\r\n                ...payment,\r\n                payment_method: e.target.value,\r\n              })\r\n            }\r\n          >\r\n            {payment_methods.map((method) => (\r\n              <option value={method} key={method}>\r\n                {method}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>SUB TOTAL</div>\r\n        <div className='col text-center'>{getTotalAmount()}</div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>ADDITIONAL CHARGES</div>\r\n        <div className='col text-center'>Ksh 0</div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>TOTAL</div>\r\n        <div className='col text-center'>{getTotalAmount()}</div>\r\n      </div>\r\n      {payment.payment_method === 'Mpesa' && (\r\n        <div className='form-group  mt-3'>\r\n          <label htmlFor=''>Transaction Code</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='OK749ZTL6Y'\r\n            onChange={(e) =>\r\n              setPayment({...payment, transaction_code: e.target.value})\r\n            }\r\n          />\r\n        </div>\r\n      )}\r\n      <div className='form-group  mt-3'>\r\n        <label htmlFor=''>Customer Paid</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          placeholder='Amount customer paid'\r\n          onChange={(e) =>\r\n            setPayment({\r\n              ...payment,\r\n              customer_pay: e.target.value,\r\n              customer_change: parseFloat(e.target.value) - getRawTotalAmount(),\r\n            })\r\n          }\r\n        />\r\n      </div>\r\n      <div\r\n        className='mt-4 row justify-content-center'\r\n        onClick={() => handleSale({...payment, total: getTotalAmount()})}\r\n      >\r\n        <button className='btn btn-success text-uppercase p-2 col-6'>\r\n          Confirm & Print\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Item(props) {\r\n  const {item, removeFromCart} = props;\r\n  return (\r\n    <div className='item p-2  mb-2'>\r\n      <div className='row'>\r\n        <div className='col text-left'>{item.name}</div>\r\n        <div className='col text-center'>\r\n          {getFormattedMeasure(item.price.unit, item.price.measure)}\r\n        </div>\r\n        <div className='col text-center'>{item.quantity}</div>\r\n        <div className='col text-center'>\r\n          {getFormattedAmount(item.price.amount, item.quantity)}\r\n        </div>\r\n        <div\r\n          className='col text-right link'\r\n          onClick={() => removeFromCart(item)}\r\n        >\r\n          <i className='fa fa-times'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Receipt;\r\n","import React, {Component} from 'react';\r\nimport ReactToPrint from 'react-to-print-advanced';\r\nimport {formatDate} from '../../services/utility';\r\n\r\nexport default class ReceiptPrint extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.receiptRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    document.getElementById('trigger-print').click();\r\n  }\r\n  render() {\r\n    const {onAfterPrint} = this.props;\r\n    return (\r\n      <>\r\n        <ReactToPrint\r\n          trigger={() => {\r\n            // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n            // to the root node of the returned component as it will be overwritten.\r\n            return (\r\n              <button className='d-none' id='trigger-print'>\r\n                Print this out!\r\n              </button>\r\n            );\r\n          }}\r\n          content={() => this.receiptRef.current}\r\n          removeAfterPrint={true}\r\n          onAfterPrint={onAfterPrint}\r\n          delay={1000}\r\n        />\r\n        <div ref={this.receiptRef}>\r\n          <ReceiptItem {...this.props} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ReceiptItem(props) {\r\n  const {payment, cartItems} = props;\r\n  return (\r\n    <div className='container-fluid '>\r\n      <div className='card'>\r\n        <div className='mb-1'>\r\n          <hr />\r\n          <p className='text-center'>\r\n            <b className='text-center text-dark'>CUSTOMER BILL</b>\r\n          </p>\r\n          <p className='text-center '>\r\n            <strong className='text-center text-dark text-uppercase'>\r\n              SCRATCH KITCHEN LTD\r\n            </strong>\r\n          </p>\r\n          <p className='text-dark text-center'>\r\n            {formatDate(payment.created_at)}\r\n          </p>\r\n          <p className='text-center '>\r\n            <small className='text-secondary'>\r\n              P.O.BOX 102358-00101 NRB TELEPHONE: 0791 482 995/0756936852\r\n            </small>\r\n          </p>\r\n          <div className='border-bottom border-top border-secondary  row'>\r\n            <div className='col'>\r\n              <p className='text-dark'>\r\n                <span className='text-secondary'>Bill No</span>: {payment.id}\r\n              </p>\r\n            </div>\r\n            <div className='col'>\r\n              <p className='text-dark'>\r\n                <span className='text-secondary'>Buy Goods till</span>:{' '}\r\n                {'4028177'}\r\n              </p>\r\n            </div>\r\n            {payment.transaction_code ? (\r\n              <div className='col'>\r\n                <p className='text-dark'>\r\n                  <span className='text-secondary'>Reference Number</span>:\r\n                  {payment.transaction_code}\r\n                </p>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className='card-body p-0'>\r\n          <div className='table-responsive'>\r\n            <table className='table table-striped table-bordered'>\r\n              <thead className='thead-dark'>\r\n                <th>Item Name</th>\r\n                <th>Qty</th>\r\n                <th>Price</th>\r\n                <th>Total</th>\r\n              </thead>\r\n              <tbody>\r\n                {cartItems.map((item) => (\r\n                  <tr key={item.id}>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.quantity}</td>\r\n                    <td>{item.price.amount}</td>\r\n                    <td>{item.price.amount * item.quantity}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div\r\n            className='mt-1 pl-4 pr-4  border-dark mb-1 '\r\n            style={{borderStyle: 'dotted'}}\r\n          >\r\n            <div className=' row justify-content-between'>\r\n              <span className='text-uppercase'>Total Amount</span>\r\n              <span>{payment.total}</span>\r\n            </div>\r\n            <div className=' row justify-content-between'>\r\n              <span className='text-uppercase'>{payment.payment_method}</span>\r\n              <span>{'Ksh ' + payment.customer_pay}</span>\r\n            </div>\r\n            <div className=' row justify-content-between'>\r\n              <span className='text-uppercase'>Change</span>\r\n              <span>{'Ksh ' + payment.customer_change}</span>\r\n            </div>\r\n          </div>\r\n          <div className='mt-2'>\r\n            <h6 className='text-center'>SERVED BY {payment.sold_by_text}</h6>\r\n          </div>\r\n        </div>\r\n        <div className='card-footer p-0'>\r\n          <p className='text-center text-uppercase text-secondary'>\r\n            <small>\r\n              FOLLOW US ON ig@scratchkitchen for COMPLAINTS AND FEEDBACK\r\n            </small>\r\n          </p>\r\n          <p className='text-center text-uppercase text-secondary'>\r\n            <small> askscratchkitchen@gmail.com</small>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {getFromLocal} from '../../services/utility';\r\n\r\nfunction withEmployeeValidation(WrappedComponent) {\r\n  return class WithEmployeeValidation extends Component {\r\n    render() {\r\n      let currentUser = getFromLocal('currentUser');\r\n      if (!currentUser || currentUser.isAdmin) {\r\n        this.props.history.push('/');\r\n        return <></>;\r\n      }\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n}\r\n\r\nexport default withEmployeeValidation;\r\n","import React, {Component} from 'react';\r\nimport Category from '../../components/category/category';\r\nimport Header from '../../components/header/header';\r\nimport ProcessTransaction from '../../components/process-transaction/process-transaction';\r\nimport Receipt from '../../components/receipt/receipt';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n  showNotification,\r\n} from '../../services/api-handle';\r\nimport {\r\n  formatUrl,\r\n  getFormattedMeasure,\r\n  getFromLocal,\r\n} from '../../services/utility';\r\nimport './employee.scss';\r\nimport ReactToPrint from 'react-to-print-advanced';\r\nimport ReceiptPrint from '../../components/receipt/receipt-print';\r\nimport withEmployeeValidation from './with-employee-validation';\r\nimport {trackPromise} from 'react-promise-tracker';\r\n\r\nclass EmployeeDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n      filteredCategories: [],\r\n      selectedCategoryId: '',\r\n      q: '',\r\n      selectedItem: {},\r\n      cartItems: [],\r\n      payment: {},\r\n      showPrint: false,\r\n    };\r\n    this.receiptRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.getCategories();\r\n  }\r\n\r\n  getCategories() {\r\n    let place = this.props.match.params.id;\r\n\r\n    let url = formatUrl('categories', {place});\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let categories = res.data.categories;\r\n          this.setState({\r\n            categories: categories,\r\n            filteredCategories: categories,\r\n          });\r\n        })\r\n      )\r\n    );\r\n  }\r\n  getFilteredCategories() {\r\n    const {selectedCategoryId, q} = this.state;\r\n    let place = this.props.match.params.id;\r\n\r\n    let url = formatUrl(\r\n      'categories/filtered',\r\n      {category: selectedCategoryId},\r\n      {q},\r\n      {place}\r\n    );\r\n    handleError(\r\n      handleSuccess(sendGetRequest(url)).then((res) => {\r\n        this.setState({filteredCategories: res.data.categories});\r\n      })\r\n    );\r\n  }\r\n\r\n  handleChangeCategory = (e) => {\r\n    this.setState({selectedCategoryId: e.target.value}, () =>\r\n      this.getFilteredCategories()\r\n    );\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    this.setState({q: e.target.value}, () => this.getFilteredCategories());\r\n  };\r\n\r\n  onItemClick = (selectedItem) => {\r\n    this.setState({selectedItem});\r\n  };\r\n\r\n  handleAddToCart = (item) => {\r\n    let {cartItems} = this.state;\r\n    let index = cartItems.findIndex(\r\n      (cItem) =>\r\n        cItem.id === item.id && item.price.measure === cItem.price.measure\r\n    );\r\n    if (index >= 0) {\r\n      showNotification('Item updated in the cart', 'success', 'bottom-right');\r\n      cartItems[index] = item;\r\n    } else {\r\n      showNotification('Item added to cart', 'success', 'bottom-right');\r\n      cartItems.push(item);\r\n    }\r\n\r\n    this.setState({cartItems});\r\n  };\r\n\r\n  removeFromCart = (item) => {\r\n    let {cartItems} = this.state;\r\n\r\n    let index = cartItems.findIndex(\r\n      (cItem) =>\r\n        cItem.id === item.id && item.price.measure === cItem.price.measure\r\n    );\r\n    if (index >= 0) {\r\n      cartItems.splice(index, 1);\r\n\r\n      showNotification('Item removed from cart', 'warning', 'bottom-right');\r\n      this.setState(cartItems);\r\n    }\r\n  };\r\n\r\n  handleSale = (payment) => {\r\n    const {cartItems} = this.state;\r\n    const currentUser = getFromLocal('currentUser');\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('sales', {\r\n            ...payment,\r\n            sold_by: `${currentUser.id}`,\r\n            sold_goods: cartItems.length,\r\n          }).then((res) => {\r\n            let saleResp = res.data.sale;\r\n            this.setState({\r\n              payment: {\r\n                ...saleResp,\r\n                sold_by_text: `${currentUser.firstname} ${currentUser.lastname}`,\r\n              },\r\n            });\r\n            let goods = [];\r\n            let quantities = [];\r\n            let measures = [];\r\n            let prices = [];\r\n\r\n            cartItems.forEach((item) => {\r\n              goods.push(item.id);\r\n              quantities.push(parseInt(item.quantity));\r\n              measures.push(\r\n                getFormattedMeasure(item.price.unit, item.price.measure)\r\n              );\r\n              prices.push(`Ksh ${item.price.amount}`);\r\n            });\r\n\r\n            trackPromise(\r\n              handleError(\r\n                handleSuccess(\r\n                  sendPostRequest('sales/history', {\r\n                    goods,\r\n                    quantities,\r\n                    prices,\r\n                    measures,\r\n                    sale_id: saleResp.id,\r\n                  }),\r\n                  'Sale made successfully'\r\n                ).then((res) => {\r\n                  this.setState({showPrint: true});\r\n                })\r\n              )\r\n            );\r\n          })\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      categories,\r\n      filteredCategories,\r\n      q,\r\n      selectedItem,\r\n      cartItems,\r\n      payment,\r\n      showPrint,\r\n    } = this.state;\r\n\r\n    if (showPrint) {\r\n      return (\r\n        <>\r\n          <ReceiptPrint\r\n            cartItems={cartItems}\r\n            payment={payment}\r\n            printReceipt={this.printReceipt}\r\n            onAfterPrint={() => {\r\n              this.setState({\r\n                selectedItem: {},\r\n                cartItems: [],\r\n                payment: {},\r\n                showPrint: false,\r\n              });\r\n            }}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <div className='container-fluid'>\r\n        <div className='row'>\r\n          <Header place={this.props.match.params.id} />\r\n\r\n          <div className='col-md-12 row mt-2 justify-content-center'>\r\n            <div className='col-sm  side-part p-2 section'>\r\n              <div className='input-group mb-3'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Search anything'\r\n                  aria-label=\"Recipient's username\"\r\n                  aria-describedby='basic-addon2'\r\n                  value={q}\r\n                  onChange={this.handleSearch}\r\n                />\r\n                <div className='input-group-append'>\r\n                  <button className='btn btn-outline-secondary' type='button'>\r\n                    <i className='fa fa-search'></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <label htmlFor='category'>Select Category</label>\r\n                <select\r\n                  name='\r\n                '\r\n                  id=''\r\n                  className='form-control'\r\n                  onChange={this.handleChangeCategory}\r\n                >\r\n                  <option value=''>All Categories</option>\r\n                  {categories.map((category) => (\r\n                    <option value={category.id} key={category.id}>\r\n                      {category.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {filteredCategories.map((category) =>\r\n                category.goods.length ? (\r\n                  <Category\r\n                    category={category}\r\n                    onItemClick={this.onItemClick}\r\n                    key={category.id}\r\n                  />\r\n                ) : null\r\n              )}\r\n            </div>\r\n\r\n            <div className='col-sm border-right border-dark border-left border-dark section'>\r\n              <ProcessTransaction\r\n                selectedItem={selectedItem}\r\n                handleAddToCart={this.handleAddToCart}\r\n              />\r\n            </div>\r\n            <div className='col-sm'>\r\n              <Receipt\r\n                cartItems={cartItems}\r\n                removeFromCart={this.removeFromCart}\r\n                handleSale={this.handleSale}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeDashboard);\r\n","import React, {useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\n\r\nimport {toast} from 'react-toastify';\r\nimport Modal from '../../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {objetPropEmpty} from '../../../services/utility';\r\n\r\nfunction AddEmployee(props) {\r\n  const {handleClose} = props;\r\n  const [admin, setAdmin] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n  });\r\n\r\n  const updateEmpProp = (obj) => {\r\n    setAdmin({...admin, ...obj});\r\n  };\r\n\r\n  const saveEmployee = () => {\r\n    if (admin.password !== admin.confirm_password) {\r\n      toast.error('The two passwords do not match');\r\n    } else if (objetPropEmpty(admin)) {\r\n      toast.error('Do not leave fields empty');\r\n    } else {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendPostRequest('employees', admin),\r\n            'Employee added successfully'\r\n          ).then((res) => {\r\n            handleClose();\r\n          })\r\n        )\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>New Employee</div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>First name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter firstname'\r\n              value={admin.firstname}\r\n              onChange={(e) => updateEmpProp({firstname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Last name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter lastname'\r\n              value={admin.lastname}\r\n              onChange={(e) => updateEmpProp({lastname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Phone Number</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter phone number'\r\n              value={admin.phone}\r\n              onChange={(e) => updateEmpProp({phone: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Email</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter email'\r\n              value={admin.email}\r\n              onChange={(e) => updateEmpProp({email: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Password</label>\r\n            <input\r\n              type='password'\r\n              className='form-control'\r\n              placeholder='Enter password'\r\n              value={admin.password}\r\n              onChange={(e) => updateEmpProp({password: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Confirm Password</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Confirm password'\r\n              value={admin.confirm_password}\r\n              onChange={(e) =>\r\n                updateEmpProp({confirm_password: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={saveEmployee}>\r\n              Save Employee\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddEmployee;\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport AddEmployee from './add-employee';\r\n\r\nclass Employees extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddEmployee: false,\r\n      employees: [],\r\n    };\r\n  }\r\n  fetchEmployees() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('employees')).then((res) => {\r\n          let employees = res.data;\r\n          this.setState({employees});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchEmployees();\r\n  }\r\n\r\n  updateShowAdmin = (showAddEmployee) => {\r\n    this.setState({showAddEmployee});\r\n  };\r\n\r\n  onDelete = (employee) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`employees/${employee.id}/delete`),\r\n          'Employee deleted successfully'\r\n        ).then((res) => this.fetchEmployees())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddEmployee, employees} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddEmployee && (\r\n          <AddEmployee\r\n            handleClose={() => {\r\n              this.updateShowAdmin(false);\r\n              this.fetchEmployees();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Employees </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAdmin(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Phone Number</th>\r\n                <th>Email</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {employees.map((emp, index) => (\r\n                <tr key={emp.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{emp.firstname + ' ' + emp.lastname}</td>\r\n                  <td>{emp.phone}</td>\r\n                  <td>{emp.email}</td>\r\n                  <td>\r\n                    <span title={formatDate(emp.updated_at)}>\r\n                      {getDateTimeAgo(emp.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(emp)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Employees);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../services/api-handle';\r\nimport {user_types} from '../../services/constants';\r\nimport {removeFromLocalStorage, storeUserLocally} from '../../services/utility';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        level: user_types.EMPLOYEE,\r\n      },\r\n    };\r\n  }\r\n\r\n  updatePropChange = (obj) => {\r\n    this.setState({\r\n      user: {\r\n        ...this.state.user,\r\n        ...obj,\r\n      },\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    removeFromLocalStorage('currentUser');\r\n  }\r\n\r\n  handleLogin = () => {\r\n    const {user} = this.state;\r\n    let url = 'admins/login';\r\n    let successMessage = 'Login successful';\r\n    let redirectUrl = '/admin';\r\n    let isAdmin = user.level === user_types.ADMIN;\r\n    if (!isAdmin) {\r\n      url = 'employees/login';\r\n      redirectUrl = '/employee';\r\n    }\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendPostRequest(url, user), successMessage).then(\r\n          (res) => {\r\n            let user = res.data.user;\r\n            storeUserLocally('currentUser', {\r\n              ...user,\r\n              isAdmin,\r\n            });\r\n            this.props.history.push(redirectUrl);\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {user} = this.state;\r\n    return (\r\n      <div className='container'>\r\n        <div className='row justify-content-center'>\r\n          <div className='card shadow shadow-secondary mt-4'>\r\n            <div className='card-body'>\r\n              <h1 className='jumbotron jumbotron-fluid bg-transparent'>\r\n                SCRATCH KITCHEN\r\n              </h1>\r\n              <hr />\r\n              <div className='form-group row justify-content-center'>\r\n                <div\r\n                  className='btn-group col-12'\r\n                  role='group'\r\n                  aria-label='Basic example'\r\n                >\r\n                  <button\r\n                    type='button'\r\n                    className={`btn btn-${\r\n                      user.level === user_types.EMPLOYEE\r\n                        ? 'white border-dark'\r\n                        : 'dark'\r\n                    }`}\r\n                    onClick={() =>\r\n                      this.updatePropChange({level: user_types.ADMIN})\r\n                    }\r\n                  >\r\n                    Admin\r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    className={`btn btn-${\r\n                      user.level === user_types.ADMIN\r\n                        ? 'white border-dark'\r\n                        : 'dark'\r\n                    }`}\r\n                    onClick={() =>\r\n                      this.updatePropChange({level: user_types.EMPLOYEE})\r\n                    }\r\n                  >\r\n                    Employee\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <label htmlFor='email'>Email</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Enter email'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({email: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='username'>Password</label>\r\n                <input\r\n                  type='password'\r\n                  className='form-control'\r\n                  placeholder='Enter password'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({password: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <hr />\r\n              <div className='row justify-content-center'>\r\n                <button\r\n                  className='btn btn-primary col-6'\r\n                  onClick={this.handleLogin}\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport Modal from '../../../components/modal/modal';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Categories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  fetchCategories() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('categories')).then((res) => {\r\n          this.setState({categories: res.data.categories});\r\n        })\r\n      )\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.fetchCategories();\r\n  }\r\n\r\n  updateShowAddCategory = (showAddCategory) => {\r\n    this.setState({showAddCategory});\r\n  };\r\n\r\n  onDelete = (category) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`categories/${category.id}/delete`),\r\n          'Category deleted successfully'\r\n        ).then((res) => this.fetchCategories())\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {showAddCategory, categories} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddCategory && (\r\n          <AddCategory\r\n            handleClose={() => {\r\n              this.updateShowAddCategory(false);\r\n              this.fetchCategories();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Categories </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAddCategory(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Created</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {categories.map((category, index) => (\r\n                <tr key={category.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/admin/products/${category.id}`}\r\n                      className='link'\r\n                    >\r\n                      {category.name}\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    {category.place === places.BAR ? 'Bar' : 'Restaurant'}\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(category.created_at)}>\r\n                      {getDateTimeAgo(category.created_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(category.updated_at)}>\r\n                      {getDateTimeAgo(category.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(category)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction AddCategory(props) {\r\n  const {handleClose} = props;\r\n  const [category, setCategory] = useState({});\r\n  const onSave = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('categories', category),\r\n          'Category added successfully'\r\n        ).then((res) => handleClose())\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className='modal-header'>\r\n        <div className='h4 text-center'>Add Category</div>\r\n      </div>\r\n      <div className='modal-body'>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Type</label>\r\n          <select\r\n            name=''\r\n            id=''\r\n            className='form-control'\r\n            onChange={(e) => setCategory({...category, place: e.target.value})}\r\n          >\r\n            <option value=''>Select Type</option>\r\n            <option value={places.BAR}>Bar</option>\r\n            <option value={places.RESTAURANT}>Restaurant</option>\r\n          </select>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Enter name '\r\n            value={category.name}\r\n            onChange={(e) => setCategory({...category, name: e.target.value})}\r\n          />\r\n        </div>\r\n\r\n        <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n          <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n            Cancel\r\n          </button>\r\n          <button className='btn btn-primary col-4' onClick={onSave}>\r\n            Save Category\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default withTemplate(Categories);\r\n","import React, {Component, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport Modal from '../../../components/modal/modal';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Goods extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddProduct: false,\r\n      products: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.fetchProducts();\r\n  }\r\n\r\n  fetchProducts() {\r\n    let categoryId = this.props.match.params.id;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(`products?category=${categoryId}`)).then(\r\n          (res) => {\r\n            let products = res.data;\r\n            this.setState({products});\r\n          }\r\n        )\r\n      )\r\n    );\r\n  }\r\n  updateShowAddProduct = (showAddProduct) => {\r\n    this.setState({showAddProduct});\r\n  };\r\n  onDelete = (good) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`products/${good.id}/delete`),\r\n          'Product deleted successfully'\r\n        ).then((res) => this.fetchProducts())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddProduct, products} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddProduct && (\r\n          <AddProduct\r\n            handleClose={() => {\r\n              this.updateShowAddProduct(false);\r\n              this.fetchProducts();\r\n            }}\r\n            category={this.props.match.params.id}\r\n          />\r\n        )}\r\n        <h2>Products </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAddProduct(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Created</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product, index) => (\r\n                <tr>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/admin/products/${product.id}/pricing`}\r\n                      className='link'\r\n                    >\r\n                      {product.name}\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(product.created_at)}>\r\n                      {getDateTimeAgo(product.created_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(product.updated_at)}>\r\n                      {getDateTimeAgo(product.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(product)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction AddProduct(props) {\r\n  const {handleClose, category} = props;\r\n  const [product, setProduct] = useState({});\r\n\r\n  const onSave = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('products', {...product, category}),\r\n          'Product added successfully'\r\n        ).then((res) => handleClose())\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className='modal-header'>\r\n        <div className='h4 text-center'>Add Product</div>\r\n      </div>\r\n      <div className='modal-body'>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Enter name '\r\n            value={product.name}\r\n            onChange={(e) => setProduct({...product, name: e.target.value})}\r\n          />\r\n        </div>\r\n\r\n        <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n          <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n            Cancel\r\n          </button>\r\n          <button className='btn btn-primary col-4' onClick={onSave}>\r\n            Save Product\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nexport default withTemplate(Goods);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {toast} from 'react-toastify';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {\r\n  formatDate,\r\n  getDateTimeAgo,\r\n  getFormattedMeasure,\r\n} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Pricing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pricings: [],\r\n      selectedPricing: {},\r\n    };\r\n  }\r\n\r\n  getPricings() {\r\n    let goodId = this.props.match.params.id;\r\n    if (!goodId) {\r\n      toast.warn('The good id is required to view this page');\r\n      this.props.history.goBack();\r\n      return;\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('pricings?good=' + goodId)).then((res) => {\r\n          let pricings = res.data.pricings;\r\n          this.setState({pricings});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPricings();\r\n  }\r\n\r\n  updatePropChange = (obj) => {\r\n    this.setState({\r\n      selectedPricing: {\r\n        ...this.state.selectedPricing,\r\n        ...obj,\r\n      },\r\n    });\r\n  };\r\n\r\n  addPricing = () => {\r\n    const {selectedPricing} = this.state;\r\n    let goodId = this.props.match.params.id;\r\n\r\n    let url = 'pricings',\r\n      successMessage = 'Price added successfully';\r\n    if (selectedPricing.id) {\r\n      url = `pricings/${selectedPricing.id}/edit`;\r\n      successMessage = 'Price updated successfully';\r\n    }\r\n\r\n    selectedPricing.good = goodId;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(url, selectedPricing),\r\n          successMessage\r\n        ).then((res) => {\r\n          this.getPricings();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  showEditPricing = (selectedPricing) => {\r\n    this.setState({selectedPricing});\r\n  };\r\n  onDelete = (pricing) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`pricings/${pricing.id}/delete`)\r\n        ).then((res) => this.getPricings())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {pricings, selectedPricing} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2>Pricing </h2>\r\n        <div className='card'>\r\n          <div className='card-body'>\r\n            <div className='row'>\r\n              <div className='form-group'>\r\n                <label htmlFor=''>Unit</label>\r\n                <select\r\n                  name=''\r\n                  id=''\r\n                  className='form-control'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({unit: e.target.value})\r\n                  }\r\n                  value={selectedPricing.unit}\r\n                >\r\n                  <option value=''>Select Unit</option>\r\n                  <option value='ml'>ML</option>\r\n                  <option value='kg'>KG</option>\r\n                  <option value='count'>Count</option>\r\n                </select>\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Measure - {selectedPricing.unit}</label>\r\n\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Eg 1/4'\r\n                  value={selectedPricing.measure}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({measure: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Cost</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder=' Eg 300'\r\n                  value={selectedPricing.amount}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({amount: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-2 mt-2 col-3'>\r\n                <button\r\n                  className='btn btn-primary mt-4 w-100'\r\n                  onClick={this.addPricing}\r\n                >\r\n                  {selectedPricing.id ? 'Update' : 'Add'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='card mt-3'>\r\n          <div className='card-body'>\r\n            <div className='table-responsive'>\r\n              <table className='table table-striped table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Measure</th>\r\n                    <th>Price</th>\r\n                    <th>Created</th>\r\n                    <th>Updated</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {pricings.map((pricing, index) => (\r\n                    <tr\r\n                      key={pricing.id}\r\n                      className='link'\r\n                      onClick={() => this.showEditPricing(pricing)}\r\n                    >\r\n                      <td>{++index}</td>\r\n                      <td>\r\n                        {getFormattedMeasure(pricing.unit, pricing.measure)}\r\n                      </td>\r\n                      <td>{'Ksh ' + pricing.amount}</td>\r\n                      <td>\r\n                        <span title={formatDate(pricing.created_at)}>\r\n                          {getDateTimeAgo(pricing.created_at)}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <span title={formatDate(pricing.updated_at)}>\r\n                          {getDateTimeAgo(pricing.updated_at)}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <TableIcon onClick={() => this.onDelete(pricing)}>\r\n                          <i className='fa fa-trash'></i>\r\n                        </TableIcon>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Pricing);\r\n","import React from 'react';\r\nimport {places} from '../../services/constants';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nfunction EmployeeWelcome(props) {\r\n  return (\r\n    <div\r\n      className='row'\r\n      style={{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '50vh',\r\n        marginTop: '15vh',\r\n      }}\r\n    >\r\n      <h1 className='jumbotron-fluid bg-transparent text-center col-12'>\r\n        Menu\r\n      </h1>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '80px'}}\r\n        onClick={() => props.history.push(`/employee/dashboard/${places.BAR}`)}\r\n      >\r\n        <h5>\r\n          Bar <i className='float-right fas fa-glass-cheers'></i>\r\n        </h5>\r\n      </div>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '80px'}}\r\n        onClick={() =>\r\n          props.history.push(`/employee/dashboard/${places.RESTAURANT}`)\r\n        }\r\n      >\r\n        <h5>\r\n          Restaurant <i class='float-right fas fa-utensils'></i>\r\n        </h5>\r\n      </div>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '80px'}}\r\n        onClick={() => props.history.push(`/employee/sales`)}\r\n      >\r\n        <h5>\r\n          Sale History <i class='float-right fas fa-history'></i>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeWelcome);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../services/api-handle';\r\nimport {\r\n  formatDate,\r\n  formatUrl,\r\n  getFormattedAmount,\r\n  getFromLocal,\r\n} from '../../services/utility';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nfunction EmployeeSales(props) {\r\n  const currentUser = getFromLocal('currentUser');\r\n  const [sales, setSales] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let url = formatUrl('sales', {sold_by: currentUser.id});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let sales = res.data.sales;\r\n          setSales(sales);\r\n        })\r\n      )\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className='container-fluid ml-2 mr-2'>\r\n      <h4 className='text-center'>Sales for {currentUser.firstname}</h4>\r\n      <div className='row justify-content-center'>\r\n        <div className='table-responsive'>\r\n          <table className='table table-bordered table-hover'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Date</th>\r\n                <th>Number of goods</th>\r\n                <th>Total amount</th>\r\n                <th>Payment Type</th>\r\n                <th>Customer Pay</th>\r\n                <th>Customer Change</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sales.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{formatDate(sale.created_at)}</td>\r\n                  <td>{sale.goods_count}</td>\r\n                  <td>{sale.total}</td>\r\n                  <td>{sale.payment_method}</td>\r\n                  <td>{getFormattedAmount(sale.customer_pay, 1)}</td>\r\n                  <td>{getFormattedAmount(sale.customer_change, 1)}</td>\r\n                  <td>\r\n                    <button\r\n                      className='btn btn-secondary'\r\n                      onClick={() =>\r\n                        props.history.push(`/employee/sales/view/${sale.id}`)\r\n                      }\r\n                    >\r\n                      <i className='fa fa-eye mr-2'></i>\r\n                      view\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeSales);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  sendGetRequest,\r\n  handleError,\r\n  handleSuccess,\r\n} from '../../services/api-handle';\r\nimport {formatDate, formatUrl} from '../../services/utility';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nfunction EmployeeSaleDetail(props) {\r\n  const [sale, setSale] = useState({});\r\n  const [history, setHistory] = useState([]);\r\n  const saleId = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    let url = formatUrl('sales/history', {sale_id: saleId});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let sale = res.data.sale[0];\r\n          let history = res.data.history;\r\n          setSale(sale);\r\n          setHistory(history);\r\n        })\r\n      )\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className='container-fluid p-2 ml-2 mr-2'>\r\n      <h4 className='text-center'>Sale Details</h4>\r\n      <div className='p-2 col-12 row'>\r\n        <div className='col'>\r\n          Sold By : {`${sale.firstname} ${sale.lastname}`}\r\n        </div>\r\n        <div className='col'>Date: {formatDate(sale.created_at)}</div>\r\n        <div className='col'>Goods: {history.length}</div>\r\n        <div className='col'>Total: {sale.total}</div>\r\n      </div>\r\n      <div className='row justify-content-center pr-2 pl-2'>\r\n        <div className='table-responsive'>\r\n          <table className='table table-bordered table-hover'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Category</th>\r\n                <th>Quantity</th>\r\n                <th>Measure</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {history.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{sale.good_name}</td>\r\n                  <td>{sale.category_name}</td>\r\n                  <td>{sale.quantity}</td>\r\n                  <td>{sale.measure}</td>\r\n                  <td>{sale.price}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeSaleDetail);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleSuccess,\r\n  handleError,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatUrl, formatDate} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nfunction SaleDetail(props) {\r\n  const [sale, setSale] = useState({});\r\n  const [history, setHistory] = useState([]);\r\n  const saleId = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    let url = formatUrl('sales/history', {sale_id: saleId});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let sale = res.data.sale[0];\r\n          let history = res.data.history;\r\n          setSale(sale);\r\n          setHistory(history);\r\n        })\r\n      )\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className='mt-3'>\r\n      <h4 className='text-center'>Sale Details</h4>\r\n      <div className='p-2 col-12 row'>\r\n        <div className='col'>\r\n          Sold By : {`${sale.firstname} ${sale.lastname}`}\r\n        </div>\r\n        <div className='col'>Date: {formatDate(sale.created_at)}</div>\r\n        <div className='col'>Goods: {history.length}</div>\r\n        <div className='col'>Total: {sale.total}</div>\r\n      </div>\r\n      <div className='row justify-content-center pr-2 pl-2'>\r\n        <div className='table-responsive'>\r\n          <table className='table table-bordered table-hover'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Category</th>\r\n                <th>Quantity</th>\r\n                <th>Measure</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {history.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{sale.good_name}</td>\r\n                  <td>{sale.category_name}</td>\r\n                  <td>{sale.quantity}</td>\r\n                  <td>{sale.measure}</td>\r\n                  <td>{sale.price}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withTemplate(SaleDetail);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatDate, getFormattedAmount} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Sales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sales: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('sales')).then((res) => {\r\n          let sales = res.data.sales;\r\n          this.setState({sales});\r\n        })\r\n      )\r\n    );\r\n  }\r\n  render() {\r\n    const {sales} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2> Sales</h2>\r\n        <div className='table-responsive'>\r\n          <table className='table table-striped table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Sold By</th>\r\n                <th>Payment Method</th>\r\n                <th>Number</th>\r\n                <th>Amount</th>\r\n                <th>Customer Pay</th>\r\n                <th>Customer Change</th>\r\n                <th>Date</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sales.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{sale.firstname + ' ' + sale.lastname}</td>\r\n                  <td>{sale.payment_method}</td>\r\n                  <td>{sale.goods_count}</td>\r\n                  <td>{sale.total}</td>\r\n                  <td>{getFormattedAmount(sale.customer_pay, 1)}</td>\r\n                  <td>{getFormattedAmount(sale.customer_change, 1)}</td>\r\n                  <td>{formatDate(sale.created_at)}</td>\r\n                  <td>\r\n                    <button\r\n                      className='btn btn-secondary'\r\n                      onClick={() =>\r\n                        this.props.history.push('/admin/sales/view/' + sale.id)\r\n                      }\r\n                    >\r\n                      <i className='fa fa-eye mr-2'></i>\r\n                      View\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Sales);\r\n","import React from 'react';\r\nimport './loader.scss';\r\nimport {usePromiseTracker} from 'react-promise-tracker';\r\n\r\nfunction Loader() {\r\n  const {promiseInProgress} = usePromiseTracker();\r\n  if (promiseInProgress) {\r\n    return (\r\n      <div className='loader-container'>\r\n        <div class='loader'>\r\n          <span>Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n\r\nexport default Loader;\r\n","import {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport Admins from './pages/admin/admins/admins';\r\nimport AdminDashboard from './pages/admin/dashboard/admin-dashboard';\r\nimport EmployeeDashboard from './pages/employee/employee-dashboard';\r\nimport Employees from './pages/admin/employees/employees';\r\nimport Login from './pages/login/login';\r\nimport Categories from './pages/admin/category/categories';\r\nimport Goods from './pages/admin/goods/goods';\r\nimport Pricing from './pages/admin/pricing/pricing';\r\nimport EmployeeWelcome from './pages/employee/employee-welcome';\r\nimport EmployeeSales from './pages/employee/employee-sales';\r\nimport EmployeeSaleDetail from './pages/employee/employee-sale-detai';\r\nimport SaleDetail from './pages/admin/sales/sale-detail';\r\nimport Sales from './pages/admin/sales/sales';\r\nimport Loader from './components/loader/loader';\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Router>\r\n      <Loader />\r\n\r\n      <ToastContainer hideProgressBar={true} />\r\n      <Switch>\r\n        <Route path='/login' render={(props) => <Login {...props} />}></Route>\r\n        <Route\r\n          exact\r\n          path='/employee'\r\n          render={(props) => <EmployeeWelcome {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/dashboard/:id'\r\n          render={(props) => <EmployeeDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/sales'\r\n          render={(props) => <EmployeeSales {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/sales/view/:id'\r\n          render={(props) => <EmployeeSaleDetail {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin'\r\n          render={(props) => <AdminDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='admin/dashboard'\r\n          render={(props) => <AdminDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/sales/view/:id'\r\n          render={(props) => <SaleDetail {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/sales'\r\n          render={(props) => <Sales {...props} />}\r\n        ></Route>\r\n\r\n        <Route\r\n          exact\r\n          path='/admin/admins'\r\n          render={(props) => <Admins {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/employees'\r\n          render={(props) => <Employees {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/categories'\r\n          render={(props) => <Categories {...props} />}\r\n        ></Route>\r\n\r\n        <Route\r\n          exact\r\n          path='/admin/products/:id'\r\n          render={(props) => <Goods {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/products/:id/pricing'\r\n          render={(props) => <Pricing {...props} />}\r\n        ></Route>\r\n\r\n        <Redirect exact to='/login' />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport Routes from './routes';\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\n\nimport 'bootstrap';\nimport './sass/app.scss';\n\nwindow.$ = $;\nwindow.Popper = Popper;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}