{"version":3,"sources":["components/table-icon/table-icon.jsx","services/api-handle.js","services/api-const.js","services/constants.js","services/utility.js","pages/admin/header.jsx","pages/admin/sidebar.jsx","pages/admin/with-template.jsx","components/modal/modal.jsx","pages/admin/admins/add-admin.jsx","pages/admin/admins/admins.jsx","components/counter/counter.jsx","components/select-period/select-period.jsx","pages/admin/dashboard/best-selling.jsx","pages/admin/dashboard/sales-graph.jsx","pages/admin/dashboard/admin-dashboard.jsx","components/category/category.jsx","components/header/header.jsx","components/process-transaction/process-transaction.jsx","components/receipt/receipt.jsx","components/receipt/receipt-print.jsx","pages/employee/with-employee-validation.jsx","pages/employee/employee-dashboard.jsx","pages/admin/employees/add-employee.jsx","pages/admin/employees/employees.jsx","pages/login/login.jsx","pages/admin/category/categories.jsx","pages/admin/goods/goods.jsx","pages/admin/pricing/pricing.jsx","pages/employee/employee-welcome.jsx","pages/employee/creditors-list.jsx","pages/employee/expenses-list.jsx","components/tooltip/tooltip-element.jsx","pages/employee/sales-list.jsx","pages/employee/employee-sales.jsx","pages/employee/employee-sale-detai.jsx","pages/admin/sales/sale-detail.jsx","pages/admin/sales/sales.jsx","components/loader/loader.jsx","pages/admin/stock/add-stock.jsx","pages/admin/stock/stock.jsx","pages/admin/stock/stock-history.jsx","pages/employee/employee-stock.jsx","pages/admin/expenses/expenses.jsx","pages/admin/debtors/debtors.jsx","pages/admin/summary/summary.jsx","routes.js","App.js","reportWebVitals.js","index.js"],"names":["TableIcon","props","children","onClick","className","API","axios","create","baseURL","showNotification","title","color","position","toastId","toast","success","warn","error","sendPostRequest","url","params","post","sendGetRequest","get","handleSuccess","promiseFunc","successMessage","then","res","handleError","catch","err","response","message","data","errors","key","forEach","user_types","places","payment_methods","printer_widths","action_types","ADD","display","value","badgeColor","EDIT","SALE","time_periods","TODAY","YESTERDAY","THIS_WEEK","THIS_MONTH","THIS_YEAR","ALL_TIME","objetPropEmpty","obj","getDateTimeAgo","dateStr","moment","fromNow","getFromLocal","name","JSON","parse","localStorage","getItem","removeFromLocalStorage","removeItem","formatDate","date","isValid","format","formatUrl","urlParams","args","arg","substr","length","getFormattedAmount","amount","quantity","getFormattedMeasure","unit","measure","convertObjectToArray","arr","i","push","getMapDisplayDate","timePeriod","removeOptionalFields","optionalFields","includeZeros","item","parseInt","Header","handleLogout","history","useEffect","$","on","toggleClass","currentUser","to","href","role","data-toggle","firstname","style","id","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","d","cx","cy","r","points","x1","y1","x2","y2","SideBar","data-feather","withTemplate","WrappedComponent","isAdmin","this","minHeight","React","Component","Modal","addClass","removeClass","paddingRight","AddAdmin","handleClose","useState","lastname","email","phone","password","admin","setAdmin","updateAdminProp","htmlFor","type","placeholder","onChange","e","target","confirm_password","trackPromise","updateShowAdmin","showAddAdmin","setState","onDelete","fetchAdmins","state","admins","map","index","updated_at","Counter","icon","displayValue","extraTitle","SelectPeriod","selectedPeriod","updatePeriod","periodArr","displayPeriod","find","period","aria-expanded","BestSelling","bestSelling","stock_name","category_name","count","pricing","SalesGraph","barSales","restaurantSales","chart","setChart","chartData","labels","bar","restaurant","prepData","newOptions","options","categories","updateOptions","series","toolbar","show","plotOptions","horizontal","columnWidth","endingShape","colors","dataLabels","enabled","markers","shape","legend","fontSize","horizontalAlign","strokeWidth","strokeColor","fillColors","undefined","radius","offsetX","offsetY","grid","borderColor","xaxis","fontFamily","fontWeight","cssClass","crosshairs","yaxis","opacity","tooltip","y","formatter","val","barChart","ApexCharts","document","querySelector","render","updateData","totals","updateFilter","bar_sales_count","restaurant_sales_count","restaurant_profit","Math","abs","toFixed","bar_profit","bar_stock_worth","restaurant_stock_worth","out_of_stock","ceil","average_daily_sales","bar_sales","restaurant_sales","best_selling","Item","onItemClick","Category","category","goods","good","place","aria-labelledby","ProcessTransaction","selectedItem","handleAddToCart","pricings","setPricings","setCount","selectedForCart","setSelectedForCart","itemId","pricingItem","quantity_remaining","toSend","price","removeFromCart","useOnlinePrice","itemPrice","setItemPrice","online_price","GetCreditDetails","handleCloseModal","handleSave","payment","creditor","setCreditor","creditor_name","creditor_phone","credit_reason","credit_amount","updateCreditor","cols","rows","Receipt","cartItems","handleSale","payObj","setUseOnlinePrice","showMpesaCash","setShowMpesaCash","showCredit","setShowCredit","getRawTotalAmount","getTotalAmount","payment_method","transaction_code","total","receiptWidth","setPayment","sale_id","customer_pay","customer_change","useOnline","method","methods","items","result","it","removeFromArray","includes","checkIfUseOnline","mpesa_pay","cash_pay","parseFloat","sub_total","continueToPrint","ReceiptPrint","setCartItems","cart_items","sale","onAfterPrint","goBack","maxWidth","colSpan","created_at","window","print","html2canvas","getElementById","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","withEmployeeValidation","handleChangeCategory","selectedCategoryId","getFilteredCategories","handleSearch","q","findIndex","cItem","splice","addSaleUrl","addHistoryUrl","sold_by","sold_goods","sold_by_text","saleResp","quantities","measures","prices","ids","match","showPrint","filteredCategories","saleId","receiptRef","createRef","getCategories","printReceipt","aria-label","aria-describedby","AddEmployee","updateEmpProp","showAddEmployee","employee","fetchEmployees","employees","emp","Login","updatePropChange","user","handleLogin","redirectUrl","level","toStoreInLocal","setItem","stringify","AddCategory","setCategory","updateShowAddCategory","showAddCategory","fetchCategories","AddProduct","product","setProduct","updateShowAddProduct","showAddProduct","fetchProducts","products","categoryId","selectedPricing","addPricing","goodId","updated_by","getPricings","showEditPricing","displayProfileLossBadge","buyingPrice","selllingPrice","percent","badgeClass","displayText","buying_price","alignItems","justifyContent","marginTop","CreditorsList","creditors","setCreditors","employee_id","is_cleared","credit","credit_id","ExpensesList","showAddExpense","setShowAddExpense","expenses","setExpenses","toggleShowAddExpense","AddExpense","expense","expense_description","expense_amount","expense_id","handleDelete","setExpense","ToolTipElement","data-placement","SalesList","sales","goods_count","status","pages","setSales","setTotals","setPeriod","page","setPage","prd","total_sales","total_expenses","total_credit_amount","setSale","setHistory","good_name","console","log","Loader","usePromiseTracker","promiseInProgress","AddStock","selectedStock","selectedPlace","isAddEdit","isEdit","setIsEdit","stock","setStock","stockAdd","setStockAdd","updateStockChange","disabled","slice","onEdit","showAddStock","onAddStock","toggleShowAdd","stock_id","getBadgeColor","action_type","action","act","hst","EmployeeStock","setPlace","showAdd","setShowAdd","showUpdate","setShowUpdate","setSelectedStock","UpdateStock","admin_id","admin_name","employee_name","handleClear","HistoryItem","DisplayLabel","sales_total","label","mpesa_sales","cash_sales","card_sales","glovo_sales","uber_eats_sales","little_cab_sales","credit_sales","expenses_amount_total","closing_bar_stock","closing_restaurant_stock","summary","setSummary","Routes","query","URLSearchParams","useLocation","search","hideProgressBar","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Popper","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0556f568.chunk.js","sourcesContent":["import React from 'react';\r\nimport './table-icon.scss';\r\n\r\nfunction TableIcon(props) {\r\n  const {children, onClick} = props;\r\n  return (\r\n    <div\r\n      className='icon-container p-2 link rounded-circle shadow shadow-secondary text-center'\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableIcon;\r\n","import axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport {API_URL} from './api-const';\r\nlet API = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\nexport function showNotification(title, color, position, toastId) {\r\n  if (color === 'success') {\r\n    toast.success(title, {position: position || 'top-right', toastId});\r\n  } else if (color === 'warning') {\r\n    toast.warn(title, {position: position || 'top-right', toastId});\r\n  } else {\r\n    toast.error(title, {position: position || 'top-right', toastId});\r\n  }\r\n}\r\nexport function sendPostRequest(url, params) {\r\n  return API.post(url, params);\r\n}\r\n\r\nexport function sendGetRequest(url) {\r\n  return API.get(url);\r\n}\r\n\r\nexport function sendFormData(url, formData) {\r\n  return API({\r\n    url: url,\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      accept: 'application/json',\r\n    },\r\n    data: formData,\r\n  });\r\n}\r\n\r\nexport function handleSuccess(promiseFunc, successMessage) {\r\n  return promiseFunc.then((res) => {\r\n    if (showNotification) {\r\n      showNotification(successMessage, 'success');\r\n    }\r\n    return res;\r\n  });\r\n}\r\n\r\nexport function handleError(promiseFunc) {\r\n  return promiseFunc.catch((err) => {\r\n    if (err.response) {\r\n      let message = err.response.data;\r\n\r\n      if (message) {\r\n        if (message.errors) {\r\n          for (let key in message.errors) {\r\n            let error = message.errors[key];\r\n\r\n            error.forEach((err) => showNotification(err, 'danger'));\r\n          }\r\n        } else {\r\n          showNotification(message.message, 'danger');\r\n        }\r\n      } else {\r\n        showNotification('Database Error', 'danger');\r\n      }\r\n    } else {\r\n      showNotification('You are offline', 'warning');\r\n    }\r\n\r\n    return err;\r\n  });\r\n}\r\n","export const API_URL = 'https://posbackend.sk.co.ke/api';\r\n// export const API_URL = 'http://127.0.0.1:8000/api/';\r\n","export const user_types = {\r\n  EMPLOYEE: 2,\r\n  ADMIN: 1,\r\n};\r\n\r\nexport const places = {\r\n  RESTAURANT: 1,\r\n  BAR: 2,\r\n};\r\n\r\nexport const payment_methods = [\r\n  'Cash',\r\n  'Mpesa',\r\n  'Mpesa & Cash',\r\n  'Card',\r\n  'Glovo',\r\n  'Jumia',\r\n  'Uber Eats',\r\n  'Little Cab',\r\n  'Credit',\r\n];\r\n\r\nexport const printer_widths = {\r\n  KITCHEN_PRINTER: '500px',\r\n  FUSION_PRINTER: '300px',\r\n};\r\n\r\nexport const action_types = {\r\n  ADD: {\r\n    display: 'Created stock',\r\n    value: 1,\r\n    badgeColor: 'dark',\r\n  },\r\n  EDIT: {\r\n    display: 'Updated stock',\r\n    value: 2,\r\n    badgeColor: 'primary',\r\n  },\r\n  SALE: {\r\n    display: 'Made a sale',\r\n    value: 3,\r\n    badgeColor: 'success',\r\n  },\r\n};\r\n\r\nexport const time_periods = {\r\n  TODAY: {display: 'Today', value: 'today'},\r\n  YESTERDAY: {display: 'Yesterday', value: 'yesterday'},\r\n  THIS_WEEK: {display: 'This week', value: 'week'},\r\n  THIS_MONTH: {display: 'This Month', value: 'month'},\r\n  THIS_YEAR: {display: 'This Year', value: 'year'},\r\n  ALL_TIME: {display: 'All Time', value: ''},\r\n};\r\n","import moment from 'moment';\r\nimport {time_periods} from './constants';\r\n\r\nexport function objetPropEmpty(obj) {\r\n  for (let key in obj) {\r\n    if (!obj[key]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getDateTimeAgo(dateStr) {\r\n  if (!dateStr) {\r\n    return '_';\r\n  }\r\n  let date = moment(dateStr);\r\n  // date.add(3, 'hours');\r\n  return date.fromNow();\r\n}\r\n\r\nexport function storeUserLocally(name, toStoreInLocal) {\r\n  localStorage.setItem(name, JSON.stringify(toStoreInLocal));\r\n}\r\nexport function getFromLocal(name) {\r\n  let fromLocalStorage = JSON.parse(\r\n    localStorage.getItem(name ? name : 'userSelection')\r\n  );\r\n  return fromLocalStorage;\r\n}\r\nexport function removeFromLocalStorage(name) {\r\n  localStorage.removeItem(name);\r\n}\r\n\r\n//function to format the date\r\nexport function formatDate(dateStr) {\r\n  if (!dateStr) {\r\n    return '_';\r\n  }\r\n\r\n  let date = moment(dateStr);\r\n  //return an empty string if the date is invalid\r\n  if (!date.isValid()) {\r\n    return '_';\r\n  }\r\n  // date.add(3, 'hours');\r\n\r\n  //format to 29/06/2020 12:57 pm\r\n  return date.format('DD/MM/YYYY h:mm a');\r\n}\r\n\r\nexport function formatUrl(url, ...args) {\r\n  let urlParams = '';\r\n  args.forEach((arg) => {\r\n    for (let key in arg) {\r\n      if (arg[key]) {\r\n        urlParams = `${urlParams}${key}=${arg[key]}&`;\r\n      }\r\n      if (arg[key] === 0) {\r\n        urlParams = `${urlParams}${key}=${arg[key]}&`; //allow for value=0\r\n      }\r\n    }\r\n  });\r\n  urlParams = urlParams.substr(0, urlParams.length - 1); //remove the & at the end\r\n\r\n  return `${url}?${urlParams}`;\r\n}\r\n\r\nexport function getFormattedAmount(amount, quantity) {\r\n  return `Ksh ${amount * quantity}`;\r\n}\r\n\r\nexport function getFormattedMeasure(unit, measure) {\r\n  if (unit === 'count') {\r\n    return measure;\r\n  }\r\n  return `${measure} ${unit}`;\r\n}\r\n\r\nexport function convertObjectToArray(obj) {\r\n  let arr = [];\r\n  for (let i in obj) {\r\n    arr.push(obj[i]);\r\n  }\r\n  return arr;\r\n}\r\n//used to get the display format for the graph\r\nexport function getMapDisplayDate(dateStr, timePeriod) {\r\n  let date = moment(dateStr);\r\n  switch (timePeriod) {\r\n    case time_periods.TODAY.value:\r\n    case time_periods.YESTERDAY.value:\r\n      return date.format('h a');\r\n    case time_periods.THIS_WEEK.value:\r\n      return date.format('ddd');\r\n    case time_periods.THIS_MONTH.value:\r\n      return date.format('Do');\r\n    case time_periods.THIS_YEAR.value:\r\n      return date.format('MMM');\r\n    default:\r\n      return 'MMM';\r\n  }\r\n}\r\n\r\nexport function removeOptionalFields(obj, optionalFields, includeZeros) {\r\n  optionalFields.forEach((item) => {\r\n    if (!obj[item]) {\r\n      delete obj[item];\r\n    }\r\n  });\r\n  if (includeZeros) {\r\n    includeZeros.forEach((item) => {\r\n      let value = obj[item];\r\n      if (!value && parseInt(value) !== 0) {\r\n        delete obj[item];\r\n      }\r\n    });\r\n  }\r\n  return obj;\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {getFromLocal, removeFromLocalStorage} from '../../services/utility';\r\nimport $ from 'jquery';\r\n\r\nexport default function Header(props) {\r\n  const handleLogout = () => {\r\n    removeFromLocalStorage('currentUser');\r\n    props.history.push('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    $('.nav-control').on('click', function () {\r\n      $('#main-wrapper').toggleClass('menu-toggle');\r\n\r\n      $('.hamburger').toggleClass('is-active');\r\n      $('.deznav').toggleClass('d-none');\r\n      $('.content-body').toggleClass('ml-0');\r\n    });\r\n  }, []);\r\n\r\n  let currentUser = getFromLocal('currentUser');\r\n  return (\r\n    <>\r\n      <div className='nav-header'>\r\n        <Link to='/admin' className='brand-logo h4 text-dark'>\r\n          SCRATCH LTD\r\n        </Link>\r\n\r\n        <div className='nav-control'>\r\n          <div className='hamburger'>\r\n            <span className='line'></span>\r\n            <span className='line'></span>\r\n            <span className='line'></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='header'>\r\n        <div className='header-content'>\r\n          <nav className='navbar navbar-expand'>\r\n            <div className='collapse navbar-collapse justify-content-between'>\r\n              <div className='header-left'></div>\r\n              <ul className='navbar-nav header-right'>\r\n                <li className='nav-item dropdown header-profile'>\r\n                  <a\r\n                    className='nav-link'\r\n                    href='#'\r\n                    role='button'\r\n                    data-toggle='dropdown'\r\n                  >\r\n                    <div className='header-info'>\r\n                      <span>\r\n                        Hello, <strong>{currentUser.firstname}</strong>\r\n                      </span>\r\n                    </div>\r\n                    <div\r\n                      className='text-white h3 p-1 mr-2'\r\n                      style={{color: '#fff'}}\r\n                    >\r\n                      <svg\r\n                        id='icon-user1'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        className='text-white'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2'></path>\r\n                        <circle cx='12' cy='7' r='4'></circle>\r\n                      </svg>\r\n                    </div>\r\n                  </a>\r\n                  <div className='dropdown-menu dropdown-menu-right'>\r\n                    <a\r\n                      href='app-profile.html'\r\n                      className='dropdown-item ai-icon d-none'\r\n                    >\r\n                      <svg\r\n                        id='icon-user1'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        className='text-primary'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2'></path>\r\n                        <circle cx='12' cy='7' r='4'></circle>\r\n                      </svg>\r\n                      <span className='ml-2'>Profile </span>\r\n                    </a>\r\n                    <a\r\n                      href='email-inbox.html'\r\n                      className='dropdown-item ai-icon d-none'\r\n                    >\r\n                      <svg\r\n                        id='icon-inbox'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        className='text-success'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z'></path>\r\n                        <polyline points='22,6 12,13 2,6'></polyline>\r\n                      </svg>\r\n                      <span className='ml-2'>Inbox </span>\r\n                    </a>\r\n                    <button\r\n                      onClick={handleLogout}\r\n                      className='dropdown-item ai-icon'\r\n                    >\r\n                      <svg\r\n                        id='icon-logout'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        className='text-danger'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4'></path>\r\n                        <polyline points='16 17 21 12 16 7'></polyline>\r\n                        <line x1='21' y1='12' x2='9' y2='12'></line>\r\n                      </svg>\r\n                      <span className='ml-2' onClick={handleLogout}>\r\n                        Logout{' '}\r\n                      </span>\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function SideBar() {\r\n  return (\r\n    <div className='deznav'>\r\n      <div className='deznav-scroll'>\r\n        <div className='metismenu' id='menu'>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin'} className='nav-link  '>\r\n              <span data-feather='home'></span>\r\n              Dashboard <span className='sr-only'>(current)</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/admins'} className='nav-link'>\r\n              <span data-feather='file'></span>\r\n              Admins\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/employees'} className='nav-link'>\r\n              <span data-feather='shopping-cart'></span>\r\n              Employees\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/categories'} className='nav-link'>\r\n              <span data-feather='users'></span>\r\n              Categories\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/stock'} className='nav-link'>\r\n              <span data-feather='users'></span>\r\n              Stock\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/sales'} className='nav-link'>\r\n              <span data-feather='layers'></span>\r\n              Sale History\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/expenses'} className='nav-link'>\r\n              <span data-feather='layers'></span>\r\n              Expenses\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/debtors'} className='nav-link'>\r\n              <span data-feather='layers'></span>\r\n              Debtors\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/summary'} className='nav-link'>\r\n              <span data-feather='layers'></span>\r\n              Summary\r\n            </Link>\r\n          </li>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Header from './header';\r\nimport SideBar from './sidebar';\r\nimport './dashboard/dashboard.css';\r\nimport {getFromLocal} from '../../services/utility';\r\n\r\nexport default function withTemplate(WrappedComponent) {\r\n  return class WithTemplate extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let currentUser = getFromLocal('currentUser');\r\n      if (!currentUser) {\r\n        this.props.history.push('/');\r\n      } else if (!currentUser.isAdmin) {\r\n        this.props.history.push('/');\r\n      }\r\n    }\r\n    render() {\r\n      return (\r\n        <div id='main-wrapper' className='show'>\r\n          <Header {...this.props} />\r\n\r\n          <SideBar />\r\n\r\n          <div className='content-body' style={{minHeight: '100vh'}}>\r\n            <div className='container-fluid'>\r\n              <WrappedComponent {...this.props} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport './modal.scss';\r\nimport $ from 'jquery';\r\n\r\nfunction Modal(props) {\r\n  const {children} = props;\r\n  useEffect(() => {\r\n    $('body').addClass('modal-open');\r\n    return () => {\r\n      $('body').removeClass('modal-open');\r\n    };\r\n  });\r\n  return (\r\n    <div\r\n      className='modal animate__animated animate__bounceInUp show'\r\n      id='basicModal'\r\n      style={{display: 'block', paddingRight: '19px'}}\r\n    >\r\n      <div className='modal-dialog' role='document'>\r\n        <div className='modal-content'>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, {useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {toast} from 'react-toastify';\r\nimport Modal from '../../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {objetPropEmpty} from '../../../services/utility';\r\n\r\nfunction AddAdmin(props) {\r\n  const {handleClose} = props;\r\n  const [admin, setAdmin] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n  });\r\n\r\n  const updateAdminProp = (obj) => {\r\n    setAdmin({...admin, ...obj});\r\n  };\r\n\r\n  const saveAdmin = () => {\r\n    if (admin.password !== admin.confirm_password) {\r\n      toast.error('The two passwords do not match');\r\n    } else if (objetPropEmpty(admin)) {\r\n      toast.error('Do not leave fields empty');\r\n    } else {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendPostRequest('admins', admin),\r\n            'Admin added successfully'\r\n          ).then((res) => {\r\n            handleClose();\r\n          })\r\n        )\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>New Admin</div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>First name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter firstname'\r\n              value={admin.firstname}\r\n              onChange={(e) => updateAdminProp({firstname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Last name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter lastname'\r\n              value={admin.lastname}\r\n              onChange={(e) => updateAdminProp({lastname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Phone Number</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter phone number'\r\n              value={admin.phone}\r\n              onChange={(e) => updateAdminProp({phone: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Email</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter email'\r\n              value={admin.email}\r\n              onChange={(e) => updateAdminProp({email: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Password</label>\r\n            <input\r\n              type='password'\r\n              className='form-control'\r\n              placeholder='Enter password'\r\n              value={admin.password}\r\n              onChange={(e) => updateAdminProp({password: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Confirm Password</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Confirm password'\r\n              value={admin.confirm_password}\r\n              onChange={(e) =>\r\n                updateAdminProp({confirm_password: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={saveAdmin}>\r\n              Save Admin\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddAdmin;\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport AddAdmin from './add-admin';\r\nimport $ from 'jquery';\r\n\r\nclass Admins extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddAdmin: false,\r\n      admins: [],\r\n    };\r\n  }\r\n  fetchAdmins() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('admins')).then((res) => {\r\n          let admins = res.data;\r\n          this.setState({admins});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAdmins();\r\n  }\r\n\r\n  updateShowAdmin = (showAddAdmin) => {\r\n    this.setState({showAddAdmin});\r\n  };\r\n\r\n  onDelete = (admin) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`admins/${admin.id}/delete`),\r\n          'Admin deleted successfully'\r\n        ).then((res) => this.fetchAdmins())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddAdmin, admins} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddAdmin && (\r\n          <AddAdmin\r\n            handleClose={() => {\r\n              this.updateShowAdmin(false);\r\n              this.fetchAdmins();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Admins </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAdmin(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Phone Number</th>\r\n                <th>Email</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {admins.map((admin, index) => (\r\n                <tr key={admin.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{admin.firstname + ' ' + admin.lastname}</td>\r\n                  <td>{admin.phone}</td>\r\n                  <td>{admin.email}</td>\r\n                  <td>\r\n                    <span title={formatDate(admin.updated_at)}>\r\n                      {getDateTimeAgo(admin.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(admin)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Admins);\r\n","import React from 'react';\r\n\r\nexport default function Counter(props) {\r\n  const {icon, title, displayValue, extraTitle, onClick} = props;\r\n\r\n  return (\r\n    <div\r\n      className='col-xl-3 col-xxl-3 col-lg-6 col-md-6 col-sm-6 animate__animated animate__zoomInUp'\r\n      onClick={onClick}\r\n    >\r\n      <div className='widget-stat card'>\r\n        <div className='card-body p-4'>\r\n          <div className='media ai-icon'>\r\n            <span className='mr-3 bgl-primary text-primary'>\r\n              <i className={icon}></i>\r\n            </span>\r\n            <div className='media-body'>\r\n              <h3 className='mb-0 text-black'>\r\n                <span className='counter ml-0'>{displayValue}</span>\r\n              </h3>\r\n              <p className='mb-0'>{title}</p>\r\n              {extraTitle ? <small>{extraTitle}</small> : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {time_periods} from '../../services/constants';\r\nimport {convertObjectToArray} from '../../services/utility';\r\n\r\nexport default function SelectPeriod(props) {\r\n  const {selectedPeriod, updatePeriod} = props;\r\n  let periodArr = convertObjectToArray(time_periods);\r\n  let displayPeriod = periodArr.find(\r\n    (period) => period.value === selectedPeriod\r\n  );\r\n  if (!displayPeriod) {\r\n    displayPeriod = time_periods.THIS_YEAR; //fallback incase the time period is not found\r\n  }\r\n  return (\r\n    <div className='dropdown mt-3 mt-sm-0'>\r\n      <button\r\n        type='button'\r\n        className='btn btn-primary dropdown-toggle light fs-14'\r\n        data-toggle='dropdown'\r\n        aria-expanded='false'\r\n      >\r\n        {displayPeriod.display}\r\n      </button>\r\n      <div className='dropdown-menu'>\r\n        {periodArr.map((period) => (\r\n          <button\r\n            key={period.value}\r\n            className='dropdown-item'\r\n            onClick={() => updatePeriod(period.value)}\r\n          >\r\n            {period.display}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function BestSelling(props) {\r\n  const {bestSelling} = props;\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-xl-12'>\r\n        <div className='card'>\r\n          <div className='card-header border-0 pb-0 d-sm-flex d-block'>\r\n            <div>\r\n              <h4 className='card-title mb-1'>Best Selling Items</h4>\r\n            </div>\r\n          </div>\r\n          <div className='card-body p-0 pt-3 border-top border-darken-1'>\r\n            {bestSelling.map((item, index) => (\r\n              <div className='media items-list-1' key={item.pricing}>\r\n                <span className='number col-1 px-0 align-self-center'>\r\n                  #{++index}\r\n                </span>\r\n                <div className='media-body col-sm-4 col-6 col-xxl-5 px-0'>\r\n                  <h5 className='mt-0 mb-3'>\r\n                    <a className='text-black' href='ecom-product-detail.html'>\r\n                      {item.stock_name}\r\n                    </a>\r\n                  </h5>\r\n                  <small className='font-w500'>\r\n                    <strong className='text-secondary mr-2'>\r\n                      Ksh {item.amount}\r\n                    </strong>\r\n                    <span className='text-primary'>{item.category_name}</span>\r\n                  </small>\r\n                </div>\r\n                <div className='media-footer ml-auto col-3 px-0 d-flex align-self-center align-items-center'>\r\n                  <div>\r\n                    <h3 className='mb-0 font-w600 text-black'>{item.count}</h3>\r\n                    <span className='fs-14'>Sales </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport ApexCharts from 'apexcharts';\r\nimport {getMapDisplayDate} from '../../../services/utility';\r\n\r\nexport default function SalesGraph(props) {\r\n  const {barSales, restaurantSales, period} = props;\r\n  const [chart, setChart] = useState(null);\r\n\r\n  const prepData = () => {\r\n    let labels = [],\r\n      bar = [],\r\n      restaurant = [];\r\n    for (let i = 0; i < barSales.length; i++) {\r\n      labels.push(getMapDisplayDate(barSales[i].date, period));\r\n      bar.push(barSales[i].count || 0);\r\n      restaurant.push(restaurantSales[i].count || 0);\r\n    }\r\n\r\n    return {\r\n      labels,\r\n      bar,\r\n      restaurant,\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const chartData = prepData();\r\n\r\n    if (chart) {\r\n      let newOptions = chart.options;\r\n      newOptions['series'] = [\r\n        {\r\n          name: 'Bar',\r\n          data: chartData.bar,\r\n          //radius: 12,\r\n        },\r\n        {\r\n          name: 'Restaurant',\r\n          data: chartData.restaurant,\r\n        },\r\n      ];\r\n      newOptions['xaxis'] = {\r\n        categories: chartData.labels,\r\n      };\r\n      chart.updateOptions(newOptions, false, true);\r\n    } else {\r\n      var options = {\r\n        series: [\r\n          {\r\n            name: 'Bar',\r\n            data: chartData.bar,\r\n            //radius: 12,\r\n          },\r\n          {\r\n            name: 'Restaurant',\r\n            data: chartData.restaurant,\r\n          },\r\n        ],\r\n        chart: {\r\n          type: 'area',\r\n          height: 350,\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            columnWidth: '55%',\r\n            endingShape: 'rounded',\r\n          },\r\n        },\r\n        colors: ['#2f4cdd', '#b519ec'],\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        markers: {\r\n          shape: 'circle',\r\n        },\r\n\r\n        legend: {\r\n          show: true,\r\n          fontSize: '12px',\r\n\r\n          labels: {\r\n            colors: '#000000',\r\n          },\r\n          position: 'top',\r\n          horizontalAlign: 'left',\r\n          markers: {\r\n            width: 19,\r\n            height: 19,\r\n            strokeWidth: 0,\r\n            strokeColor: '#fff',\r\n            fillColors: undefined,\r\n            radius: 4,\r\n            offsetX: -5,\r\n            offsetY: -5,\r\n          },\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 4,\r\n          colors: ['#2f4cdd', '#b519ec'],\r\n        },\r\n\r\n        grid: {\r\n          borderColor: '#eee',\r\n        },\r\n        xaxis: {\r\n          categories: chartData.labels,\r\n          labels: {\r\n            style: {\r\n              colors: '#3e4954',\r\n              fontSize: '13px',\r\n              fontFamily: 'Poppins',\r\n              fontWeight: 100,\r\n              cssClass: 'apexcharts-xaxis-label',\r\n            },\r\n          },\r\n          crosshairs: {\r\n            show: false,\r\n          },\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            style: {\r\n              colors: '#3e4954',\r\n              fontSize: '13px',\r\n              fontFamily: 'Poppins',\r\n              fontWeight: 100,\r\n              cssClass: 'apexcharts-xaxis-label',\r\n            },\r\n          },\r\n        },\r\n        fill: {\r\n          opacity: 1,\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + ' sales';\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n      let barChart = new ApexCharts(\r\n        document.querySelector('#chartBar'),\r\n        options\r\n      );\r\n      setChart(barChart);\r\n      barChart.render();\r\n    }\r\n  }, [barSales, restaurantSales]);\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header border-0 pb-0 d-sm-flex d-block'>\r\n        <div>\r\n          <h4 className='card-title mb-1'>Sales</h4>\r\n        </div>\r\n      </div>\r\n      <div className='card-body revenue-chart px-3'>\r\n        <div id='chartBar'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Counter from '../../../components/counter/counter';\r\nimport SelectPeriod from '../../../components/select-period/select-period';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {time_periods} from '../../../services/constants';\r\nimport {formatUrl} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport BestSelling from './best-selling';\r\nimport SalesGraph from './sales-graph';\r\n\r\nclass AdminDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totals: {},\r\n      period: time_periods.THIS_YEAR.value,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n  updateData = () => {\r\n    const {period} = this.state;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(formatUrl('dashboard', {period}))).then(\r\n          (res) => {\r\n            let totals = res.data.totals;\r\n            this.setState({totals});\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  updateFilter = (obj) => {\r\n    this.setState({...obj}, () => this.updateData());\r\n  };\r\n\r\n  render() {\r\n    const {totals, period} = this.state;\r\n    return (\r\n      <div className='mt-3 row'>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <div className='form-group'>\r\n            <SelectPeriod\r\n              selectedPeriod={period}\r\n              updatePeriod={(period) => this.updateFilter({period})}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Counter\r\n          title='Bar Sales'\r\n          icon='fa fa-glass-cheers'\r\n          displayValue={totals.bar_sales_count}\r\n        />\r\n        <Counter\r\n          title='Restaurant Sales'\r\n          icon='fa fa-utensils'\r\n          displayValue={totals.restaurant_sales_count}\r\n        />\r\n        <Counter\r\n          title={\r\n            totals.restaurant_profit > 0\r\n              ? 'Gross Restaurant Profit'\r\n              : 'Gross Restaurant Loss'\r\n          }\r\n          icon='fa fa-dollar'\r\n          displayValue={\r\n            <span\r\n              className={\r\n                totals.restaurant_profit > 0 ? 'text-success' : 'text-danger'\r\n              }\r\n            >\r\n              {Math.abs(totals.restaurant_profit).toFixed(1) + '%'}\r\n            </span>\r\n          }\r\n        />\r\n\r\n        <Counter\r\n          title={totals.bar_profit > 0 ? 'Gross Bar Profit' : 'Gross Bar Loss'}\r\n          icon='fa fa-dollar'\r\n          displayValue={\r\n            <span\r\n              className={totals.bar_profit > 0 ? 'text-success' : 'text-danger'}\r\n            >\r\n              {Math.abs(totals.bar_profit).toFixed(1) + '%'}\r\n            </span>\r\n          }\r\n        />\r\n\r\n        <Counter\r\n          title='Bar Stock Worth'\r\n          icon='fa fa-dollar'\r\n          displayValue={totals.bar_stock_worth}\r\n        />\r\n        <Counter\r\n          title='Restaurant Stock Worth'\r\n          icon='fa fa-dollar'\r\n          displayValue={totals.restaurant_stock_worth}\r\n        />\r\n        <Counter\r\n          title={<span className='text-danger'>Out of Stock!</span>}\r\n          icon='fa fa-exclamation-triangle'\r\n          displayValue={totals.out_of_stock}\r\n          extraTitle='(Bar)'\r\n        />\r\n        <Counter\r\n          title='Average Sales '\r\n          extraTitle='Per day (Bar & Restaurant)'\r\n          icon='fa fa-cart-arrow-down'\r\n          displayValue={Math.ceil(totals.average_daily_sales)}\r\n        />\r\n        <hr className='w-100 border border-secondary' />\r\n        <div className='col-xl-6 col-xxl-6 col-lg-12 col-md-12 animate__animated animate__slideInLeft'>\r\n          <SalesGraph\r\n            barSales={totals.bar_sales || []}\r\n            restaurantSales={totals.restaurant_sales || []}\r\n            period={period}\r\n          />\r\n        </div>\r\n        <div className='col-xl-6 col-xxl-6 col-lg-12  col-lg-9 col-md-12  animate__animated animate__slideInRight'>\r\n          <BestSelling bestSelling={totals.best_selling || []} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(AdminDashboard);\r\n","import React from 'react';\r\nimport './category.scss';\r\n\r\nfunction Category(props) {\r\n  const {category, onItemClick} = props;\r\n\r\n  return (\r\n    <div className='category shadow shadow-secondary p-2 mb-2'>\r\n      <h5 className='text-center text-uppercase mb-1'>{category.name}</h5>\r\n      {category.goods.map((good) => (\r\n        <Item item={good} onItemClick={onItemClick} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Item(props) {\r\n  const {item, onItemClick} = props;\r\n  return (\r\n    <div\r\n      className='item p-2 link mb-2'\r\n      title='Click to add'\r\n      onClick={() => onItemClick(item)}\r\n    >\r\n      {item.name}\r\n      <div className='float-right'>\r\n        <i className='fa fa-plus'></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {places} from '../../services/constants';\r\nimport './header.scss';\r\n\r\nfunction Header(props) {\r\n  const {place} = props;\r\n\r\n  return (\r\n    <div className='employee-header w-100'>\r\n      <div className='float-left pl-3 place-icon '>\r\n        {parseInt(place) === places.BAR ? (\r\n          <i className='fas fa-glass-cheers'></i>\r\n        ) : (\r\n          <i className='fas fa-utensils'></i>\r\n        )}\r\n      </div>\r\n      <div className='dropdown float-right pr-3 dropleft'>\r\n        <button\r\n          className='btn bg-transparent dropdown-toggle '\r\n          data-toggle='dropdown'\r\n        >\r\n          <i className='fas fa-bars'></i>\r\n        </button>\r\n        <div className='dropdown-menu ' aria-labelledby='dropdownMenuButton'>\r\n          <Link className='dropdown-item ' to={`/employee/sales/${place}`}>\r\n            Sales\r\n          </Link>\r\n          <Link className='dropdown-item ' to={'/employee'}>\r\n            Main Page\r\n          </Link>\r\n          <Link className='dropdown-item ' to={'/'}>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className='h3 text-center text-white'>\r\n        {parseInt(place) === places.BAR ? 'SCRATCH BAR' : 'SCRATCH RESTAURANT'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../services/api-handle';\r\nimport {getFromLocal} from '../../services/utility';\r\nimport './process-transaction.scss';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {places} from '../../services/constants';\r\n\r\nexport default function ProcessTransaction(props) {\r\n  const {selectedItem, handleAddToCart, place} = props;\r\n  const [pricings, setPricings] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [selectedForCart, setSelectedForCart] = useState({\r\n    quantity: 1,\r\n  });\r\n  const currentUser = getFromLocal('currentUser');\r\n\r\n  useEffect(() => {\r\n    let itemId = selectedItem.id;\r\n    if (itemId) {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendGetRequest('pricings?good=' + itemId).then((res) => {\r\n              let pricings = res.data.pricings;\r\n              setPricings(pricings);\r\n              setCount(0);\r\n            })\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [selectedItem.id]);\r\n\r\n  const getCurrentPricing = () => {\r\n    if (pricings.length) {\r\n      return pricings[count] || {};\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const handleAddCart = () => {\r\n    let toSend = {\r\n      ...selectedForCart,\r\n      price: pricings[count],\r\n      ...selectedItem,\r\n    };\r\n    handleAddToCart(toSend);\r\n  };\r\n\r\n  let pricingItem = getCurrentPricing();\r\n  if (!selectedItem.name) {\r\n    return (\r\n      <div className='process-section bg-secondary pb-4'>\r\n        <h1 className='jumbotron jumbotron-fluid text-center bg-transparent  text-white '>\r\n          Hi there {currentUser.firstname},\r\n        </h1>\r\n        <p className='text-lead text-center text-warning'>\r\n          Please choose an item in the menu to proceed\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='process-section'>\r\n      <h1 className='text-center text-dark text-uppercase mb-4'>\r\n        {selectedItem.name}\r\n      </h1>\r\n      {parseInt(place) === places.BAR ? (\r\n        <p className='text-center'>\r\n          <small className='mt-2 text-secondary text-center '>\r\n            Remaining Quantity: {pricingItem.quantity_remaining}\r\n          </small>\r\n        </p>\r\n      ) : null}\r\n\r\n      {pricings.length ? (\r\n        <>\r\n          <h3 className='text-center text-dark text-uppercase mt-4'>\r\n            Ksh {pricingItem.amount}\r\n          </h3>\r\n\r\n          <div className='add-subtract row justify-content-center'>\r\n            {pricingItem.unit === 'count' ? null : (\r\n              <>\r\n                <button\r\n                  className='btn btn-light col-3'\r\n                  onClick={() => {\r\n                    if (count > 0) {\r\n                      setCount(count - 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className='fa fa-minus'></i>\r\n                </button>\r\n                <div className='h4 text-center p-2 ml-1 mr-1'>\r\n                  {pricingItem.measure + ' ' + pricingItem.unit}\r\n                </div>\r\n                <button\r\n                  className='btn btn-light col-3'\r\n                  onClick={() => {\r\n                    if (count < pricings.length - 1) {\r\n                      setCount(count + 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className='fa fa-plus'></i>\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            <div className='w-100'></div>\r\n\r\n            <div className='form-group col-2 mt-3'>\r\n              <label htmlFor=''>Quantity</label>\r\n              <input\r\n                type='\r\n            '\r\n                className='form-control '\r\n                value={selectedForCart.quantity}\r\n                onChange={(e) =>\r\n                  setSelectedForCart({\r\n                    ...selectedForCart,\r\n                    quantity: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {(!pricingItem.quantity_remaining &&\r\n            parseInt(place) === places.BAR) ||\r\n          (pricingItem.quantity_remaining &&\r\n            parseInt(pricingItem.quantity_remaining) <\r\n              parseInt(selectedForCart.quantity) &&\r\n            parseInt(place) === places.BAR) ? (\r\n            <div className=' badge badge-danger text-white p-1 w-100'>\r\n              <h1 className='text-center'>Oops !</h1>\r\n              <h5 className='text-center'>This product is out of quantity!</h5>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className='mt-4 row justify-content-center'\r\n              onClick={handleAddCart}\r\n            >\r\n              <button className='btn btn-primary text-uppercase p-2 col-6'>\r\n                Add To Cart\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className='add-subtract bg-danger text-white p-2'>\r\n          <h1 className='text-center'>Oops !</h1>\r\n          <h5 className='text-center'>\r\n            This product do not have pricing, please add pricing in the admin\r\n            section\r\n          </h5>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {showNotification} from '../../services/api-handle';\r\nimport {\r\n  payment_methods,\r\n  places,\r\n  printer_widths,\r\n} from '../../services/constants';\r\nimport {\r\n  getFormattedAmount,\r\n  getFormattedMeasure,\r\n  removeOptionalFields,\r\n} from '../../services/utility';\r\nimport Modal from '../modal/modal';\r\n\r\nfunction Receipt(props) {\r\n  const {cartItems, removeFromCart, handleSale, place, payObj} = props;\r\n  const [useOnlinePrice, setUseOnlinePrice] = useState(false);\r\n  const [showMpesaCash, setShowMpesaCash] = useState(false);\r\n  const [showCredit, setShowCredit] = useState(false);\r\n\r\n  const getRawTotalAmount = () => {\r\n    if (cartItems.length) {\r\n      let amount = 0;\r\n      cartItems.forEach((item) => {\r\n        if (useOnlinePrice && parseInt(item.price.online_price) === 0) {\r\n          showNotification(\r\n            'This good does not have online price. please add',\r\n            'error',\r\n            null,\r\n            'no-duplicate'\r\n          );\r\n          setUseOnlinePrice(false);\r\n          return;\r\n        }\r\n        amount +=\r\n          (useOnlinePrice\r\n            ? parseInt(item.price.online_price) * item.quantity\r\n            : item.price.amount) * item.quantity;\r\n      });\r\n      return amount;\r\n    }\r\n    return 0;\r\n  };\r\n  const getTotalAmount = () => {\r\n    return getFormattedAmount(getRawTotalAmount(), 1);\r\n  };\r\n\r\n  const [payment, setPayment] = useState({\r\n    payment_method: payment_methods[0],\r\n    transaction_code: '',\r\n    total: getTotalAmount(),\r\n    receiptWidth:\r\n      parseInt(place) === places.BAR\r\n        ? printer_widths.FUSION_PRINTER\r\n        : printer_widths.KITCHEN_PRINTER,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPayment({\r\n      ...payment,\r\n      ...payObj,\r\n    });\r\n  }, [payObj.sale_id, payObj]);\r\n\r\n  const checkIfUseOnline = (method) => {\r\n    let methods = [...payment_methods];\r\n    const removeFromArray = (items, arr) => {\r\n      let result = [];\r\n      arr.forEach((item) => {\r\n        if (!items.find((it) => it === item)) {\r\n          result.push(item);\r\n        }\r\n      });\r\n      return result;\r\n    };\r\n\r\n    methods = removeFromArray(\r\n      ['Credit', 'Mpesa', 'Cash', 'Card', 'Mpesa & Cash'],\r\n      methods\r\n    );\r\n\r\n    return methods.includes(method);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line eqeqeq\r\n    if (payment.payment_method == 'Mpesa & Cash') {\r\n      setShowMpesaCash(true);\r\n      // eslint-disable-next-line eqeqeq\r\n    } else if (payment.payment_method == 'Credit') {\r\n      setPayment({...payment, customer_pay: 0, customer_change: 0});\r\n      setShowCredit(true);\r\n    } else {\r\n      setShowMpesaCash(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [payment.payment_method]);\r\n\r\n  return (\r\n    <div className='card bg-transparent border-0'>\r\n      {showCredit && (\r\n        <GetCreditDetails\r\n          handleCloseModal={() => {\r\n            setShowCredit(false);\r\n          }}\r\n          handleSave={(creditor) => {\r\n            setPayment({...payment, ...creditor});\r\n          }}\r\n          payment={payment}\r\n        />\r\n      )}\r\n      <h4 className='text-uppercase text-center mb-3'>Receipt</h4>\r\n      {cartItems.map((item) => (\r\n        <Item\r\n          key={item.id + item.price.amount}\r\n          item={item}\r\n          removeFromCart={removeFromCart}\r\n          useOnlinePrice={useOnlinePrice}\r\n        />\r\n      ))}\r\n      <hr />\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>PAYMENT METHOD</div>\r\n        <div className='col text-center'>\r\n          <select\r\n            name=''\r\n            id=''\r\n            className='form-control'\r\n            value={payment.payment_method}\r\n            onChange={(e) => {\r\n              let payment_method = e.target.value;\r\n              setPayment({\r\n                ...payment,\r\n                payment_method,\r\n              });\r\n\r\n              let useOnline = checkIfUseOnline(payment_method);\r\n              setUseOnlinePrice(useOnline);\r\n            }}\r\n          >\r\n            {payment_methods.map((method) => (\r\n              <option value={method} key={method}>\r\n                {method}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>SUB TOTAL</div>\r\n        <div className='col text-center'>{getTotalAmount()}</div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>ADDITIONAL CHARGES</div>\r\n        <div className='col text-center'>Ksh 0</div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>TOTAL</div>\r\n        <div className='col text-center'>{getTotalAmount()}</div>\r\n      </div>\r\n      {(payment.payment_method === 'Mpesa' ||\r\n        payment.payment_method === 'Mpesa & Cash') && (\r\n        <div className='form-group  mt-3'>\r\n          <label htmlFor=''>Transaction Code</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='OK749ZTL6Y'\r\n            value={payment.transaction_code}\r\n            onChange={(e) =>\r\n              setPayment({...payment, transaction_code: e.target.value})\r\n            }\r\n          />\r\n        </div>\r\n      )}\r\n      {showMpesaCash ? (\r\n        <>\r\n          <div className='form-group mt-3'>\r\n            <label htmlFor=''>Mpesa amount</label>\r\n            <input\r\n              type='number'\r\n              className='form-control'\r\n              placeholder='E.g 300'\r\n              value={payment.mpesa_pay}\r\n              onChange={(e) =>\r\n                setPayment({...payment, mpesa_pay: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n          <div className='form-group '>\r\n            <label htmlFor=''>Cash amount</label>\r\n            <input\r\n              type='number'\r\n              className='form-control'\r\n              placeholder='E.g 100'\r\n              value={payment.cash_pay}\r\n              onChange={(e) =>\r\n                setPayment({...payment, cash_pay: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className='form-group  mt-3'>\r\n          <label htmlFor=''>Customer Paid</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Amount customer paid'\r\n            value={payment.customer_pay}\r\n            onChange={(e) =>\r\n              setPayment({\r\n                ...payment,\r\n                customer_pay: e.target.value,\r\n                customer_change:\r\n                  parseFloat(e.target.value) - getRawTotalAmount(),\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n      )}\r\n      <div className='form-group'>\r\n        <label htmlFor=''>Choose Printer</label>\r\n        <select\r\n          name=''\r\n          id=''\r\n          className='form-control'\r\n          value={payment.receiptWidth}\r\n          onChange={(e) =>\r\n            setPayment({...payment, receiptWidth: e.target.value})\r\n          }\r\n        >\r\n          <option value={printer_widths.FUSION_PRINTER}>Fusion Printer</option>\r\n          <option value={printer_widths.KITCHEN_PRINTER}>\r\n            Kitchen Printer\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div className='mt-4 row justify-content-center '>\r\n        {payment.payment_method === 'Credit' && payment.creditor_name ? (\r\n          <button\r\n            className='btn btn-dark text-uppercase p-1 mx-1'\r\n            onClick={() => setShowCredit(true)}\r\n          >\r\n            <i className='fa fa-edit mr-2'></i>\r\n            Edit Creditor\r\n          </button>\r\n        ) : null}\r\n        <button\r\n          className='btn btn-secondary text-uppercase p-1 mr-2'\r\n          onClick={() =>\r\n            handleSale(\r\n              removeOptionalFields(\r\n                {\r\n                  ...payment,\r\n                  total: getTotalAmount(),\r\n                  sub_total: getRawTotalAmount(),\r\n                  continueToPrint: false,\r\n                },\r\n                ['cash_pay', 'mpesa_pay']\r\n              )\r\n            )\r\n          }\r\n        >\r\n          {payment.sale_id ? 'Edit' : 'Confirm'}\r\n        </button>\r\n        <button\r\n          className='btn btn-success text-uppercase p-1 ml-2'\r\n          onClick={() =>\r\n            handleSale(\r\n              removeOptionalFields(\r\n                {\r\n                  ...payment,\r\n                  total: getTotalAmount(),\r\n                  sub_total: getRawTotalAmount(),\r\n                  continueToPrint: true,\r\n                },\r\n                ['cash_pay', 'mpesa_pay']\r\n              )\r\n            )\r\n          }\r\n        >\r\n          {payment.sale_id ? 'Edit' : 'Confirm'} & Print\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Item(props) {\r\n  const {item, removeFromCart, useOnlinePrice} = props;\r\n  const [itemPrice, setItemPrice] = useState('Ksh 0');\r\n\r\n  useEffect(() => {\r\n    setItemPrice(\r\n      getFormattedAmount(\r\n        useOnlinePrice ? item.price.online_price : item.price.amount,\r\n        item.quantity\r\n      )\r\n    );\r\n  }, [\r\n    item.quantity,\r\n    item.price.online_price,\r\n    item.price.amount,\r\n    useOnlinePrice,\r\n  ]);\r\n\r\n  return (\r\n    <div className='item p-2  mb-2'>\r\n      <div className='row'>\r\n        <div className='col text-left'>{item.name}</div>\r\n        <div className='col text-center'>\r\n          {getFormattedMeasure(item.price.unit, item.price.measure)}\r\n        </div>\r\n        <div className='col text-center'>{item.quantity}</div>\r\n        <div className='col text-center'>{itemPrice}</div>\r\n        <div\r\n          className='col text-right link'\r\n          onClick={() => removeFromCart(item)}\r\n        >\r\n          <i className='fa fa-times'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction GetCreditDetails(props) {\r\n  const {handleCloseModal, handleSave, payment} = props;\r\n  const [creditor, setCreditor] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (payment.creditor_name) {\r\n      setCreditor({\r\n        creditor_name: payment.creditor_name,\r\n        creditor_phone: payment.creditor_phone,\r\n        credit_reason: payment.credit_reason,\r\n        credit_amount: payment.credit_amount,\r\n      });\r\n    }\r\n  }, [payment]);\r\n  const handleSaveCreditor = () => {\r\n    handleSave(creditor);\r\n    handleCloseModal();\r\n  };\r\n\r\n  const updateCreditor = (obj) => {\r\n    setCreditor({...creditor, ...obj});\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>Creditor Details</div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Full Name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='E.g John Doe'\r\n              value={creditor.creditor_name}\r\n              onChange={(e) => updateCreditor({creditor_name: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Phone Number</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='E.g  0702820251'\r\n              value={creditor.creditor_phone}\r\n              onChange={(e) => updateCreditor({creditor_phone: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Amount</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='E.g  200'\r\n              value={creditor.credit_amount}\r\n              onChange={(e) => updateCreditor({credit_amount: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Reason</label>\r\n            <textarea\r\n              name=''\r\n              id=''\r\n              cols='30'\r\n              rows='3'\r\n              className='form-control'\r\n              placeholder='Reason to give credit'\r\n              value={creditor.credit_reason}\r\n              onChange={(e) => updateCreditor({credit_reason: e.target.value})}\r\n            ></textarea>\r\n          </div>\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button\r\n              className='btn btn-secondary col-4'\r\n              onClick={handleCloseModal}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className='btn btn-primary col-4'\r\n              onClick={handleSaveCreditor}\r\n            >\r\n              Done\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Receipt;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../services/api-handle';\r\nimport {formatDate} from '../../services/utility';\r\nimport './receipt-print.scss';\r\n\r\nimport {jsPDF} from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\nexport default function ReceiptPrint(props) {\r\n  const {width, sale_id} = props;\r\n\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [payment, setPayment] = useState({});\r\n  const [count, setCount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    let url = 'sales/cart-items/' + sale_id;\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          setCartItems(res.data.cart_items);\r\n          setPayment(res.data.sale);\r\n        })\r\n      )\r\n    );\r\n  }, [sale_id]);\r\n  const onAfterPrint = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const printAndroid = () => {\r\n    setCount(1);\r\n    for (let i = 1; i <= 2; i++) {\r\n      setCount(i);\r\n      html2canvas(document.getElementById('receipt')).then((canvas) => {\r\n        const imgData = canvas.toDataURL('image/png');\r\n        const pdf = new jsPDF();\r\n        pdf.addImage(imgData, 'JPEG', 0, 0);\r\n        pdf.save(`receipt${sale_id}-${i === 1 ? 'bill' : 'order'}.pdf`);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    setCount(1);\r\n    for (let i = 1; i <= 2; i++) {\r\n      setCount(i);\r\n      window.print();\r\n    }\r\n    onAfterPrint();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='ticket'\r\n        style={{width: width, maxWidth: width}}\r\n        id='receipt'\r\n      >\r\n        <p className='centered'>\r\n          SCRATCH KITCHEN LTD\r\n          <br />\r\n          {count === 1 ? 'CUSTOMER BILL' : 'ORDER'}\r\n          <br />\r\n          <small>\r\n            P.O.BOX 102358-00101 NRB TELEPHONE: 0791 482 995/0756936852\r\n          </small>\r\n          <br />\r\n          <small style={{fontWeight: 'bolder'}}>Till No. 4028177</small>\r\n        </p>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className='description'>Description</th>\r\n              <th className='quantity'>Q.</th>\r\n              <th className='price'>@</th>\r\n              <th className='price'>S.T</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cartItems.map((item) => (\r\n              <tr key={item.id}>\r\n                <td className='description'>{item.name}</td>\r\n                <td className='quantity'>{item.quantity}</td>\r\n                <td className='price'>{item.price.amount}</td>\r\n                <td className='price'>{item.price.amount * item.quantity}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <td className='description centered' colSpan='2'>\r\n                Total\r\n              </td>\r\n              <td className='price' colSpan='2'>\r\n                {payment.total}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p className='centered'>\r\n          Served by\r\n          {' ' +\r\n            payment.firstname +\r\n            ' ' +\r\n            payment.lastname +\r\n            ' at ' +\r\n            formatDate(payment.created_at)}\r\n          <br />\r\n          askscratchkitchen@gmail.com /ig@scratchkitchen\r\n        </p>\r\n      </div>\r\n      <div\r\n        className='justify-content-center  row hidden-print'\r\n        style={{width: width, maxWidth: width}}\r\n      >\r\n        <button\r\n          className='btn btn-secondary ml-2'\r\n          onClick={() => onAfterPrint()}\r\n        >\r\n          Back\r\n        </button>\r\n        <button\r\n          id='btnPrint'\r\n          className='hidden-print btn btn-dark ml-5 print-computer'\r\n          onClick={handlePrint}\r\n        >\r\n          Print\r\n        </button>\r\n        <button\r\n          id='btnPrint'\r\n          className='hidden-print btn btn-dark ml-5 print-android'\r\n          onClick={printAndroid}\r\n        >\r\n          Download Pdf\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {getFromLocal} from '../../services/utility';\r\n\r\nfunction withEmployeeValidation(WrappedComponent) {\r\n  return class WithEmployeeValidation extends Component {\r\n    render() {\r\n      let currentUser = getFromLocal('currentUser');\r\n      if (!currentUser || currentUser.isAdmin) {\r\n        this.props.history.push('/');\r\n        return <></>;\r\n      }\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n}\r\n\r\nexport default withEmployeeValidation;\r\n","import React, {Component} from 'react';\r\nimport Category from '../../components/category/category';\r\nimport Header from '../../components/header/header';\r\nimport ProcessTransaction from '../../components/process-transaction/process-transaction';\r\nimport Receipt from '../../components/receipt/receipt';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n  showNotification,\r\n} from '../../services/api-handle';\r\nimport {\r\n  formatUrl,\r\n  getFormattedMeasure,\r\n  getFromLocal,\r\n} from '../../services/utility';\r\nimport './employee.scss';\r\nimport ReceiptPrint from '../../components/receipt/receipt-print';\r\nimport withEmployeeValidation from './with-employee-validation';\r\nimport {trackPromise} from 'react-promise-tracker';\r\n\r\nclass EmployeeDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n      filteredCategories: [],\r\n      selectedCategoryId: '',\r\n      q: '',\r\n      selectedItem: {},\r\n      cartItems: [],\r\n      payment: {},\r\n      showPrint: false,\r\n      saleId: '',\r\n    };\r\n    this.receiptRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.getCategories();\r\n    let saleId = this.props.match.params.sale_id;\r\n    if (saleId) {\r\n      this.setState({saleId});\r\n      let url = 'sales/cart-items/' + saleId;\r\n\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(sendGetRequest(url)).then((res) => {\r\n            let cartItems = res.data.cart_items;\r\n            let sale = res.data.sale;\r\n            let payment = {\r\n              payment_method: sale.payment_method,\r\n              customer_pay: sale.customer_pay,\r\n              transaction_code: sale.transaction_code,\r\n              sale_id: sale.id,\r\n              customer_change: sale.customer_change,\r\n              mpesa_pay: sale.mpesa_pay,\r\n              cash_pay: sale.cash_pay,\r\n            };\r\n            this.setState({cartItems, payment});\r\n          })\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  getCategories() {\r\n    let place = this.props.match.params.id;\r\n\r\n    let url = formatUrl('categories', {place});\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let categories = res.data.categories;\r\n          this.setState({\r\n            categories: categories,\r\n            filteredCategories: categories,\r\n          });\r\n        })\r\n      )\r\n    );\r\n  }\r\n  getFilteredCategories() {\r\n    const {selectedCategoryId, q} = this.state;\r\n    let place = this.props.match.params.id;\r\n\r\n    let url = formatUrl(\r\n      'categories/filtered',\r\n      {category: selectedCategoryId},\r\n      {q},\r\n      {place}\r\n    );\r\n    handleError(\r\n      handleSuccess(sendGetRequest(url)).then((res) => {\r\n        this.setState({filteredCategories: res.data.categories});\r\n      })\r\n    );\r\n  }\r\n\r\n  handleChangeCategory = (e) => {\r\n    this.setState({selectedCategoryId: e.target.value}, () =>\r\n      this.getFilteredCategories()\r\n    );\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    this.setState({q: e.target.value}, () => this.getFilteredCategories());\r\n  };\r\n\r\n  onItemClick = (selectedItem) => {\r\n    this.setState({selectedItem});\r\n  };\r\n\r\n  handleAddToCart = (item) => {\r\n    let {cartItems} = this.state;\r\n    let index = cartItems.findIndex(\r\n      (cItem) =>\r\n        cItem.id === item.id && item.price.measure === cItem.price.measure\r\n    );\r\n    if (index >= 0) {\r\n      showNotification('Item updated in the cart', 'success', 'bottom-right');\r\n      cartItems[index] = item;\r\n    } else {\r\n      showNotification('Item added to cart', 'success', 'bottom-right');\r\n      cartItems.push(item);\r\n    }\r\n\r\n    this.setState({cartItems});\r\n  };\r\n\r\n  removeFromCart = (item) => {\r\n    let {cartItems} = this.state;\r\n\r\n    let index = cartItems.findIndex(\r\n      (cItem) =>\r\n        cItem.id === item.id && item.price.measure === cItem.price.measure\r\n    );\r\n    if (index >= 0) {\r\n      cartItems.splice(index, 1);\r\n\r\n      showNotification('Item removed from cart', 'warning', 'bottom-right');\r\n      this.setState(cartItems);\r\n    }\r\n  };\r\n\r\n  handleSale = (payment) => {\r\n    const {cartItems} = this.state;\r\n    const currentUser = getFromLocal('currentUser');\r\n    const {continueToPrint, sale_id} = payment;\r\n    let addSaleUrl = 'sales';\r\n    let addHistoryUrl = 'sales/history';\r\n    let successMessage = 'Sale made successfully';\r\n    if (sale_id) {\r\n      addSaleUrl = `sales/${sale_id}/edit`;\r\n      addHistoryUrl = `sales/${sale_id}/history/edit`;\r\n      successMessage = 'Sale edited successfully';\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(addSaleUrl, {\r\n            ...payment,\r\n            sold_by: `${currentUser.id}`,\r\n            sold_goods: cartItems.length,\r\n            sold_by_text: `${currentUser.firstname} ${currentUser.lastname}`,\r\n          }).then((res) => {\r\n            let saleResp = res.data.sale;\r\n            this.setState({\r\n              payment: {\r\n                ...saleResp,\r\n                sold_by_text: `${currentUser.firstname} ${currentUser.lastname}`,\r\n                receiptWidth: payment.receiptWidth,\r\n              },\r\n            });\r\n            let goods = [];\r\n            let quantities = [];\r\n            let measures = [];\r\n            let prices = [];\r\n            let ids = [];\r\n\r\n            cartItems.forEach((item) => {\r\n              goods.push(item.id);\r\n              quantities.push(parseInt(item.quantity));\r\n              measures.push(\r\n                getFormattedMeasure(item.price.unit, item.price.measure)\r\n              );\r\n              prices.push(`Ksh ${item.price.amount}`);\r\n              ids.push(item.price.id);\r\n            });\r\n\r\n            trackPromise(\r\n              handleError(\r\n                handleSuccess(\r\n                  sendPostRequest(addHistoryUrl, {\r\n                    goods,\r\n                    quantities,\r\n                    prices,\r\n                    measures,\r\n                    sale_id: saleResp.id,\r\n                    sold_by: `${currentUser.firstname} ${currentUser.lastname}`,\r\n                    ids,\r\n                  }),\r\n                  successMessage\r\n                ).then((res) => {\r\n                  if (continueToPrint) {\r\n                    this.props.history.push(\r\n                      formatUrl('/employee/print', {\r\n                        sale_id: saleResp.id,\r\n                        width: payment.receiptWidth,\r\n                      })\r\n                    );\r\n                  } else {\r\n                    this.onAfterPrint();\r\n                  }\r\n                })\r\n              )\r\n            );\r\n          })\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  onAfterPrint = () => {\r\n    let place = this.props.match.params.id;\r\n    this.setState({\r\n      selectedItem: {},\r\n      cartItems: [],\r\n      payment: {},\r\n      showPrint: false,\r\n    });\r\n    this.props.history.push('/employee/dashboard/' + place);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      categories,\r\n      filteredCategories,\r\n      q,\r\n      selectedItem,\r\n      cartItems,\r\n      payment,\r\n      showPrint,\r\n    } = this.state;\r\n\r\n    if (showPrint) {\r\n      return (\r\n        <ReceiptPrint\r\n          cartItems={cartItems}\r\n          payment={payment}\r\n          printReceipt={this.printReceipt}\r\n          onAfterPrint={this.onAfterPrint}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className='container-fluid hidden-print'>\r\n        <div className='row'>\r\n          <Header place={this.props.match.params.id} />\r\n\r\n          <div className='col-md-12 row mt-2 justify-content-center'>\r\n            <div className='col-sm  side-part p-2 section'>\r\n              <div className='input-group mb-3'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Search anything'\r\n                  aria-label=\"Recipient's username\"\r\n                  aria-describedby='basic-addon2'\r\n                  value={q}\r\n                  onChange={this.handleSearch}\r\n                />\r\n                <div className='input-group-append'>\r\n                  <button className='btn btn-outline-secondary' type='button'>\r\n                    <i className='fa fa-search'></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <label htmlFor='category'>Select Category</label>\r\n                <select\r\n                  name='\r\n                '\r\n                  id=''\r\n                  className='form-control'\r\n                  onChange={this.handleChangeCategory}\r\n                >\r\n                  <option value=''>All Categories</option>\r\n                  {categories.map((category) => (\r\n                    <option value={category.id} key={category.id}>\r\n                      {category.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {filteredCategories.map((category) =>\r\n                category.goods.length ? (\r\n                  <Category\r\n                    category={category}\r\n                    onItemClick={this.onItemClick}\r\n                    key={category.id}\r\n                  />\r\n                ) : null\r\n              )}\r\n            </div>\r\n\r\n            <div className='col-sm border-right border-dark border-left border-dark section'>\r\n              <ProcessTransaction\r\n                selectedItem={selectedItem}\r\n                handleAddToCart={this.handleAddToCart}\r\n                place={this.props.match.params.id}\r\n              />\r\n            </div>\r\n            <div className='col-sm'>\r\n              <Receipt\r\n                cartItems={cartItems}\r\n                removeFromCart={this.removeFromCart}\r\n                handleSale={this.handleSale}\r\n                place={this.props.match.params.id}\r\n                payObj={payment}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeDashboard);\r\n","import React, {useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\n\r\nimport {toast} from 'react-toastify';\r\nimport Modal from '../../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {objetPropEmpty} from '../../../services/utility';\r\n\r\nfunction AddEmployee(props) {\r\n  const {handleClose} = props;\r\n  const [admin, setAdmin] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n  });\r\n\r\n  const updateEmpProp = (obj) => {\r\n    setAdmin({...admin, ...obj});\r\n  };\r\n\r\n  const saveEmployee = () => {\r\n    if (admin.password !== admin.confirm_password) {\r\n      toast.error('The two passwords do not match');\r\n    } else if (objetPropEmpty(admin)) {\r\n      toast.error('Do not leave fields empty');\r\n    } else {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendPostRequest('employees', admin),\r\n            'Employee added successfully'\r\n          ).then((res) => {\r\n            handleClose();\r\n          })\r\n        )\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>New Employee</div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>First name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter firstname'\r\n              value={admin.firstname}\r\n              onChange={(e) => updateEmpProp({firstname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Last name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter lastname'\r\n              value={admin.lastname}\r\n              onChange={(e) => updateEmpProp({lastname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Phone Number</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter phone number'\r\n              value={admin.phone}\r\n              onChange={(e) => updateEmpProp({phone: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Email</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter email'\r\n              value={admin.email}\r\n              onChange={(e) => updateEmpProp({email: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Password</label>\r\n            <input\r\n              type='password'\r\n              className='form-control'\r\n              placeholder='Enter password'\r\n              value={admin.password}\r\n              onChange={(e) => updateEmpProp({password: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Confirm Password</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Confirm password'\r\n              value={admin.confirm_password}\r\n              onChange={(e) =>\r\n                updateEmpProp({confirm_password: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={saveEmployee}>\r\n              Save Employee\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddEmployee;\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport AddEmployee from './add-employee';\r\n\r\nclass Employees extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddEmployee: false,\r\n      employees: [],\r\n    };\r\n  }\r\n  fetchEmployees() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('employees')).then((res) => {\r\n          let employees = res.data;\r\n          this.setState({employees});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchEmployees();\r\n  }\r\n\r\n  updateShowAdmin = (showAddEmployee) => {\r\n    this.setState({showAddEmployee});\r\n  };\r\n\r\n  onDelete = (employee) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`employees/${employee.id}/delete`),\r\n          'Employee deleted successfully'\r\n        ).then((res) => this.fetchEmployees())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddEmployee, employees} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddEmployee && (\r\n          <AddEmployee\r\n            handleClose={() => {\r\n              this.updateShowAdmin(false);\r\n              this.fetchEmployees();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Employees </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAdmin(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Phone Number</th>\r\n                <th>Email</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {employees.map((emp, index) => (\r\n                <tr key={emp.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{emp.firstname + ' ' + emp.lastname}</td>\r\n                  <td>{emp.phone}</td>\r\n                  <td>{emp.email}</td>\r\n                  <td>\r\n                    <span title={formatDate(emp.updated_at)}>\r\n                      {getDateTimeAgo(emp.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(emp)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Employees);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../services/api-handle';\r\nimport {user_types} from '../../services/constants';\r\nimport {removeFromLocalStorage, storeUserLocally} from '../../services/utility';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        level: user_types.EMPLOYEE,\r\n      },\r\n    };\r\n  }\r\n\r\n  updatePropChange = (obj) => {\r\n    this.setState({\r\n      user: {\r\n        ...this.state.user,\r\n        ...obj,\r\n      },\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    removeFromLocalStorage('currentUser');\r\n  }\r\n\r\n  handleLogin = () => {\r\n    const {user} = this.state;\r\n    let url = 'admins/login';\r\n    let successMessage = 'Login successful';\r\n    let redirectUrl = '/admin';\r\n    let isAdmin = user.level === user_types.ADMIN;\r\n    if (!isAdmin) {\r\n      url = 'employees/login';\r\n      redirectUrl = '/employee';\r\n    }\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendPostRequest(url, user), successMessage).then(\r\n          (res) => {\r\n            let user = res.data.user;\r\n            storeUserLocally('currentUser', {\r\n              ...user,\r\n              isAdmin,\r\n            });\r\n            this.props.history.push(redirectUrl);\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {user} = this.state;\r\n    return (\r\n      <div className='container'>\r\n        <div className='row justify-content-center'>\r\n          <div className='card shadow shadow-secondary mt-4'>\r\n            <div className='card-body'>\r\n              <h1 className='jumbotron jumbotron-fluid bg-transparent'>\r\n                SCRATCH KITCHEN\r\n              </h1>\r\n              <hr />\r\n              <div className='form-group row justify-content-center'>\r\n                <div\r\n                  className='btn-group col-12'\r\n                  role='group'\r\n                  aria-label='Basic example'\r\n                >\r\n                  <button\r\n                    type='button'\r\n                    className={`btn btn-${\r\n                      user.level === user_types.EMPLOYEE\r\n                        ? 'white border-dark'\r\n                        : 'dark'\r\n                    }`}\r\n                    onClick={() =>\r\n                      this.updatePropChange({level: user_types.ADMIN})\r\n                    }\r\n                  >\r\n                    Admin\r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    className={`btn btn-${\r\n                      user.level === user_types.ADMIN\r\n                        ? 'white border-dark'\r\n                        : 'dark'\r\n                    }`}\r\n                    onClick={() =>\r\n                      this.updatePropChange({level: user_types.EMPLOYEE})\r\n                    }\r\n                  >\r\n                    Employee\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <label htmlFor='email'>Email</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Enter email'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({email: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='username'>Password</label>\r\n                <input\r\n                  type='password'\r\n                  className='form-control'\r\n                  placeholder='Enter password'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({password: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <hr />\r\n              <div className='row justify-content-center'>\r\n                <button\r\n                  className='btn btn-primary col-6'\r\n                  onClick={this.handleLogin}\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport Modal from '../../../components/modal/modal';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Categories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  fetchCategories() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('categories')).then((res) => {\r\n          this.setState({categories: res.data.categories});\r\n        })\r\n      )\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.fetchCategories();\r\n  }\r\n\r\n  updateShowAddCategory = (showAddCategory) => {\r\n    this.setState({showAddCategory});\r\n  };\r\n\r\n  onDelete = (category) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`categories/${category.id}/delete`),\r\n          'Category deleted successfully'\r\n        ).then((res) => this.fetchCategories())\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {showAddCategory, categories} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddCategory && (\r\n          <AddCategory\r\n            handleClose={() => {\r\n              this.updateShowAddCategory(false);\r\n              this.fetchCategories();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Categories </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAddCategory(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Created</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {categories.map((category, index) => (\r\n                <tr key={category.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/admin/products/${category.id}`}\r\n                      className='link'\r\n                    >\r\n                      {category.name}\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    {category.place === places.BAR ? 'Bar' : 'Restaurant'}\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(category.created_at)}>\r\n                      {getDateTimeAgo(category.created_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(category.updated_at)}>\r\n                      {getDateTimeAgo(category.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(category)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction AddCategory(props) {\r\n  const {handleClose} = props;\r\n  const [category, setCategory] = useState({});\r\n  const onSave = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('categories', category),\r\n          'Category added successfully'\r\n        ).then((res) => handleClose())\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className='modal-header'>\r\n        <div className='h4 text-center'>Add Category</div>\r\n      </div>\r\n      <div className='modal-body'>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Type</label>\r\n          <select\r\n            name=''\r\n            id=''\r\n            className='form-control'\r\n            onChange={(e) => setCategory({...category, place: e.target.value})}\r\n          >\r\n            <option value=''>Select Type</option>\r\n            <option value={places.BAR}>Bar</option>\r\n            <option value={places.RESTAURANT}>Restaurant</option>\r\n          </select>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Enter name '\r\n            value={category.name}\r\n            onChange={(e) => setCategory({...category, name: e.target.value})}\r\n          />\r\n        </div>\r\n\r\n        <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n          <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n            Cancel\r\n          </button>\r\n          <button className='btn btn-primary col-4' onClick={onSave}>\r\n            Save Category\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default withTemplate(Categories);\r\n","import React, {Component, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport Modal from '../../../components/modal/modal';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Goods extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddProduct: false,\r\n      products: [],\r\n      category: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.fetchProducts();\r\n  }\r\n\r\n  fetchProducts() {\r\n    let categoryId = this.props.match.params.id;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(`products?category=${categoryId}`)).then(\r\n          (res) => {\r\n            let {products, category} = res.data;\r\n            this.setState({products, category});\r\n          }\r\n        )\r\n      )\r\n    );\r\n  }\r\n  updateShowAddProduct = (showAddProduct) => {\r\n    this.setState({showAddProduct});\r\n  };\r\n  onDelete = (good) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`products/${good.id}/delete`),\r\n          'Product deleted successfully'\r\n        ).then((res) => this.fetchProducts())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddProduct, products, category} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddProduct && (\r\n          <AddProduct\r\n            handleClose={() => {\r\n              this.updateShowAddProduct(false);\r\n              this.fetchProducts();\r\n            }}\r\n            category={this.props.match.params.id}\r\n          />\r\n        )}\r\n        <h2>{`Products (${category.name})`}</h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAddProduct(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Created</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product, index) => (\r\n                <tr>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/admin/products/${product.id}/pricing`}\r\n                      className='link'\r\n                    >\r\n                      {product.name}\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(product.created_at)}>\r\n                      {getDateTimeAgo(product.created_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(product.updated_at)}>\r\n                      {getDateTimeAgo(product.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(product)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction AddProduct(props) {\r\n  const {handleClose, category} = props;\r\n  const [product, setProduct] = useState({});\r\n\r\n  const onSave = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('products', {...product, category}),\r\n          'Product added successfully'\r\n        ).then((res) => handleClose())\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className='modal-header'>\r\n        <div className='h4 text-center'>Add Product</div>\r\n      </div>\r\n      <div className='modal-body'>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Enter name '\r\n            value={product.name}\r\n            onChange={(e) => setProduct({...product, name: e.target.value})}\r\n          />\r\n        </div>\r\n\r\n        <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n          <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n            Cancel\r\n          </button>\r\n          <button className='btn btn-primary col-4' onClick={onSave}>\r\n            Save Product\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nexport default withTemplate(Goods);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {toast} from 'react-toastify';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {\r\n  formatDate,\r\n  getDateTimeAgo,\r\n  getFormattedMeasure,\r\n  getFromLocal,\r\n} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Pricing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pricings: [],\r\n      selectedPricing: {},\r\n      good: {},\r\n    };\r\n  }\r\n\r\n  getPricings() {\r\n    let goodId = this.props.match.params.id;\r\n    if (!goodId) {\r\n      toast.warn('The good id is required to view this page');\r\n      this.props.history.goBack();\r\n      return;\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('pricings?good=' + goodId)).then((res) => {\r\n          let pricings = res.data.pricings;\r\n          let good = res.data.good;\r\n          this.setState({pricings, good});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPricings();\r\n  }\r\n\r\n  updatePropChange = (obj) => {\r\n    this.setState({\r\n      selectedPricing: {\r\n        ...this.state.selectedPricing,\r\n        ...obj,\r\n      },\r\n    });\r\n  };\r\n\r\n  addPricing = () => {\r\n    const {selectedPricing} = this.state;\r\n    let goodId = this.props.match.params.id;\r\n    const currentUser = getFromLocal('currentUser') || {};\r\n\r\n    let url = 'pricings',\r\n      successMessage = 'Price added successfully';\r\n    if (selectedPricing.id) {\r\n      url = `pricings/${selectedPricing.id}/edit`;\r\n      successMessage = 'Price updated successfully';\r\n    }\r\n\r\n    selectedPricing.good = goodId;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(url, {\r\n            ...selectedPricing,\r\n            updated_by: `${currentUser.firstname} ${currentUser.lastname}`,\r\n          }),\r\n          successMessage\r\n        ).then((res) => {\r\n          this.setState({selectedPricing: {}});\r\n          this.getPricings();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  showEditPricing = (selectedPricing) => {\r\n    this.setState({selectedPricing});\r\n  };\r\n  onDelete = (pricing) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`pricings/${pricing.id}/delete`)\r\n        ).then((res) => this.getPricings())\r\n      )\r\n    );\r\n  };\r\n\r\n  displayProfileLossBadge = (buyingPrice, selllingPrice) => {\r\n    let percent = ((selllingPrice - buyingPrice) / buyingPrice) * 100;\r\n    let badgeClass = 'badge badge-danger ml-2',\r\n      displayText = 'loss';\r\n    if (percent >= 0) {\r\n      badgeClass = ' badge badge-success ml-2';\r\n      displayText = 'profit';\r\n    }\r\n\r\n    return (\r\n      <span className={badgeClass}>\r\n        {Math.abs(percent.toFixed(2)) + '% ' + displayText}\r\n      </span>\r\n    );\r\n  };\r\n  render() {\r\n    const {pricings, selectedPricing, good} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2>{`Pricing (${good.name})`} </h2>\r\n        <div className='card'>\r\n          <div className='card-body'>\r\n            <div className='row'>\r\n              <div className='form-group'>\r\n                <label htmlFor=''>Unit</label>\r\n                <select\r\n                  name=''\r\n                  id=''\r\n                  className='form-control'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({unit: e.target.value})\r\n                  }\r\n                  value={selectedPricing.unit || ''}\r\n                >\r\n                  <option value=''>Select Unit</option>\r\n                  <option value='ml'>ML</option>\r\n                  <option value='kg'>KG</option>\r\n                  <option value='count'>Count</option>\r\n                </select>\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Measure - {selectedPricing.unit}</label>\r\n\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Eg 1/4'\r\n                  value={selectedPricing.measure || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({measure: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Buying Price</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder=' Eg 200'\r\n                  value={selectedPricing.buying_price || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({buying_price: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Retail Price</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder=' Eg 300'\r\n                  value={selectedPricing.amount || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({amount: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Online Price</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder=' Eg 400'\r\n                  value={selectedPricing.online_price || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({online_price: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-2 mt-2 '>\r\n                <button\r\n                  className='btn btn-primary mt-4 w-100'\r\n                  onClick={this.addPricing}\r\n                >\r\n                  {selectedPricing.id ? (\r\n                    <i className='fa fa-edit mr-2'></i>\r\n                  ) : (\r\n                    <i className='fa fa-plus mr-2'></i>\r\n                  )}\r\n                  {selectedPricing.id ? 'Update' : 'Add'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='card mt-3'>\r\n          <div className='card-body'>\r\n            <div className='table-responsive'>\r\n              <table\r\n                className='table display table-hover table-striped datatable'\r\n                style={{width: '100%'}}\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Measure</th>\r\n                    <th>Buying Price</th>\r\n                    <th>Retail Price</th>\r\n                    <th>Online Price</th>\r\n                    <th>Created</th>\r\n                    <th>Updated</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {pricings.map((pricing, index) => (\r\n                    <tr key={pricing.id} className='link'>\r\n                      <td>{++index}</td>\r\n                      <td>\r\n                        {getFormattedMeasure(pricing.unit, pricing.measure)}\r\n                      </td>\r\n                      <td>{'Ksh ' + pricing.buying_price}</td>\r\n                      <td>\r\n                        {'Ksh ' + pricing.amount}\r\n                        {this.displayProfileLossBadge(\r\n                          pricing.buying_price,\r\n                          pricing.amount\r\n                        )}\r\n                      </td>\r\n\r\n                      <td>\r\n                        {'Ksh ' + pricing.online_price}\r\n                        {this.displayProfileLossBadge(\r\n                          pricing.buying_price,\r\n                          pricing.online_price\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <span title={formatDate(pricing.created_at)}>\r\n                          {getDateTimeAgo(pricing.created_at)}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <span title={formatDate(pricing.updated_at)}>\r\n                          {getDateTimeAgo(pricing.updated_at)}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <div className='d-flex justify-content-around w-75'>\r\n                          <TableIcon onClick={() => this.onDelete(pricing)}>\r\n                            <i className='fa fa-trash'></i>\r\n                          </TableIcon>\r\n                          <TableIcon\r\n                            onClick={() => this.showEditPricing(pricing)}\r\n                          >\r\n                            <i className='fa fa-edit'></i>\r\n                          </TableIcon>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Pricing);\r\n","import React from 'react';\r\nimport {places} from '../../services/constants';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nfunction EmployeeWelcome(props) {\r\n  return (\r\n    <div\r\n      className='row'\r\n      style={{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '50vh',\r\n        marginTop: '15vh',\r\n      }}\r\n    >\r\n      <h1 className='jumbotron-fluid bg-transparent text-center col-12'>\r\n        Menu\r\n      </h1>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '75px'}}\r\n        onClick={() => props.history.push(`/employee/dashboard/${places.BAR}`)}\r\n      >\r\n        <h5>\r\n          Bar <i className='float-right fas fa-glass-cheers'></i>\r\n        </h5>\r\n      </div>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '75px'}}\r\n        onClick={() =>\r\n          props.history.push(`/employee/dashboard/${places.RESTAURANT}`)\r\n        }\r\n      >\r\n        <h5>\r\n          Restaurant <i className='float-right fas fa-utensils'></i>\r\n        </h5>\r\n      </div>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '75px'}}\r\n        onClick={() =>\r\n          props.history.push(`/employee/sales/${places.RESTAURANT}`)\r\n        }\r\n      >\r\n        <h5>\r\n          Sale History <i className='float-right fas fa-history'></i>\r\n        </h5>\r\n      </div>\r\n\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '75px'}}\r\n        onClick={() => props.history.push(`/employee/stock`)}\r\n      >\r\n        <h5>\r\n          Stock <i className='float-right fas fa-cart-plus'></i>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeWelcome);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../services/api-handle';\r\nimport {formatDate, formatUrl} from '../../services/utility';\r\n\r\nexport default function CreditorsList(props) {\r\n  const {currentUser, period} = props;\r\n  const [creditors, setCreditors] = useState([]);\r\n\r\n  const updateData = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendGetRequest(\r\n            formatUrl('creditors', {employee_id: currentUser.id, period})\r\n          )\r\n        ).then((res) => {\r\n          setCreditors(res.data.creditors);\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleClear = (credit) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('creditors/clear', {\r\n            credit_id: credit.id,\r\n            is_cleared: !credit.is_cleared,\r\n          }),\r\n          'Credit Cleared successfully'\r\n        ).then((res) => {\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n  useEffect(updateData, [period, currentUser.id]);\r\n  return (\r\n    <div className='card w-100'>\r\n      <div className='card-header'>\r\n        <h1>Creditors</h1>\r\n      </div>\r\n      <div className='card-body'>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Amount</th>\r\n                <th>Reason</th>\r\n                <th>Updated At</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {creditors.map((creditor, index) => (\r\n                <tr key={creditor.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <b>{creditor.creditor_name}</b>\r\n                    <br />\r\n                    {creditor.creditor_phone}\r\n                  </td>\r\n                  <td>{creditor.credit_amount}</td>\r\n                  <td>\r\n                    <span className='text-wrap'>{creditor.credit_reason}</span>\r\n                  </td>\r\n                  <td>{formatDate(creditor.updated_at)}</td>\r\n                  <td>\r\n                    {creditor.is_cleared ? (\r\n                      <span className='badge badge-success'>Cleared</span>\r\n                    ) : (\r\n                      <span className='badge badge-warning'>Pending</span>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {!creditor.is_cleared && (\r\n                      <button\r\n                        className={`btn btn-success mx-1`}\r\n                        onClick={() => handleClear(creditor)}\r\n                      >\r\n                        Clear\r\n                      </button>\r\n                    )}\r\n                    <Link\r\n                      to={`/employee/sales/view/${creditor.sale_id}`}\r\n                      className='btn btn-dark mx-1'\r\n                    >\r\n                      View Sale\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Modal from '../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../services/api-handle';\r\nimport {formatDate, formatUrl, getDateTimeAgo} from '../../services/utility';\r\n\r\nexport default function ExpensesList(props) {\r\n  const {currentUser, period} = props;\r\n  const [showAddExpense, setShowAddExpense] = useState(false);\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const toggleShowAddExpense = () => {\r\n    setShowAddExpense(!showAddExpense);\r\n  };\r\n\r\n  const updateData = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendGetRequest(\r\n            formatUrl('expenses', {employee_id: currentUser.id, period})\r\n          )\r\n        ).then((res) => {\r\n          setExpenses(res.data.expenses);\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(updateData, [currentUser, period]);\r\n\r\n  const handleDelete = (expense) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('expenses/delete', {expense_id: expense.id}),\r\n          'Expense deleted successfully'\r\n        ).then((res) => updateData())\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='card w-100'>\r\n      {showAddExpense && (\r\n        <AddExpense\r\n          currentUser={currentUser}\r\n          handleCloseModal={toggleShowAddExpense}\r\n          updateData={updateData}\r\n        />\r\n      )}\r\n      <div className='card-header'>\r\n        <h1 className='w-100'>\r\n          Expenses\r\n          <button\r\n            className='btn btn-info float-right'\r\n            onClick={toggleShowAddExpense}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>\r\n            Add Expense\r\n          </button>\r\n        </h1>\r\n      </div>\r\n      <div className='card-body'>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Description</th>\r\n                <th>Amount</th>\r\n                <th>Created</th>\r\n                <th>Updated</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {expenses.map((expense, index) => (\r\n                <tr key={expense.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <span className='text-wrap'>\r\n                      {expense.expense_description}\r\n                    </span>\r\n                  </td>\r\n                  <td>{expense.expense_amount}</td>\r\n                  <td title={formatDate(expense.created_at)}>\r\n                    {getDateTimeAgo(expense.created_at)}\r\n                  </td>\r\n                  <td title={formatDate(expense.updated_at)}>\r\n                    {getDateTimeAgo(expense.updated_at)}\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className='btn btn-danger'\r\n                      onClick={() => handleDelete(expense)}\r\n                    >\r\n                      <i className='fa fa-trash mr-2'></i>\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AddExpense(props) {\r\n  const {handleCloseModal, currentUser, updateData} = props;\r\n  const [expense, setExpense] = useState({});\r\n\r\n  useEffect(() => {\r\n    setExpense({employee_id: currentUser.id});\r\n  }, [currentUser]);\r\n\r\n  const handleSaveExpense = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('expenses/new', expense),\r\n          'Expense added successfully'\r\n        ).then((res) => {\r\n          handleCloseModal();\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>Expense Details</div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Expense Amount</label>\r\n            <input\r\n              type='number'\r\n              className='form-control'\r\n              placeholder='E.g 400'\r\n              value={expense.expense_amount}\r\n              onChange={(e) =>\r\n                setExpense({...expense, expense_amount: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Expense Description</label>\r\n            <textarea\r\n              name=''\r\n              id=''\r\n              cols='30'\r\n              rows='3'\r\n              className='form-control'\r\n              placeholder='E.g Payment for motorbike'\r\n              value={expense.expense_description}\r\n              onChange={(e) =>\r\n                setExpense({...expense, expense_description: e.target.value})\r\n              }\r\n            ></textarea>\r\n          </div>\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button\r\n              className='btn btn-secondary col-4'\r\n              onClick={handleCloseModal}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className='btn btn-primary col-4'\r\n              onClick={handleSaveExpense}\r\n            >\r\n              Save Expense\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport $ from 'jquery';\r\n\r\nexport default function ToolTipElement(props) {\r\n  const {children, tooltip} = props;\r\n  useEffect(() => {\r\n    $('[data-toggle=\"tooltip\"]').tooltip();\r\n  }, []);\r\n  return (\r\n    <div\r\n      className='link w-50 '\r\n      data-toggle='tooltip'\r\n      data-placement='bottom'\r\n      title={tooltip}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport ToolTipElement from '../../components/tooltip/tooltip-element';\r\nimport {formatDate, getFormattedAmount} from '../../services/utility';\r\n\r\nexport default function SalesList(props) {\r\n  const {sales, handleDelete, place} = props;\r\n  return (\r\n    <div className='card w-100'>\r\n      <div className='card-header'>\r\n        <h1>Sales</h1>\r\n      </div>\r\n      <div className='card-body'>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Date</th>\r\n                <th>Number of goods</th>\r\n                <th>Total amount</th>\r\n                <th>Payment Type</th>\r\n                <th>\r\n                  Customer Pay\r\n                  <br />\r\n                  Customer Change\r\n                </th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sales.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link to={`/employee/sales/view/${sale.id}`}>\r\n                      {formatDate(sale.created_at)}\r\n                    </Link>\r\n                  </td>\r\n                  <td>{sale.goods_count}</td>\r\n                  <td>\r\n                    <ToolTipElement\r\n                      tooltip={\r\n                        sale.mpesa_pay\r\n                          ? `Mpesa Pay- ${sale.mpesa_pay}. Cash Pay-${sale.cash_pay}`\r\n                          : ''\r\n                      }\r\n                    >\r\n                      <span>{sale.total}</span>\r\n                    </ToolTipElement>\r\n                  </td>\r\n                  <td>\r\n                    {sale.payment_method}\r\n                    {sale.transaction_code ? (\r\n                      <>\r\n                        <br />\r\n                        <b>Transaction Code: </b>\r\n                        {sale.transaction_code}\r\n                      </>\r\n                    ) : null}\r\n                  </td>\r\n                  <td>\r\n                    {getFormattedAmount(sale.customer_pay, 1)}\r\n                    <br />\r\n                    {getFormattedAmount(sale.customer_change, 1)}\r\n                  </td>\r\n                  <td>\r\n                    {sale.status !== 1 && (\r\n                      <>\r\n                        <button\r\n                          className='btn btn-danger ml-1'\r\n                          onClick={() => handleDelete(sale.id)}\r\n                        >\r\n                          <i className='fa fa-trash mr-2'></i>\r\n                          Delete\r\n                        </button>\r\n                        <button\r\n                          className='btn btn-info ml-1'\r\n                          onClick={() =>\r\n                            props.history.push(\r\n                              `/employee/dashboard/${place}/edit/${sale.id}`\r\n                            )\r\n                          }\r\n                        >\r\n                          <i className='fa fa-edit mr-2'></i>\r\n                          Edit\r\n                        </button>\r\n                      </>\r\n                    )}\r\n                    {sale.status === 2 && (\r\n                      <ToolTipElement\r\n                        tooltip={`Edited by ${sale.updated_by} at ${formatDate(\r\n                          sale.updated_at\r\n                        )}`}\r\n                      >\r\n                        <div className='badge badge-success'>Edited</div>\r\n                      </ToolTipElement>\r\n                    )}\r\n\r\n                    {sale.status === 1 && (\r\n                      <ToolTipElement\r\n                        tooltip={`Deleted by ${sale.updated_by} at ${formatDate(\r\n                          sale.updated_at\r\n                        )}`}\r\n                      >\r\n                        <div className='badge badge-danger'>Deleted</div>\r\n                      </ToolTipElement>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Counter from '../../components/counter/counter';\r\nimport SelectPeriod from '../../components/select-period/select-period';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../services/api-handle';\r\nimport {time_periods} from '../../services/constants';\r\nimport {formatUrl, getFromLocal} from '../../services/utility';\r\nimport CreditorsList from './creditors-list';\r\nimport ExpensesList from './expenses-list';\r\nimport SalesList from './sales-list';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nconst pages = {\r\n  SALES: 1,\r\n  EXPENSES: 2,\r\n  CREDITORS: 3,\r\n};\r\nfunction EmployeeSales(props) {\r\n  const currentUser = getFromLocal('currentUser');\r\n  const [sales, setSales] = useState([]);\r\n  const [totals, setTotals] = useState({});\r\n  const [period, setPeriod] = useState(time_periods.TODAY.value);\r\n  const [page, setPage] = useState(pages.SALES);\r\n\r\n  const updateData = () => {\r\n    let url = formatUrl('sales', {sold_by: currentUser.id, period});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let {sales, totals} = res.data;\r\n          setSales(sales);\r\n          setTotals(totals);\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(updateData, [period, currentUser.id]);\r\n\r\n  const handleDelete = (id) => {\r\n    const updated_by = `${currentUser.firstname} ${currentUser.lastname}`;\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`sales/${id}/delete`, {sale_id: id, updated_by}),\r\n          'Sale deleted successfully'\r\n        ).then((res) => {\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n  const place = props.match.params.place;\r\n\r\n  return (\r\n    <div className='container-fluid ml-2 mr-2'>\r\n      <h2 className='text-center'>\r\n        <div className='float-right mx-3'>\r\n          <div className='form-group'>\r\n            <SelectPeriod\r\n              selectedPeriod={period}\r\n              updatePeriod={(prd) => setPeriod(prd)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </h2>\r\n      <div className=''>\r\n        <div className='card w-100 my-2'>\r\n          <div className='card-body'>\r\n            <div className='row justify-content-start'>\r\n              <Counter\r\n                title='Total Sales'\r\n                icon='fa fa-shopping-cart'\r\n                displayValue={totals.total_sales || 0}\r\n                onClick={() => setPage(pages.SALES)}\r\n              />\r\n              <Counter\r\n                title='Total Expenses'\r\n                icon='fa fa-dollar'\r\n                displayValue={totals.total_expenses || 0}\r\n                onClick={() => setPage(pages.EXPENSES)}\r\n              />\r\n              <Counter\r\n                title='Total Credits in Ksh'\r\n                icon='fa fa-exclamation-circle'\r\n                displayValue={totals.total_credit_amount || 0}\r\n                onClick={() => setPage(pages.CREDITORS)}\r\n              />\r\n              <Counter\r\n                title='Mpesa '\r\n                icon='fa fa-dollar'\r\n                displayValue={totals.mpesa_pay || 0}\r\n              />\r\n              <Counter\r\n                title='Cash'\r\n                icon='fa fa-money-bill-wave'\r\n                displayValue={totals.cash_pay || 0}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {page === pages.SALES ? (\r\n          <SalesList\r\n            sales={sales}\r\n            handleDelete={handleDelete}\r\n            place={place}\r\n            {...props}\r\n          />\r\n        ) : page === pages.EXPENSES ? (\r\n          <ExpensesList period={period} currentUser={currentUser} />\r\n        ) : (\r\n          <CreditorsList period={period} currentUser={currentUser} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeSales);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  sendGetRequest,\r\n  handleError,\r\n  handleSuccess,\r\n} from '../../services/api-handle';\r\nimport {formatDate, formatUrl} from '../../services/utility';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nfunction EmployeeSaleDetail(props) {\r\n  const [sale, setSale] = useState({});\r\n  const [history, setHistory] = useState([]);\r\n  const saleId = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    let url = formatUrl('sales/history', {sale_id: saleId});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let sale = res.data.sale[0];\r\n          let history = res.data.history;\r\n          setSale(sale);\r\n          setHistory(history);\r\n        })\r\n      )\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-12'>\r\n          <div className='card'>\r\n            <div className='card-body border-bottom-0 gradient-3'>\r\n              <h1 className='text-center jumbotron w-100 bg-transparent'>\r\n                Sale Details\r\n              </h1>\r\n              <br />\r\n              <div className='p-2  row'>\r\n                <div className='col text-white'>\r\n                  Sold By : {`${sale.firstname} ${sale.lastname}`}\r\n                </div>\r\n                <div className='col text-white'>\r\n                  Date: {formatDate(sale.created_at)}\r\n                </div>\r\n                <div className='col text-white'>Goods: {history.length}</div>\r\n                <div className='col text-white'>Total: {sale.total}</div>\r\n              </div>\r\n            </div>\r\n            <div className='card-body'>\r\n              <div className='table-responsive'>\r\n                <table className='table table-bordered table-hover'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Name</th>\r\n                      <th>Category</th>\r\n                      <th>Quantity</th>\r\n                      <th>Measure</th>\r\n                      <th>Amount</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {history.map((sale, index) => (\r\n                      <tr key={sale.id}>\r\n                        <td>{++index}</td>\r\n                        <td>{sale.good_name}</td>\r\n                        <td>{sale.category_name}</td>\r\n                        <td>{sale.quantity}</td>\r\n                        <td>{sale.measure}</td>\r\n                        <td>{sale.price}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeSaleDetail);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleSuccess,\r\n  handleError,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatUrl, formatDate} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nfunction SaleDetail(props) {\r\n  const [sale, setSale] = useState({});\r\n  const [history, setHistory] = useState([]);\r\n  const saleId = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    let url = formatUrl('sales/history', {sale_id: saleId});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let sale = res.data.sale[0];\r\n          let history = res.data.history;\r\n          setSale(sale || {});\r\n          setHistory(history);\r\n        })\r\n      )\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className='mt-3'>\r\n      <h4 className='text-center'>Sale Details</h4>\r\n      <div className='p-2 col-12 row'>\r\n        <div className='col'>\r\n          Sold By : {`${sale.firstname} ${sale.lastname}`}\r\n        </div>\r\n        <div className='col'>Date: {formatDate(sale.created_at)}</div>\r\n        <div className='col'>Goods: {history.length}</div>\r\n        <div className='col'>Total: {sale.total}</div>\r\n      </div>\r\n      <div className='row justify-content-center pr-2 pl-2'>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Category</th>\r\n                <th>Quantity</th>\r\n                <th>Measure</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {history.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{sale.good_name}</td>\r\n                  <td>{sale.category_name}</td>\r\n                  <td>{sale.quantity}</td>\r\n                  <td>{sale.measure}</td>\r\n                  <td>{sale.price}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withTemplate(SaleDetail);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport Counter from '../../../components/counter/counter';\r\nimport SelectPeriod from '../../../components/select-period/select-period';\r\nimport ToolTipElement from '../../../components/tooltip/tooltip-element';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {time_periods} from '../../../services/constants';\r\nimport {\r\n  formatDate,\r\n  formatUrl,\r\n  getFormattedAmount,\r\n  getFromLocal,\r\n} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Sales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sales: [],\r\n      period: time_periods.ALL_TIME.value,\r\n      totals: {},\r\n    };\r\n  }\r\n\r\n  updateData = () => {\r\n    const {period} = this.state;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(formatUrl('sales', {period}))).then(\r\n          (res) => {\r\n            let {sales, totals} = res.data;\r\n            console.log(totals);\r\n            this.setState({sales, totals});\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n  handleDelete = (id) => {\r\n    let currentUser = getFromLocal('currentUser');\r\n    const updated_by = `${currentUser.firstname} ${currentUser.lastname}`;\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`sales/${id}/delete`, {sale_id: id, updated_by}),\r\n          'Sale deleted successfully'\r\n        ).then((res) => {\r\n          this.updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  updateFilter = (obj) => {\r\n    this.setState({...this.state, ...obj}, () => this.updateData());\r\n  };\r\n  render() {\r\n    const {sales, period, totals} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2>Sales</h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <div className='form-group'>\r\n            <SelectPeriod\r\n              selectedPeriod={period}\r\n              updatePeriod={(period) => this.updateFilter({period})}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='card-body'>\r\n          <div className='row justify-content-start'>\r\n            <Counter\r\n              title='Total Sales'\r\n              icon='fa fa-shopping-cart'\r\n              displayValue={totals.total_sales || 0}\r\n            />\r\n            <Counter\r\n              title='Total Expenses'\r\n              icon='fa fa-dollar'\r\n              displayValue={totals.total_expenses || 0}\r\n            />\r\n            <Counter\r\n              title='Total Credits in Ksh'\r\n              icon='fa fa-exclamation-circle'\r\n              displayValue={totals.total_credit_amount || 0}\r\n            />\r\n            <Counter\r\n              title='Mpesa '\r\n              icon='fa fa-dollar'\r\n              displayValue={totals.mpesa_pay || 0}\r\n            />\r\n            <Counter\r\n              title='Cash'\r\n              icon='fa fa-money-bill-wave'\r\n              displayValue={totals.cash_pay || 0}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Sold By</th>\r\n                <th>Payment Method</th>\r\n                <th>Number</th>\r\n                <th>Amount</th>\r\n                <th>Customer Pay</th>\r\n                <th>Customer Change</th>\r\n                <th>Date</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sales.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link to={'/admin/sales/view/' + sale.id}>\r\n                      {sale.firstname + ' ' + sale.lastname}\r\n                    </Link>\r\n                  </td>\r\n                  <td>{sale.payment_method}</td>\r\n                  <td>{sale.goods_count}</td>\r\n                  <td>{sale.total}</td>\r\n                  <td>{getFormattedAmount(sale.customer_pay, 1)}</td>\r\n                  <td>{getFormattedAmount(sale.customer_change, 1)}</td>\r\n                  <td>{formatDate(sale.created_at)}</td>\r\n                  <td>\r\n                    {sale.status === 1 && (\r\n                      <ToolTipElement\r\n                        tooltip={`Deleted by ${sale.updated_by} at ${formatDate(\r\n                          sale.updated_at\r\n                        )}`}\r\n                      >\r\n                        <div className='badge badge-danger'>Deleted</div>\r\n                      </ToolTipElement>\r\n                    )}\r\n                    {sale.status === 2 && (\r\n                      <ToolTipElement\r\n                        tooltip={`Edited by ${sale.updated_by} at ${formatDate(\r\n                          sale.updated_at\r\n                        )}`}\r\n                      >\r\n                        <div className='badge badge-success'>Edited</div>\r\n                      </ToolTipElement>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Sales);\r\n","import React from 'react';\r\nimport './loader.scss';\r\nimport {usePromiseTracker} from 'react-promise-tracker';\r\n\r\nfunction Loader() {\r\n  const {promiseInProgress} = usePromiseTracker();\r\n  if (promiseInProgress) {\r\n    return (\r\n      <div className='loader-container hidden-print'>\r\n        <div className='loader'>\r\n          <span>Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n\r\nexport default Loader;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Modal from '../../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {getFromLocal} from '../../../services/utility';\r\n\r\nexport default function AddStock(props) {\r\n  const {\r\n    handleCloseModal,\r\n    updateData,\r\n    selectedStock,\r\n    selectedPlace,\r\n    isAddEdit,\r\n  } = props;\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [stock, setStock] = useState({});\r\n  const [stockAdd, setStockAdd] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (selectedStock.id) {\r\n      setStock(selectedStock);\r\n      setStockAdd({price: selectedStock.buying_price});\r\n      setIsEdit(true);\r\n    }\r\n  }, [selectedStock]);\r\n\r\n  const handleSubmit = () => {\r\n    let url = '',\r\n      successMessage = '';\r\n    const currentUser = getFromLocal('currentUser') || {};\r\n\r\n    if (selectedPlace === places.RESTAURANT) {\r\n      url = 'stock/add-restaurant';\r\n      successMessage = 'Stock added successfully';\r\n\r\n      if (isEdit) {\r\n        url = 'stock/edit-restaurant';\r\n        successMessage = 'Stock edited successfully';\r\n        delete stock.quantity;\r\n        delete stock.price;\r\n      }\r\n    } else {\r\n      if (isEdit) {\r\n        url = `pricings/${stock.id}/edit`;\r\n        successMessage = 'Stock updated successfully';\r\n        stock.quantity_remaining = stock.quantity;\r\n        stock.buying_price = stock.price;\r\n      }\r\n    }\r\n\r\n    if (!isAddEdit && isEdit) {\r\n      if (selectedPlace === places.RESTAURANT) {\r\n        stock.price = stockAdd.price;\r\n        stock.quantity = stockAdd.quantity;\r\n        successMessage = 'Stock quantity updated';\r\n      } else {\r\n        stock.quantity_remaining = stockAdd.quantity;\r\n        stock.buying_price = stockAdd.price;\r\n        successMessage = 'Stock quantity updated';\r\n      }\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(url, {\r\n            ...stock,\r\n            updated_by: `${currentUser.firstname} ${currentUser.lastname}`,\r\n          }),\r\n          successMessage\r\n        ).then((res) => {\r\n          setStock({});\r\n          handleCloseModal();\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateStockChange = (obj) => {\r\n    setStock({...stock, ...obj});\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>\r\n            {!isAddEdit\r\n              ? 'Update Good Stock'\r\n              : isEdit\r\n              ? 'Edit Stock'\r\n              : 'New Stock'}\r\n          </div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          {isAddEdit ? (\r\n            <div className='form-group'>\r\n              <label htmlFor=''>Name</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='E.g Salt'\r\n                value={stock.stock_name}\r\n                onChange={(e) =>\r\n                  updateStockChange({stock_name: e.target.value})\r\n                }\r\n                disabled={selectedPlace === places.BAR}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {selectedPlace === places.RESTAURANT && isAddEdit ? (\r\n            <div className='form-group'>\r\n              <label htmlFor=''>Measure</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='E.g Bales'\r\n                value={stock.measure}\r\n                onChange={(e) => updateStockChange({measure: e.target.value})}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {!isAddEdit ? (\r\n            <div className='form-group'>\r\n              <label htmlFor=''>\r\n                Buying Price{' '}\r\n                {stock.measure ? `Per ${stock.measure.slice(0, -1)}` : ''}\r\n              </label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Eg 300'\r\n                value={stockAdd.price}\r\n                onChange={(e) =>\r\n                  setStockAdd({...stockAdd, price: e.target.value})\r\n                }\r\n              />\r\n            </div>\r\n          ) : null}\r\n          '\r\n          {!isAddEdit && (\r\n            <div className='form-group'>\r\n              <label htmlFor=''>Quantity in {selectedStock.measure}</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='e.g 4'\r\n                value={stockAdd.quantity}\r\n                onChange={(e) =>\r\n                  setStockAdd({...stockAdd, quantity: e.target.value})\r\n                }\r\n              />\r\n            </div>\r\n          )}\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button\r\n              className='btn btn-secondary col-4'\r\n              onClick={handleCloseModal}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={handleSubmit}>\r\n              {isAddEdit ? 'Save Stock' : 'Add stock'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {formatUrl} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport AddStock from './add-stock';\r\n\r\nclass Stock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedPlace: places.BAR,\r\n      stock: [],\r\n      showAddStock: false,\r\n      selectedStock: {},\r\n      isAddEdit: false,\r\n    };\r\n  }\r\n\r\n  updateData = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendGetRequest(formatUrl('stock', {place: this.state.selectedPlace}))\r\n        ).then((res) => {\r\n          let {stock} = res.data;\r\n          this.setState({stock, selectedStock: {}});\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n\r\n  updatePropChange = (obj) => {\r\n    this.setState({...this.state, ...obj}, () => this.updateData());\r\n  };\r\n\r\n  onDelete = (item) => {\r\n    const {selectedPlace} = this.state;\r\n    let url = `stock/${item.id}/delete`;\r\n\r\n    if (selectedPlace === places.BAR) {\r\n      url = `pricings/${item.id}/delete`;\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendPostRequest(url)).then((res) => {\r\n          this.updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  onEdit = (selectedStock) => {\r\n    this.setState({selectedStock, showAddStock: true, isAddEdit: true});\r\n  };\r\n\r\n  onAddStock = (selectedStock) => {\r\n    this.setState({selectedStock, showAddStock: true, isAddEdit: false});\r\n  };\r\n\r\n  toggleShowAdd = () => {\r\n    this.setState({\r\n      showAddStock: !this.state.showAddStock,\r\n      selectedStock: {},\r\n      isAddEdit: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedPlace,\r\n      stock,\r\n      showAddStock,\r\n      selectedStock,\r\n      isAddEdit,\r\n    } = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2>Stock</h2>\r\n        {showAddStock && (\r\n          <AddStock\r\n            selectedStock={selectedStock}\r\n            handleCloseModal={this.toggleShowAdd}\r\n            updateData={this.updateData}\r\n            selectedPlace={selectedPlace}\r\n            isAddEdit={isAddEdit}\r\n          />\r\n        )}\r\n        <div className='row '>\r\n          <div className='col row justify-content-start'>\r\n            <div className='form-group'>\r\n              <div\r\n                className='btn-group col-12'\r\n                role='group'\r\n                aria-label='Basic example'\r\n              >\r\n                <button\r\n                  type='button'\r\n                  className={`btn btn-${\r\n                    selectedPlace === places.RESTAURANT\r\n                      ? 'white border-dark'\r\n                      : 'dark'\r\n                  }`}\r\n                  onClick={() =>\r\n                    this.updatePropChange({selectedPlace: places.BAR})\r\n                  }\r\n                >\r\n                  Bar Stock\r\n                </button>\r\n                <button\r\n                  type='button'\r\n                  className={`btn btn-${\r\n                    selectedPlace === places.BAR ? 'white border-dark' : 'dark'\r\n                  }`}\r\n                  onClick={() =>\r\n                    this.updatePropChange({selectedPlace: places.RESTAURANT})\r\n                  }\r\n                >\r\n                  Restaurant Stock\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col row justify-content-end'>\r\n            {selectedPlace === places.RESTAURANT && (\r\n              <div className='form-group'>\r\n                <button className='btn btn-info' onClick={this.toggleShowAdd}>\r\n                  <i className='fa fa-plus mr-2'></i>\r\n                  Add Stock\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Good</th>\r\n                <th>Quantity</th>\r\n                <th>@</th>\r\n                <th>Total</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {stock.map((item, index) => (\r\n                <tr key={item.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={formatUrl('/admin/stock/history', {\r\n                        stock: item.id,\r\n                        place: selectedPlace,\r\n                      })}\r\n                    >\r\n                      {item.stock_name}\r\n                    </Link>\r\n                  </td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>\r\n                    {item.buying_price ? 'Ksh ' + item.buying_price : '_'}\r\n                  </td>\r\n                  <td>{'Ksh ' + item.price}</td>\r\n                  <td>\r\n                    <div className='d-flex justify-content-center w-75'>\r\n                      {selectedPlace === places.RESTAURANT ? (\r\n                        <TableIcon onClick={() => this.onEdit(item)}>\r\n                          <i className='fa fa-edit'></i>\r\n                        </TableIcon>\r\n                      ) : null}\r\n                      <TableIcon onClick={() => this.onAddStock(item)}>\r\n                        <i className='fa fa-plus'></i>\r\n                      </TableIcon>\r\n                      <TableIcon onClick={() => this.onDelete(item)}>\r\n                        <i className='fa fa-trash'></i>\r\n                      </TableIcon>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Stock);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {action_types} from '../../../services/constants';\r\nimport {\r\n  formatDate,\r\n  formatUrl,\r\n  getDateTimeAgo,\r\n  convertObjectToArray,\r\n} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass StockHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [],\r\n      stock: {},\r\n    };\r\n  }\r\n\r\n  updateData = () => {\r\n    const {stock, place} = this.props;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendGetRequest(formatUrl('stock/history', {stock_id: stock, place}))\r\n        ).then((res) => {\r\n          const {history, stock} = res.data;\r\n          this.setState({history, stock});\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n\r\n  getBadgeColor = (action_type) => {\r\n    let action =\r\n      convertObjectToArray(action_types).find(\r\n        (act) => act.value === parseInt(action_type)\r\n      ) || {};\r\n\r\n    return (\r\n      <span className={`badge badge-${action.badgeColor}`}>\r\n        {action.display}\r\n      </span>\r\n    );\r\n  };\r\n  render() {\r\n    const {history, stock} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h3 className='text-center mb-2'>Stock history</h3>\r\n        <div className='card'>\r\n          <div className='card-header'>\r\n            <div className='row'>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Stock Name</h6>\r\n                <p className='text-dark'>{stock.stock_name}</p>\r\n              </div>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Current Quantity</h6>\r\n                <p className='text-dark'>{stock.quantity}</p>\r\n              </div>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Total Stock Cost</h6>\r\n                <p className='text-dark'>{stock.price}</p>\r\n              </div>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Created</h6>\r\n                <p className='text-dark'>{formatDate(stock.created_at)}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='card-body'>\r\n            <div className='table-responsive'>\r\n              <table\r\n                className='table display table-hover table-striped datatable'\r\n                style={{width: '100%'}}\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Date</th>\r\n                    <th>Buying Price</th>\r\n                    <th>Quantity</th>\r\n                    <th>Action Type</th>\r\n                    <th>Updated By</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {history.map((hst, index) => (\r\n                    <tr key={hst.id}>\r\n                      <td>{++index}</td>\r\n                      <td title={formatDate(hst.updated_at)}>\r\n                        {getDateTimeAgo(hst.updated_at)}\r\n                      </td>\r\n                      <td>{'Ksh ' + hst.buying_price}</td>\r\n                      <td>{hst.quantity}</td>\r\n                      <td>{this.getBadgeColor(hst.action_type)}</td>\r\n                      <td>{hst.updated_by}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(StockHistory);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Modal from '../../components/modal/modal';\r\nimport TableIcon from '../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../services/api-handle';\r\nimport {places} from '../../services/constants';\r\nimport {formatUrl, getFromLocal} from '../../services/utility';\r\nimport AddStock from '../admin/stock/add-stock';\r\n\r\nexport default function EmployeeStock(props) {\r\n  const [stock, setStock] = useState([]);\r\n  const [place, setPlace] = useState(places.BAR);\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [showUpdate, setShowUpdate] = useState(false);\r\n  const [selectedStock, setSelectedStock] = useState({});\r\n\r\n  const updateData = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(formatUrl('stock', {place}))).then(\r\n          (res) => {\r\n            setStock(res.data.stock);\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n  useEffect(updateData, [place]);\r\n\r\n  const toggleShowAdd = () => {\r\n    setShowAdd(!showAdd);\r\n  };\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      {showAdd && (\r\n        <AddStock\r\n          selectedStock={{}}\r\n          handleCloseModal={toggleShowAdd}\r\n          updateData={updateData}\r\n          selectedPlace={place}\r\n          isAddEdit={true}\r\n        />\r\n      )}\r\n\r\n      {showUpdate && (\r\n        <UpdateStock\r\n          handleCloseModal={() => {\r\n            setShowUpdate(false);\r\n            setSelectedStock({});\r\n          }}\r\n          updateData={updateData}\r\n          selectedStock={selectedStock}\r\n          place={place}\r\n        />\r\n      )}\r\n      <div className='row'>\r\n        <div className='col-12'>\r\n          <div className='card'>\r\n            <div className='card-header border-bottom-0'>\r\n              <h1 className='text-center jumbotron w-100 gradient-3'>Stock</h1>\r\n            </div>\r\n            <div className='card-body'>\r\n              <div className='w-100 row'>\r\n                <div className='col row justify-content-start'>\r\n                  <div className='form-group'>\r\n                    <div\r\n                      className='btn-group col-12'\r\n                      role='group'\r\n                      aria-label='Basic example'\r\n                    >\r\n                      <button\r\n                        type='button'\r\n                        className={`btn btn-${\r\n                          place === places.RESTAURANT\r\n                            ? 'white border-dark'\r\n                            : 'dark'\r\n                        }`}\r\n                        onClick={() => setPlace(places.BAR)}\r\n                      >\r\n                        Bar Stock\r\n                      </button>\r\n                      <button\r\n                        type='button'\r\n                        className={`btn btn-${\r\n                          place === places.BAR ? 'white border-dark' : 'dark'\r\n                        }`}\r\n                        onClick={() => setPlace(places.RESTAURANT)}\r\n                      >\r\n                        Restaurant Stock\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='col row justify-content-end'>\r\n                  {place === places.RESTAURANT && (\r\n                    <div className='form-group'>\r\n                      <button className='btn btn-info' onClick={toggleShowAdd}>\r\n                        <i className='fa fa-plus mr-2'></i>\r\n                        Add Stock\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className='table-responsive'>\r\n                <table className='table table-striped table-hover'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Good</th>\r\n                      <th>Quantity</th>\r\n                      <th>@</th>\r\n                      <th>Total</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {stock.map((item, index) => (\r\n                      <tr key={item.id}>\r\n                        <td>{++index}</td>\r\n                        <td>{item.stock_name}</td>\r\n                        <td>{item.quantity}</td>\r\n                        <td>\r\n                          {item.buying_price ? 'Ksh ' + item.buying_price : '_'}\r\n                        </td>\r\n                        <td>{'Ksh ' + item.price}</td>\r\n                        <td>\r\n                          <div className='d-flex justify-content-center w-75'>\r\n                            <TableIcon\r\n                              onClick={() => {\r\n                                setShowUpdate(true);\r\n                                setSelectedStock(item);\r\n                              }}\r\n                            >\r\n                              <i className='fa fa-plus'></i>\r\n                            </TableIcon>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UpdateStock(props) {\r\n  const {selectedStock, handleCloseModal, place, updateData} = props;\r\n  const [stock, setStock] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (selectedStock.id) {\r\n      setStock({\r\n        id: selectedStock.id,\r\n        price: selectedStock.buying_price,\r\n      });\r\n    }\r\n  }, [selectedStock]);\r\n\r\n  const updateStockChange = (obj) => {\r\n    setStock({...stock, ...obj});\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let url = '',\r\n      successMessage = '';\r\n    const currentUser = getFromLocal('currentUser') || {};\r\n\r\n    if (place === places.RESTAURANT) {\r\n      url = 'stock/edit-restaurant';\r\n      successMessage = 'Stock edited successfully';\r\n    } else {\r\n      url = `pricings/${stock.id}/edit`;\r\n      successMessage = 'Stock updated successfully';\r\n      stock.quantity_remaining = stock.quantity;\r\n      stock.buying_price = stock.price;\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(url, {\r\n            ...stock,\r\n            updated_by: `${currentUser.firstname} ${currentUser.lastname}`,\r\n          }),\r\n          successMessage\r\n        ).then((res) => {\r\n          setStock({});\r\n          handleCloseModal();\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>\r\n            New Stock for -{selectedStock.stock_name}\r\n          </div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Buying Price</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Eg 300'\r\n              value={stock.price}\r\n              onChange={(e) => updateStockChange({price: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Quantity in {selectedStock.measure}</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Eg 3'\r\n              value={stock.quantity}\r\n              onChange={(e) => updateStockChange({quantity: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button\r\n              className='btn btn-secondary col-4'\r\n              onClick={handleCloseModal}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={handleSubmit}>\r\n              Add Stock\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Modal from '../../../components/modal/modal';\r\nimport SelectPeriod from '../../../components/select-period/select-period';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {\r\n  formatDate,\r\n  formatUrl,\r\n  getDateTimeAgo,\r\n  getFromLocal,\r\n} from '../../../services/utility';\r\n\r\nimport withTemplate from '../with-template';\r\n\r\nfunction Expenses() {\r\n  const [showAddExpense, setShowAddExpense] = useState(false);\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [period, setPeriod] = useState({});\r\n\r\n  const toggleShowAddExpense = () => {\r\n    setShowAddExpense(!showAddExpense);\r\n  };\r\n\r\n  const updateData = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(formatUrl('expenses', {period}))).then(\r\n          (res) => {\r\n            setExpenses(res.data.expenses);\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(updateData, [period]);\r\n\r\n  const handleDelete = (expense) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('expenses/delete', {expense_id: expense.id}),\r\n          'Expense deleted successfully'\r\n        ).then((res) => updateData())\r\n      )\r\n    );\r\n  };\r\n  const currentUser = getFromLocal('currentUser');\r\n\r\n  return (\r\n    <div className='mt-3'>\r\n      <div className='card w-100'>\r\n        {showAddExpense && (\r\n          <AddExpense\r\n            currentUser={currentUser}\r\n            handleCloseModal={toggleShowAddExpense}\r\n            updateData={updateData}\r\n          />\r\n        )}\r\n        <div className='card-header'>\r\n          <h1 className='w-100'>\r\n            Expenses\r\n            <div className='float-right row justify-content-end'>\r\n              <div className='form-group mx-1'>\r\n                <SelectPeriod\r\n                  selectedPeriod={period}\r\n                  updatePeriod={(period) => setPeriod(period)}\r\n                />\r\n              </div>\r\n              <div className='form-group mx-1'>\r\n                <button\r\n                  className='btn btn-info '\r\n                  onClick={toggleShowAddExpense}\r\n                >\r\n                  <i className='fa fa-plus mr-2'></i>\r\n                  Add Expense\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </h1>\r\n        </div>\r\n        <div className='card-body'>\r\n          <div className='table-responsive'>\r\n            <table\r\n              className='table display table-hover table-striped datatable'\r\n              style={{width: '100%'}}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Recorded By</th>\r\n                  <th>Description</th>\r\n                  <th>Amount</th>\r\n                  <th>Created</th>\r\n                  <th>Updated</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {expenses.map((expense, index) => (\r\n                  <tr key={expense.id}>\r\n                    <td>{++index}</td>\r\n                    <td>\r\n                      {expense.admin_name\r\n                        ? expense.admin_name + ' (admin)'\r\n                        : expense.employee_name + ' (employee)'}\r\n                    </td>\r\n                    <td>\r\n                      <span className='text-wrap'>\r\n                        {expense.expense_description}\r\n                      </span>\r\n                    </td>\r\n                    <td>{expense.expense_amount}</td>\r\n                    <td title={formatDate(expense.created_at)}>\r\n                      {getDateTimeAgo(expense.created_at)}\r\n                    </td>\r\n                    <td title={formatDate(expense.updated_at)}>\r\n                      {getDateTimeAgo(expense.updated_at)}\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        className='btn btn-danger'\r\n                        onClick={() => handleDelete(expense)}\r\n                      >\r\n                        <i className='fa fa-trash mr-2'></i>\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AddExpense(props) {\r\n  const {handleCloseModal, currentUser, updateData} = props;\r\n  const [expense, setExpense] = useState({});\r\n\r\n  useEffect(() => {\r\n    setExpense({admin_id: currentUser.id});\r\n  }, [currentUser]);\r\n\r\n  const handleSaveExpense = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('expenses/new', expense),\r\n          'Expense added successfully'\r\n        ).then((res) => {\r\n          handleCloseModal();\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>Expense Details</div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Expense Amount</label>\r\n            <input\r\n              type='number'\r\n              className='form-control'\r\n              placeholder='E.g 400'\r\n              value={expense.expense_amount}\r\n              onChange={(e) =>\r\n                setExpense({...expense, expense_amount: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Expense Description</label>\r\n            <textarea\r\n              name=''\r\n              id=''\r\n              cols='30'\r\n              rows='3'\r\n              className='form-control'\r\n              placeholder='E.g Payment for motorbike'\r\n              value={expense.expense_description}\r\n              onChange={(e) =>\r\n                setExpense({...expense, expense_description: e.target.value})\r\n              }\r\n            ></textarea>\r\n          </div>\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button\r\n              className='btn btn-secondary col-4'\r\n              onClick={handleCloseModal}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className='btn btn-primary col-4'\r\n              onClick={handleSaveExpense}\r\n            >\r\n              Save Expense\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default withTemplate(Expenses);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport SelectPeriod from '../../../components/select-period/select-period';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatDate, formatUrl} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nfunction Debtors() {\r\n  const [creditors, setCreditors] = useState([]);\r\n  const [period, setPeriod] = useState('');\r\n\r\n  const updateData = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(formatUrl('creditors', {period}))).then(\r\n          (res) => {\r\n            setCreditors(res.data.creditors);\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleClear = (credit) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('creditors/clear', {\r\n            credit_id: credit.id,\r\n            is_cleared: !credit.is_cleared,\r\n          }),\r\n          'Credit Cleared successfully'\r\n        ).then((res) => {\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n  useEffect(updateData, [period]);\r\n  return (\r\n    <div className='mt-3'>\r\n      <h2>\r\n        Debtors{' '}\r\n        <div className='float-right row justify-content-end'>\r\n          <div className='form-group'>\r\n            <SelectPeriod\r\n              selectedPeriod={period}\r\n              updatePeriod={(period) => setPeriod(period)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </h2>\r\n      <div className='w-100 px-1 py-1'>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Amount</th>\r\n                <th>Reason</th>\r\n                <th>Updated At</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {creditors.map((creditor, index) => (\r\n                <tr key={creditor.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <b>{creditor.creditor_name}</b>\r\n                    <br />\r\n                    {creditor.creditor_phone}\r\n                  </td>\r\n                  <td>{creditor.credit_amount}</td>\r\n                  <td>\r\n                    <span className='text-wrap'>{creditor.credit_reason}</span>\r\n                  </td>\r\n                  <td>{formatDate(creditor.updated_at)}</td>\r\n                  <td>\r\n                    {creditor.is_cleared ? (\r\n                      <span className='badge badge-success'>Cleared</span>\r\n                    ) : (\r\n                      <span className='badge badge-warning'>Pending</span>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {!creditor.is_cleared ? (\r\n                      <button\r\n                        className={`btn btn-success mx-1`}\r\n                        onClick={() => handleClear(creditor)}\r\n                      >\r\n                        <i className='fa fa-check mr-2'></i>\r\n                        Clear\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        className='btn btn-warning'\r\n                        onClick={() => handleClear(creditor)}\r\n                      >\r\n                        <i className='fa fa-refresh mr-2'></i>\r\n                        Revive\r\n                      </button>\r\n                    )}\r\n\r\n                    <Link\r\n                      to={`/admin/sales/view/${creditor.sale_id}`}\r\n                      className='btn btn-dark mx-1'\r\n                    >\r\n                      View Sale\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withTemplate(Debtors);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport SelectPeriod from '../../../components/select-period/select-period';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {time_periods} from '../../../services/constants';\r\nimport {formatDate, formatUrl} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nfunction Summary() {\r\n  const [period, setPeriod] = useState(time_periods.ALL_TIME.value);\r\n  const [summary, setSummary] = useState([]);\r\n\r\n  const updateData = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(formatUrl('summary', {period}))).then(\r\n          (res) => {\r\n            setSummary(res.data.summary);\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(updateData, [period]);\r\n\r\n  return (\r\n    <div className='mt-3'>\r\n      <h1 className='mb-4'>\r\n        Summary\r\n        <div className='float-right'>\r\n          <SelectPeriod\r\n            selectedPeriod={period}\r\n            updatePeriod={(period) => setPeriod(period)}\r\n          />\r\n        </div>\r\n      </h1>\r\n\r\n      {summary.map((item) => (\r\n        <HistoryItem key={item.id} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction HistoryItem(props) {\r\n  const {item} = props;\r\n  return (\r\n    <div className='w-100 card'>\r\n      <div className='card-header'>\r\n        <h4>{formatDate(item.created_at)}</h4>\r\n      </div>\r\n      <div className='card-body'>\r\n        <div className='row'>\r\n          <div className='col border-right border-dark'>\r\n            <DisplayLabel display={item.sales_total} label='Total Sales' />\r\n            <DisplayLabel display={item.mpesa_sales} label='Mpesa sales' />\r\n            <DisplayLabel display={item.cash_sales} label='Jumia sales' />\r\n            <DisplayLabel display={item.card_sales} label='Card Sales' />\r\n            <DisplayLabel display={item.glovo_sales} label='Glovo Sales' />\r\n            <DisplayLabel\r\n              display={item.uber_eats_sales}\r\n              label='Uber Eats Sales'\r\n            />\r\n            <DisplayLabel\r\n              display={item.little_cab_sales}\r\n              label='Little Cab Sales'\r\n            />\r\n          </div>\r\n          <div className='col '>\r\n            <DisplayLabel display={item.credit_sales} label='Credit Sales' />\r\n            <DisplayLabel\r\n              display={item.expenses_amount_total}\r\n              label='Total Expenses'\r\n            />\r\n            <DisplayLabel\r\n              display={item.closing_bar_stock}\r\n              label='Closing Bar Stock'\r\n            />\r\n            <DisplayLabel\r\n              display={item.closing_restaurant_stock}\r\n              label='Closing Restaurant Stock'\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction DisplayLabel(props) {\r\n  const {display, label} = props;\r\n  return (\r\n    <>\r\n      <h6>{label}</h6>\r\n      <p>{'Ksh ' + display}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withTemplate(Summary);\r\n","import {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport Admins from './pages/admin/admins/admins';\r\nimport AdminDashboard from './pages/admin/dashboard/admin-dashboard';\r\nimport EmployeeDashboard from './pages/employee/employee-dashboard';\r\nimport Employees from './pages/admin/employees/employees';\r\nimport Login from './pages/login/login';\r\nimport Categories from './pages/admin/category/categories';\r\nimport Goods from './pages/admin/goods/goods';\r\nimport Pricing from './pages/admin/pricing/pricing';\r\nimport EmployeeWelcome from './pages/employee/employee-welcome';\r\nimport EmployeeSales from './pages/employee/employee-sales';\r\nimport EmployeeSaleDetail from './pages/employee/employee-sale-detai';\r\nimport SaleDetail from './pages/admin/sales/sale-detail';\r\nimport Sales from './pages/admin/sales/sales';\r\nimport Loader from './components/loader/loader';\r\nimport ReceiptPrint from './components/receipt/receipt-print';\r\nimport Stock from './pages/admin/stock/stock';\r\nimport StockHistory from './pages/admin/stock/stock-history';\r\nimport EmployeeStock from './pages/employee/employee-stock';\r\nimport Expenses from './pages/admin/expenses/expenses';\r\nimport Debtors from './pages/admin/debtors/debtors';\r\nimport Summary from './pages/admin/summary/summary';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nfunction Routes() {\r\n  let query = useQuery();\r\n  return (\r\n    <>\r\n      <Loader />\r\n\r\n      <ToastContainer hideProgressBar={true} />\r\n      <Switch>\r\n        <Route path='/login' render={(props) => <Login {...props} />}></Route>\r\n        <Route\r\n          exact\r\n          path='/employee'\r\n          render={(props) => <EmployeeWelcome {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/dashboard/:id'\r\n          render={(props) => <EmployeeDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/dashboard/:id/edit/:sale_id'\r\n          render={(props) => <EmployeeDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/sales/:place'\r\n          render={(props) => <EmployeeSales {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/stock'\r\n          render={(props) => <EmployeeStock {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/sales/view/:id'\r\n          render={(props) => <EmployeeSaleDetail {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/print'\r\n          render={(props) => (\r\n            <ReceiptPrint\r\n              {...props}\r\n              sale_id={query.get('sale_id')}\r\n              width={query.get('width')}\r\n            />\r\n          )}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin'\r\n          render={(props) => <AdminDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='admin/dashboard'\r\n          render={(props) => <AdminDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/sales/view/:id'\r\n          render={(props) => <SaleDetail {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/sales'\r\n          render={(props) => <Sales {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/expenses'\r\n          render={(props) => <Expenses {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/debtors'\r\n          render={(props) => <Debtors {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/summary'\r\n          render={(props) => <Summary {...props} />}\r\n        ></Route>\r\n\r\n        <Route\r\n          exact\r\n          path='/admin/admins'\r\n          render={(props) => <Admins {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/stock'\r\n          render={(props) => <Stock {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/stock/history'\r\n          render={(props) => (\r\n            <StockHistory\r\n              {...props}\r\n              stock={query.get('stock')}\r\n              place={query.get('place')}\r\n            />\r\n          )}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/employees'\r\n          render={(props) => <Employees {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/categories'\r\n          render={(props) => <Categories {...props} />}\r\n        ></Route>\r\n\r\n        <Route\r\n          exact\r\n          path='/admin/products/:id'\r\n          render={(props) => <Goods {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/products/:id/pricing'\r\n          render={(props) => <Pricing {...props} />}\r\n        ></Route>\r\n\r\n        <Redirect exact to='/login' />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport Routes from './routes';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\n\nimport 'bootstrap';\nimport 'bootstrap-select';\nimport 'global';\nimport 'datatables.net-dt'\nimport './services/common';\nimport './sass/app.scss';\n\nwindow.$ = $;\nwindow.Popper = Popper;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}