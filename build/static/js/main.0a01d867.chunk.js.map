{"version":3,"sources":["components/table-icon/table-icon.jsx","services/api-handle.js","services/api-const.js","services/constants.js","services/utility.js","pages/admin/header.jsx","pages/admin/sidebar.jsx","pages/admin/with-template.jsx","components/modal/modal.jsx","pages/admin/admins/add-admin.jsx","pages/admin/admins/admins.jsx","components/counter/counter.jsx","components/select-period/select-period.jsx","pages/admin/dashboard/best-selling.jsx","pages/admin/dashboard/sales-graph.jsx","pages/admin/dashboard/admin-dashboard.jsx","components/category/category.jsx","components/header/header.jsx","components/process-transaction/process-transaction.jsx","components/receipt/receipt.jsx","components/receipt/receipt-print.jsx","pages/employee/with-employee-validation.jsx","pages/employee/employee-dashboard.jsx","pages/admin/employees/add-employee.jsx","pages/admin/employees/employees.jsx","pages/login/login.jsx","pages/admin/category/categories.jsx","pages/admin/goods/goods.jsx","pages/admin/pricing/pricing.jsx","pages/employee/employee-welcome.jsx","components/tooltip/tooltip-element.jsx","pages/employee/employee-sales.jsx","pages/employee/employee-sale-detai.jsx","pages/admin/sales/sale-detail.jsx","pages/admin/sales/sales.jsx","components/loader/loader.jsx","pages/admin/stock/add-stock.jsx","pages/admin/stock/stock.jsx","pages/admin/stock/stock-history.jsx","pages/employee/employee-stock.jsx","routes.js","App.js","reportWebVitals.js","index.js"],"names":["TableIcon","props","children","onClick","className","API","axios","create","baseURL","showNotification","title","color","position","toastId","toast","success","warn","error","sendPostRequest","url","params","post","sendGetRequest","get","handleSuccess","promiseFunc","successMessage","then","res","handleError","catch","err","response","message","data","errors","key","forEach","user_types","places","process","REACT_APP_APP_ENV","toLowerCase","REACT_APP_APP_NAME","REACT_APP_API_URL","payment_methods","printer_widths","action_types","ADD","display","value","badgeColor","EDIT","SALE","time_periods","TODAY","YESTERDAY","THIS_WEEK","THIS_MONTH","THIS_YEAR","ALL_TIME","objetPropEmpty","obj","getDateTimeAgo","dateStr","moment","fromNow","getFromLocal","name","JSON","parse","localStorage","getItem","removeFromLocalStorage","removeItem","formatDate","date","isValid","format","formatUrl","urlParams","args","arg","substr","length","getFormattedAmount","amount","quantity","getFormattedMeasure","unit","measure","convertObjectToArray","arr","i","push","getMapDisplayDate","timePeriod","Header","useEffect","$","on","toggleClass","currentUser","class","to","href","role","data-toggle","firstname","style","id","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","d","cx","cy","r","points","x1","y1","x2","y2","history","SideBar","data-feather","withTemplate","WrappedComponent","isAdmin","this","minHeight","React","Component","Modal","addClass","removeClass","paddingRight","AddAdmin","handleClose","useState","lastname","email","phone","password","admin","setAdmin","updateAdminProp","htmlFor","type","placeholder","onChange","e","target","confirm_password","trackPromise","updateShowAdmin","showAddAdmin","setState","onDelete","fetchAdmins","state","admins","map","index","updated_at","Counter","icon","displayValue","extraTitle","SelectPeriod","selectedPeriod","updatePeriod","periodArr","displayPeriod","find","period","aria-expanded","BestSelling","bestSelling","item","stock_name","category_name","count","pricing","SalesGraph","barSales","restaurantSales","chart","setChart","chartData","labels","bar","restaurant","prepData","newOptions","options","categories","updateOptions","series","toolbar","show","plotOptions","horizontal","columnWidth","endingShape","colors","dataLabels","enabled","markers","shape","legend","fontSize","horizontalAlign","strokeWidth","strokeColor","fillColors","undefined","radius","offsetX","offsetY","grid","borderColor","xaxis","fontFamily","fontWeight","cssClass","crosshairs","yaxis","opacity","tooltip","y","formatter","val","barChart","ApexCharts","document","querySelector","render","updateData","totals","updateFilter","bar_sales_count","restaurant_sales_count","restaurant_profit","Math","abs","toFixed","bar_profit","bar_stock_worth","restaurant_stock_worth","out_of_stock","ceil","average_daily_sales","bar_sales","restaurant_sales","best_selling","Item","onItemClick","Category","category","goods","good","place","parseInt","aria-labelledby","ProcessTransaction","selectedItem","handleAddToCart","pricings","setPricings","setCount","selectedForCart","setSelectedForCart","itemId","pricingItem","quantity_remaining","toSend","price","removeFromCart","useOnlinePrice","itemPrice","setItemPrice","online_price","Receipt","cartItems","handleSale","payObj","setUseOnlinePrice","getRawTotalAmount","getTotalAmount","payment_method","transaction_code","total","receiptWidth","payment","setPayment","sale_id","useOnline","method","methods","removeFromArray","filter","it","includes","checkIfUseOnline","customer_pay","customer_change","parseFloat","continueToPrint","ReceiptPrint","setCartItems","cart_items","sale","onAfterPrint","goBack","maxWidth","colSpan","created_at","window","print","html2canvas","getElementById","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","withEmployeeValidation","handleChangeCategory","selectedCategoryId","getFilteredCategories","handleSearch","q","findIndex","cItem","splice","addSaleUrl","addHistoryUrl","sold_by","sold_goods","sold_by_text","saleResp","quantities","measures","prices","ids","match","showPrint","filteredCategories","saleId","receiptRef","createRef","getCategories","printReceipt","aria-label","aria-describedby","AddEmployee","updateEmpProp","showAddEmployee","employee","fetchEmployees","employees","emp","Login","updatePropChange","user","handleLogin","redirectUrl","level","toStoreInLocal","setItem","stringify","AddCategory","setCategory","updateShowAddCategory","showAddCategory","fetchCategories","AddProduct","product","setProduct","updateShowAddProduct","showAddProduct","fetchProducts","products","categoryId","selectedPricing","addPricing","goodId","updated_by","getPricings","showEditPricing","displayProfileLossBadge","buyingPrice","selllingPrice","percent","badgeClass","displayText","buying_price","alignItems","justifyContent","marginTop","ToolTipElement","data-placement","sales","setSales","setPeriod","prd","goods_count","status","handleDelete","setSale","setHistory","good_name","Loader","usePromiseTracker","promiseInProgress","AddStock","handleCloseModal","selectedStock","selectedPlace","isAddEdit","isEdit","setIsEdit","stock","setStock","stockAdd","setStockAdd","updateStockChange","disabled","slice","onEdit","showAddStock","onAddStock","toggleShowAdd","stock_id","getBadgeColor","action_type","action","act","hst","EmployeeStock","setPlace","showAdd","setShowAdd","showUpdate","setShowUpdate","setSelectedStock","UpdateStock","Routes","query","URLSearchParams","useLocation","search","hideProgressBar","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Popper","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0a01d867.chunk.js","sourcesContent":["import React from 'react';\r\nimport './table-icon.scss';\r\n\r\nfunction TableIcon(props) {\r\n  const {children, onClick} = props;\r\n  return (\r\n    <div\r\n      className='icon-container p-2 link rounded-circle shadow shadow-secondary text-center'\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableIcon;\r\n","import axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport {API_URL} from './api-const';\r\nlet API = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\nexport function showNotification(title, color, position, toastId) {\r\n  if (color === 'success') {\r\n    toast.success(title, {position: position || 'top-right', toastId});\r\n  } else if (color === 'warning') {\r\n    toast.warn(title, {position: position || 'top-right', toastId});\r\n  } else {\r\n    toast.error(title, {position: position || 'top-right', toastId});\r\n  }\r\n}\r\nexport function sendPostRequest(url, params) {\r\n  return API.post(url, params);\r\n}\r\n\r\nexport function sendGetRequest(url) {\r\n  return API.get(url);\r\n}\r\n\r\nexport function sendFormData(url, formData) {\r\n  return API({\r\n    url: url,\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      accept: 'application/json',\r\n    },\r\n    data: formData,\r\n  });\r\n}\r\n\r\nexport function handleSuccess(promiseFunc, successMessage) {\r\n  return promiseFunc.then((res) => {\r\n    if (showNotification) {\r\n      showNotification(successMessage, 'success');\r\n    }\r\n    return res;\r\n  });\r\n}\r\n\r\nexport function handleError(promiseFunc) {\r\n  return promiseFunc.catch((err) => {\r\n    if (err.response) {\r\n      let message = err.response.data;\r\n\r\n      if (message) {\r\n        if (message.errors) {\r\n          for (let key in message.errors) {\r\n            let error = message.errors[key];\r\n\r\n            error.forEach((err) => showNotification(err, 'danger'));\r\n          }\r\n        } else {\r\n          showNotification(message.message, 'danger');\r\n        }\r\n      } else {\r\n        showNotification('Database Error', 'danger');\r\n      }\r\n    } else {\r\n      showNotification('You are offline', 'warning');\r\n    }\r\n\r\n    return err;\r\n  });\r\n}\r\n","export const API_URL = 'https://posbackend.sk.co.ke/api';\r\n// export const API_URL = 'http://127.0.0.1:8000/api/';\r\n","export const user_types = {\r\n  EMPLOYEE: 2,\r\n  ADMIN: 1,\r\n};\r\n\r\nexport const CONFIG = {\r\n  env: process.env.REACT_APP_APP_ENV,\r\n  is_production: process.env.REACT_APP_APP_ENV.toLowerCase() === 'production',\r\n  app: process.env.REACT_APP_APP_NAME,\r\n  api_url: process.env.REACT_APP_API_URL,\r\n};\r\n\r\nexport const places = {\r\n  RESTAURANT: 1,\r\n  BAR: 2,\r\n};\r\n\r\nexport const payment_methods = [\r\n  'Cash',\r\n  'Mpesa',\r\n  'Card',\r\n  'Glovo',\r\n  'Jumia',\r\n  'Uber Eats',\r\n  'Little Cab',\r\n];\r\n\r\nexport const printer_widths = {\r\n  KITCHEN_PRINTER: '500px',\r\n  FUSION_PRINTER: '300px',\r\n};\r\n\r\nexport const action_types = {\r\n  ADD: {\r\n    display: 'Created stock',\r\n    value: 1,\r\n    badgeColor: 'dark',\r\n  },\r\n  EDIT: {\r\n    display: 'Updated stock',\r\n    value: 2,\r\n    badgeColor: 'primary',\r\n  },\r\n  SALE: {\r\n    display: 'Made a sale',\r\n    value: 3,\r\n    badgeColor: 'success',\r\n  },\r\n};\r\n\r\nexport const time_periods = {\r\n  TODAY: {display: 'Today', value: 'today'},\r\n  YESTERDAY: {display: 'Yesterday', value: 'yesterday'},\r\n  THIS_WEEK: {display: 'This week', value: 'week'},\r\n  THIS_MONTH: {display: 'This Month', value: 'month'},\r\n  THIS_YEAR: {display: 'This Year', value: 'year'},\r\n  ALL_TIME: {display: 'All Time', value: ''},\r\n};\r\n","import moment from 'moment';\r\nimport {time_periods} from './constants';\r\n\r\nexport function objetPropEmpty(obj) {\r\n  for (let key in obj) {\r\n    if (!obj[key]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getDateTimeAgo(dateStr) {\r\n  if (!dateStr) {\r\n    return '_';\r\n  }\r\n  let date = moment(dateStr);\r\n  // date.add(3, 'hours');\r\n  return date.fromNow();\r\n}\r\n\r\nexport function storeUserLocally(name, toStoreInLocal) {\r\n  localStorage.setItem(name, JSON.stringify(toStoreInLocal));\r\n}\r\nexport function getFromLocal(name) {\r\n  let fromLocalStorage = JSON.parse(\r\n    localStorage.getItem(name ? name : 'userSelection')\r\n  );\r\n  return fromLocalStorage;\r\n}\r\nexport function removeFromLocalStorage(name) {\r\n  localStorage.removeItem(name);\r\n}\r\n\r\n//function to format the date\r\nexport function formatDate(dateStr) {\r\n  if (!dateStr) {\r\n    return '_';\r\n  }\r\n\r\n  let date = moment(dateStr);\r\n  //return an empty string if the date is invalid\r\n  if (!date.isValid()) {\r\n    return '_';\r\n  }\r\n  // date.add(3, 'hours');\r\n\r\n  //format to 29/06/2020 12:57 pm\r\n  return date.format('DD/MM/YYYY h:mm a');\r\n}\r\n\r\nexport function formatUrl(url, ...args) {\r\n  let urlParams = '';\r\n  args.forEach((arg) => {\r\n    for (let key in arg) {\r\n      if (arg[key]) {\r\n        urlParams = `${urlParams}${key}=${arg[key]}&`;\r\n      }\r\n      if (arg[key] === 0) {\r\n        urlParams = `${urlParams}${key}=${arg[key]}&`; //allow for value=0\r\n      }\r\n    }\r\n  });\r\n  urlParams = urlParams.substr(0, urlParams.length - 1); //remove the & at the end\r\n\r\n  return `${url}?${urlParams}`;\r\n}\r\n\r\nexport function getFormattedAmount(amount, quantity) {\r\n  return `Ksh ${amount * quantity}`;\r\n}\r\n\r\nexport function getFormattedMeasure(unit, measure) {\r\n  if (unit === 'count') {\r\n    return measure;\r\n  }\r\n  return `${measure} ${unit}`;\r\n}\r\n\r\nexport function convertObjectToArray(obj) {\r\n  let arr = [];\r\n  for (let i in obj) {\r\n    arr.push(obj[i]);\r\n  }\r\n  return arr;\r\n}\r\n//used to get the display format for the graph\r\nexport function getMapDisplayDate(dateStr, timePeriod) {\r\n  let date = moment(dateStr);\r\n  switch (timePeriod) {\r\n    case time_periods.TODAY.value:\r\n      return date.format('h a');\r\n    case time_periods.THIS_WEEK.value:\r\n      return date.format('ddd');\r\n    case time_periods.THIS_MONTH.value:\r\n      return date.format('Do');\r\n    case time_periods.THIS_YEAR.value:\r\n      return date.format('MMM');\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {getFromLocal, removeFromLocalStorage} from '../../services/utility';\r\nimport $ from 'jquery';\r\n\r\nexport default function Header(props) {\r\n  const handleLogout = () => {\r\n    removeFromLocalStorage('currentUser');\r\n    props.history.push('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    $('.nav-control').on('click', function () {\r\n      $('#main-wrapper').toggleClass('menu-toggle');\r\n\r\n      $('.hamburger').toggleClass('is-active');\r\n      $('.deznav').toggleClass('d-none');\r\n      $('.content-body').toggleClass('ml-0');\r\n    });\r\n  }, []);\r\n\r\n  let currentUser = getFromLocal('currentUser');\r\n  return (\r\n    <>\r\n      <div class='nav-header'>\r\n        <Link to='/admin' class='brand-logo h4 text-dark'>\r\n          SCRATCH LTD\r\n        </Link>\r\n\r\n        <div class='nav-control'>\r\n          <div class='hamburger'>\r\n            <span class='line'></span>\r\n            <span class='line'></span>\r\n            <span class='line'></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class='header'>\r\n        <div class='header-content'>\r\n          <nav class='navbar navbar-expand'>\r\n            <div class='collapse navbar-collapse justify-content-between'>\r\n              <div className='header-left'></div>\r\n              <ul class='navbar-nav header-right'>\r\n                <li class='nav-item dropdown header-profile'>\r\n                  <a\r\n                    class='nav-link'\r\n                    href='#'\r\n                    role='button'\r\n                    data-toggle='dropdown'\r\n                  >\r\n                    <div class='header-info'>\r\n                      <span>\r\n                        Hello, <strong>{currentUser.firstname}</strong>\r\n                      </span>\r\n                    </div>\r\n                    <div\r\n                      className='text-white h3 p-1 mr-2'\r\n                      style={{color: '#fff'}}\r\n                    >\r\n                      <svg\r\n                        id='icon-user1'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        class='text-white'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2'></path>\r\n                        <circle cx='12' cy='7' r='4'></circle>\r\n                      </svg>\r\n                    </div>\r\n                  </a>\r\n                  <div class='dropdown-menu dropdown-menu-right'>\r\n                    <a\r\n                      href='app-profile.html'\r\n                      class='dropdown-item ai-icon d-none'\r\n                    >\r\n                      <svg\r\n                        id='icon-user1'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        class='text-primary'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2'></path>\r\n                        <circle cx='12' cy='7' r='4'></circle>\r\n                      </svg>\r\n                      <span class='ml-2'>Profile </span>\r\n                    </a>\r\n                    <a\r\n                      href='email-inbox.html'\r\n                      class='dropdown-item ai-icon d-none'\r\n                    >\r\n                      <svg\r\n                        id='icon-inbox'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        class='text-success'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z'></path>\r\n                        <polyline points='22,6 12,13 2,6'></polyline>\r\n                      </svg>\r\n                      <span class='ml-2'>Inbox </span>\r\n                    </a>\r\n                    <a href='page-login.html' class='dropdown-item ai-icon'>\r\n                      <svg\r\n                        id='icon-logout'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        class='text-danger'\r\n                        width='18'\r\n                        height='18'\r\n                        viewBox='0 0 24 24'\r\n                        fill='none'\r\n                        stroke='currentColor'\r\n                        stroke-width='2'\r\n                        stroke-linecap='round'\r\n                        stroke-linejoin='round'\r\n                      >\r\n                        <path d='M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4'></path>\r\n                        <polyline points='16 17 21 12 16 7'></polyline>\r\n                        <line x1='21' y1='12' x2='9' y2='12'></line>\r\n                      </svg>\r\n                      <span class='ml-2' onClick={handleLogout}>\r\n                        Logout{' '}\r\n                      </span>\r\n                    </a>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function SideBar() {\r\n  return (\r\n    <div class='deznav'>\r\n      <div class='deznav-scroll'>\r\n        <div class='metismenu' id='menu'>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin'} className='nav-link  '>\r\n              <span data-feather='home'></span>\r\n              Dashboard <span className='sr-only'>(current)</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/admins'} className='nav-link'>\r\n              <span data-feather='file'></span>\r\n              Admins\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/employees'} className='nav-link'>\r\n              <span data-feather='shopping-cart'></span>\r\n              Employees\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/categories'} className='nav-link'>\r\n              <span data-feather='users'></span>\r\n              Categories\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/stock'} className='nav-link'>\r\n              <span data-feather='users'></span>\r\n              Stock\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <Link to={'/admin/sales'} className='nav-link'>\r\n              <span data-feather='layers'></span>\r\n              Sale History\r\n            </Link>\r\n          </li>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Header from './header';\r\nimport SideBar from './sidebar';\r\nimport './dashboard/dashboard.css';\r\nimport {getFromLocal} from '../../services/utility';\r\n\r\nexport default function withTemplate(WrappedComponent) {\r\n  return class WithTemplate extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let currentUser = getFromLocal('currentUser');\r\n      if (!currentUser) {\r\n        this.props.history.push('/');\r\n      } else if (!currentUser.isAdmin) {\r\n        this.props.history.push('/');\r\n      }\r\n    }\r\n    render() {\r\n      return (\r\n        <div id='main-wrapper' className='show'>\r\n          <Header {...this.props} />\r\n\r\n          <SideBar />\r\n\r\n          <div class='content-body' style={{minHeight: '100vh'}}>\r\n            <div class='container-fluid'>\r\n              <WrappedComponent {...this.props} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport './modal.scss';\r\nimport $ from 'jquery';\r\n\r\nfunction Modal(props) {\r\n  const {children} = props;\r\n  useEffect(() => {\r\n    $('body').addClass('modal-open');\r\n    return () => {\r\n      $('body').removeClass('modal-open');\r\n    };\r\n  });\r\n  return (\r\n    <div\r\n      class='modal animate__animated animate__bounceInUp show'\r\n      id='basicModal'\r\n      style={{display: 'block', paddingRight: '19px'}}\r\n    >\r\n      <div class='modal-dialog' role='document'>\r\n        <div class='modal-content'>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, {useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {toast} from 'react-toastify';\r\nimport Modal from '../../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {objetPropEmpty} from '../../../services/utility';\r\n\r\nfunction AddAdmin(props) {\r\n  const {handleClose} = props;\r\n  const [admin, setAdmin] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n  });\r\n\r\n  const updateAdminProp = (obj) => {\r\n    setAdmin({...admin, ...obj});\r\n  };\r\n\r\n  const saveAdmin = () => {\r\n    if (admin.password !== admin.confirm_password) {\r\n      toast.error('The two passwords do not match');\r\n    } else if (objetPropEmpty(admin)) {\r\n      toast.error('Do not leave fields empty');\r\n    } else {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendPostRequest('admins', admin),\r\n            'Admin added successfully'\r\n          ).then((res) => {\r\n            handleClose();\r\n          })\r\n        )\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>New Admin</div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>First name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter firstname'\r\n              value={admin.firstname}\r\n              onChange={(e) => updateAdminProp({firstname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Last name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter lastname'\r\n              value={admin.lastname}\r\n              onChange={(e) => updateAdminProp({lastname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Phone Number</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter phone number'\r\n              value={admin.phone}\r\n              onChange={(e) => updateAdminProp({phone: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Email</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter email'\r\n              value={admin.email}\r\n              onChange={(e) => updateAdminProp({email: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Password</label>\r\n            <input\r\n              type='password'\r\n              className='form-control'\r\n              placeholder='Enter password'\r\n              value={admin.password}\r\n              onChange={(e) => updateAdminProp({password: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Confirm Password</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Confirm password'\r\n              value={admin.confirm_password}\r\n              onChange={(e) =>\r\n                updateAdminProp({confirm_password: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={saveAdmin}>\r\n              Save Admin\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddAdmin;\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport AddAdmin from './add-admin';\r\nimport $ from 'jquery';\r\n\r\nclass Admins extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddAdmin: false,\r\n      admins: [],\r\n    };\r\n  }\r\n  fetchAdmins() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('admins')).then((res) => {\r\n          let admins = res.data;\r\n          this.setState({admins});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAdmins();\r\n  }\r\n\r\n  updateShowAdmin = (showAddAdmin) => {\r\n    this.setState({showAddAdmin});\r\n  };\r\n\r\n  onDelete = (admin) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`admins/${admin.id}/delete`),\r\n          'Admin deleted successfully'\r\n        ).then((res) => this.fetchAdmins())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddAdmin, admins} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddAdmin && (\r\n          <AddAdmin\r\n            handleClose={() => {\r\n              this.updateShowAdmin(false);\r\n              this.fetchAdmins();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Admins </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAdmin(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Phone Number</th>\r\n                <th>Email</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {admins.map((admin, index) => (\r\n                <tr key={admin.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{admin.firstname + ' ' + admin.lastname}</td>\r\n                  <td>{admin.phone}</td>\r\n                  <td>{admin.email}</td>\r\n                  <td>\r\n                    <span title={formatDate(admin.updated_at)}>\r\n                      {getDateTimeAgo(admin.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(admin)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Admins);\r\n","import React from 'react';\r\n\r\nexport default function Counter(props) {\r\n  const {icon, title, displayValue, extraTitle} = props;\r\n\r\n  return (\r\n    <div className='col-xl-3 col-xxl-3 col-lg-6 col-md-6 col-sm-6'>\r\n      <div className='widget-stat card'>\r\n        <div className='card-body p-4'>\r\n          <div className='media ai-icon'>\r\n            <span className='mr-3 bgl-primary text-primary'>\r\n              <i className={icon}></i>\r\n            </span>\r\n            <div className='media-body'>\r\n              <h3 className='mb-0 text-black'>\r\n                <span className='counter ml-0'>{displayValue}</span>\r\n              </h3>\r\n              <p className='mb-0'>{title}</p>\r\n              {extraTitle ? <small>{extraTitle}</small> : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {time_periods} from '../../services/constants';\r\nimport {convertObjectToArray} from '../../services/utility';\r\n\r\nexport default function SelectPeriod(props) {\r\n  const {selectedPeriod, updatePeriod} = props;\r\n  let periodArr = convertObjectToArray(time_periods);\r\n  let displayPeriod = periodArr.find(\r\n    (period) => period.value === selectedPeriod\r\n  );\r\n  if (!displayPeriod) {\r\n    displayPeriod = time_periods.THIS_YEAR; //fallback incase the time period is not found\r\n  }\r\n  return (\r\n    <div className='dropdown mt-3 mt-sm-0'>\r\n      <button\r\n        type='button'\r\n        className='btn btn-primary dropdown-toggle light fs-14'\r\n        data-toggle='dropdown'\r\n        aria-expanded='false'\r\n      >\r\n        {displayPeriod.display}\r\n      </button>\r\n      <div className='dropdown-menu'>\r\n        {periodArr.map((period) => (\r\n          <button\r\n            key={period.value}\r\n            className='dropdown-item'\r\n            onClick={() => updatePeriod(period.value)}\r\n          >\r\n            {period.display}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function BestSelling(props) {\r\n  const {bestSelling} = props;\r\n  return (\r\n    <div class='row'>\r\n      <div class='col-xl-12'>\r\n        <div class='card'>\r\n          <div class='card-header border-0 pb-0 d-sm-flex d-block'>\r\n            <div>\r\n              <h4 class='card-title mb-1'>Best Selling Items</h4>\r\n            </div>\r\n          </div>\r\n          <div class='card-body p-0 pt-3 border-top border-darken-1'>\r\n            {bestSelling.map((item, index) => (\r\n              <div class='media items-list-1' key={item.pricing}>\r\n                <span class='number col-1 px-0 align-self-center'>\r\n                  #{++index}\r\n                </span>\r\n                <div class='media-body col-sm-4 col-6 col-xxl-5 px-0'>\r\n                  <h5 class='mt-0 mb-3'>\r\n                    <a class='text-black' href='ecom-product-detail.html'>\r\n                      {item.stock_name}\r\n                    </a>\r\n                  </h5>\r\n                  <small class='font-w500'>\r\n                    <strong class='text-secondary mr-2'>\r\n                      Ksh {item.amount}\r\n                    </strong>\r\n                    <span class='text-primary'>{item.category_name}</span>\r\n                  </small>\r\n                </div>\r\n                <div class='media-footer ml-auto col-3 px-0 d-flex align-self-center align-items-center'>\r\n                  <div>\r\n                    <h3 class='mb-0 font-w600 text-black'>{item.count}</h3>\r\n                    <span class='fs-14'>Sales </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport ApexCharts from 'apexcharts';\r\nimport {getMapDisplayDate} from '../../../services/utility';\r\n\r\nexport default function SalesGraph(props) {\r\n  const {barSales, restaurantSales, period} = props;\r\n  const [chart, setChart] = useState(null);\r\n\r\n  const prepData = () => {\r\n    let labels = [],\r\n      bar = [],\r\n      restaurant = [];\r\n    for (let i = 0; i < barSales.length; i++) {\r\n      labels.push(getMapDisplayDate(barSales[i].date, period));\r\n      bar.push(barSales[i].count || 0);\r\n      restaurant.push(restaurantSales[i].count || 0);\r\n    }\r\n\r\n    return {\r\n      labels,\r\n      bar,\r\n      restaurant,\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const chartData = prepData();\r\n\r\n    if (chart) {\r\n      let newOptions = chart.options;\r\n      newOptions['series'] = [\r\n        {\r\n          name: 'Bar',\r\n          data: chartData.bar,\r\n          //radius: 12,\r\n        },\r\n        {\r\n          name: 'Restaurant',\r\n          data: chartData.restaurant,\r\n        },\r\n      ];\r\n      newOptions['xaxis'] = {\r\n        categories: chartData.labels,\r\n      };\r\n      chart.updateOptions(newOptions, false, true);\r\n    } else {\r\n      var options = {\r\n        series: [\r\n          {\r\n            name: 'Bar',\r\n            data: chartData.bar,\r\n            //radius: 12,\r\n          },\r\n          {\r\n            name: 'Restaurant',\r\n            data: chartData.restaurant,\r\n          },\r\n        ],\r\n        chart: {\r\n          type: 'area',\r\n          height: 350,\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            columnWidth: '55%',\r\n            endingShape: 'rounded',\r\n          },\r\n        },\r\n        colors: ['#2f4cdd', '#b519ec'],\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        markers: {\r\n          shape: 'circle',\r\n        },\r\n\r\n        legend: {\r\n          show: true,\r\n          fontSize: '12px',\r\n\r\n          labels: {\r\n            colors: '#000000',\r\n          },\r\n          position: 'top',\r\n          horizontalAlign: 'left',\r\n          markers: {\r\n            width: 19,\r\n            height: 19,\r\n            strokeWidth: 0,\r\n            strokeColor: '#fff',\r\n            fillColors: undefined,\r\n            radius: 4,\r\n            offsetX: -5,\r\n            offsetY: -5,\r\n          },\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 4,\r\n          colors: ['#2f4cdd', '#b519ec'],\r\n        },\r\n\r\n        grid: {\r\n          borderColor: '#eee',\r\n        },\r\n        xaxis: {\r\n          categories: chartData.labels,\r\n          labels: {\r\n            style: {\r\n              colors: '#3e4954',\r\n              fontSize: '13px',\r\n              fontFamily: 'Poppins',\r\n              fontWeight: 100,\r\n              cssClass: 'apexcharts-xaxis-label',\r\n            },\r\n          },\r\n          crosshairs: {\r\n            show: false,\r\n          },\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            style: {\r\n              colors: '#3e4954',\r\n              fontSize: '13px',\r\n              fontFamily: 'Poppins',\r\n              fontWeight: 100,\r\n              cssClass: 'apexcharts-xaxis-label',\r\n            },\r\n          },\r\n        },\r\n        fill: {\r\n          opacity: 1,\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return val + ' sales';\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n      let barChart = new ApexCharts(\r\n        document.querySelector('#chartBar'),\r\n        options\r\n      );\r\n      setChart(barChart);\r\n      barChart.render();\r\n    }\r\n  }, [barSales, restaurantSales]);\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-header border-0 pb-0 d-sm-flex d-block'>\r\n        <div>\r\n          <h4 className='card-title mb-1'>Sales</h4>\r\n        </div>\r\n      </div>\r\n      <div className='card-body revenue-chart px-3'>\r\n        <div id='chartBar'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Counter from '../../../components/counter/counter';\r\nimport SelectPeriod from '../../../components/select-period/select-period';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {time_periods} from '../../../services/constants';\r\nimport {formatUrl} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport BestSelling from './best-selling';\r\nimport SalesGraph from './sales-graph';\r\n\r\nclass AdminDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totals: {},\r\n      period: time_periods.THIS_YEAR.value,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n  updateData = () => {\r\n    const {period} = this.state;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(formatUrl('dashboard', {period}))).then(\r\n          (res) => {\r\n            let totals = res.data.totals;\r\n            this.setState({totals});\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  updateFilter = (obj) => {\r\n    this.setState({...obj}, () => this.updateData());\r\n  };\r\n\r\n  render() {\r\n    const {totals, period} = this.state;\r\n    return (\r\n      <div className='mt-3 row'>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <div className='form-group'>\r\n            <SelectPeriod\r\n              selectedPeriod={period}\r\n              updatePeriod={(period) => this.updateFilter({period})}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Counter\r\n          title='Bar Sales'\r\n          icon='fa fa-glass-cheers'\r\n          displayValue={totals.bar_sales_count}\r\n        />\r\n        <Counter\r\n          title='Restaurant Sales'\r\n          icon='fa fa-utensils'\r\n          displayValue={totals.restaurant_sales_count}\r\n        />\r\n        <Counter\r\n          title={\r\n            totals.restaurant_profit > 0\r\n              ? 'Gross Restaurant Profit'\r\n              : 'Gross Restaurant Loss'\r\n          }\r\n          icon='fa fa-dollar'\r\n          displayValue={\r\n            <span\r\n              className={\r\n                totals.restaurant_profit > 0 ? 'text-success' : 'text-danger'\r\n              }\r\n            >\r\n              {Math.abs(totals.restaurant_profit).toFixed(1) + '%'}\r\n            </span>\r\n          }\r\n        />\r\n\r\n        <Counter\r\n          title={totals.bar_profit > 0 ? 'Gross Bar Profit' : 'Gross Bar Loss'}\r\n          icon='fa fa-dollar'\r\n          displayValue={\r\n            <span\r\n              className={totals.bar_profit > 0 ? 'text-success' : 'text-danger'}\r\n            >\r\n              {Math.abs(totals.bar_profit).toFixed(1) + '%'}\r\n            </span>\r\n          }\r\n        />\r\n\r\n        <Counter\r\n          title='Bar Stock Worth'\r\n          icon='fa fa-dollar'\r\n          displayValue={totals.bar_stock_worth}\r\n        />\r\n        <Counter\r\n          title='Restaurant Stock Worth'\r\n          icon='fa fa-dollar'\r\n          displayValue={totals.restaurant_stock_worth}\r\n        />\r\n        <Counter\r\n          title={<span className='text-danger'>Out of Stock!</span>}\r\n          icon='fa fa-exclamation-triangle'\r\n          displayValue={totals.out_of_stock}\r\n          extraTitle='(Bar)'\r\n        />\r\n        <Counter\r\n          title='Average Sales '\r\n          extraTitle='Per day (Bar & Restaurant)'\r\n          icon='fa fa-cart-arrow-down'\r\n          displayValue={Math.ceil(totals.average_daily_sales)}\r\n        />\r\n        <hr className='w-100 border border-secondary' />\r\n        <div className='col-xl-6 col-xxl-6 col-lg-12 col-md-12'>\r\n          <SalesGraph\r\n            barSales={totals.bar_sales || []}\r\n            restaurantSales={totals.restaurant_sales || []}\r\n            period={period}\r\n          />\r\n        </div>\r\n        <div class='col-xl-6 col-xxl-6 col-lg-12  col-lg-9 col-md-12'>\r\n          <BestSelling bestSelling={totals.best_selling || []} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(AdminDashboard);\r\n","import React from 'react';\r\nimport './category.scss';\r\n\r\nfunction Category(props) {\r\n  const {category, onItemClick} = props;\r\n\r\n  return (\r\n    <div className='category shadow shadow-secondary p-2 mb-2'>\r\n      <h5 className='text-center text-uppercase mb-1'>{category.name}</h5>\r\n      {category.goods.map((good) => (\r\n        <Item item={good} onItemClick={onItemClick} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Item(props) {\r\n  const {item, onItemClick} = props;\r\n  return (\r\n    <div\r\n      className='item p-2 link mb-2'\r\n      title='Click to add'\r\n      onClick={() => onItemClick(item)}\r\n    >\r\n      {item.name}\r\n      <div className='float-right'>\r\n        <i className='fa fa-plus'></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {places} from '../../services/constants';\r\nimport './header.scss';\r\n\r\nfunction Header(props) {\r\n  const {place} = props;\r\n\r\n  return (\r\n    <div className='employee-header w-100'>\r\n      <div className='float-left pl-3 place-icon '>\r\n        {parseInt(place) === places.BAR ? (\r\n          <i className='fas fa-glass-cheers'></i>\r\n        ) : (\r\n          <i className='fas fa-utensils'></i>\r\n        )}\r\n      </div>\r\n      <div className='dropdown float-right pr-3 dropleft'>\r\n        <button\r\n          className='btn bg-transparent dropdown-toggle '\r\n          data-toggle='dropdown'\r\n        >\r\n          <i className='fas fa-bars'></i>\r\n        </button>\r\n        <div className='dropdown-menu ' aria-labelledby='dropdownMenuButton'>\r\n          <Link className='dropdown-item ' to={`/employee/sales/${place}`}>\r\n            Sales\r\n          </Link>\r\n          <Link className='dropdown-item ' to={'/employee'}>\r\n            Main Page\r\n          </Link>\r\n          <Link className='dropdown-item ' to={'/'}>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className='h3 text-center text-white'>\r\n        {parseInt(place) === places.BAR ? 'SCRATCH BAR' : 'SCRATCH RESTAURANT'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../services/api-handle';\r\nimport {getFromLocal} from '../../services/utility';\r\nimport './process-transaction.scss';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {places} from '../../services/constants';\r\n\r\nexport default function ProcessTransaction(props) {\r\n  const {selectedItem, handleAddToCart, place} = props;\r\n  const [pricings, setPricings] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [selectedForCart, setSelectedForCart] = useState({\r\n    quantity: 1,\r\n  });\r\n  const currentUser = getFromLocal('currentUser');\r\n\r\n  useEffect(() => {\r\n    let itemId = selectedItem.id;\r\n    if (itemId) {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendGetRequest('pricings?good=' + itemId).then((res) => {\r\n              let pricings = res.data.pricings;\r\n              setPricings(pricings);\r\n              setCount(0);\r\n            })\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [selectedItem.id]);\r\n\r\n  const getCurrentPricing = () => {\r\n    if (pricings.length) {\r\n      return pricings[count] || {};\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const handleAddCart = () => {\r\n    let toSend = {\r\n      ...selectedForCart,\r\n      price: pricings[count],\r\n      ...selectedItem,\r\n    };\r\n    handleAddToCart(toSend);\r\n  };\r\n\r\n  let pricingItem = getCurrentPricing();\r\n  if (!selectedItem.name) {\r\n    return (\r\n      <div className='process-section bg-secondary pb-4'>\r\n        <h1 className='jumbotron jumbotron-fluid text-center bg-transparent  text-white '>\r\n          Hi there {currentUser.firstname},\r\n        </h1>\r\n        <p className='text-lead text-center text-warning'>\r\n          Please choose an item in the menu to proceed\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='process-section'>\r\n      <h1 className='text-center text-dark text-uppercase mb-4'>\r\n        {selectedItem.name}\r\n      </h1>\r\n      {parseInt(place) === places.BAR ? (\r\n        <p className='text-center'>\r\n          <small className='mt-2 text-secondary text-center '>\r\n            Remaining Quantity: {pricingItem.quantity_remaining}\r\n          </small>\r\n        </p>\r\n      ) : null}\r\n\r\n      {pricings.length ? (\r\n        <>\r\n          <h3 className='text-center text-dark text-uppercase mt-4'>\r\n            Ksh {pricingItem.amount}\r\n          </h3>\r\n\r\n          <div className='add-subtract row justify-content-center'>\r\n            {pricingItem.unit === 'count' ? null : (\r\n              <>\r\n                <button\r\n                  className='btn btn-light col-3'\r\n                  onClick={() => {\r\n                    if (count > 0) {\r\n                      setCount(count - 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className='fa fa-minus'></i>\r\n                </button>\r\n                <div className='h4 text-center p-2 ml-1 mr-1'>\r\n                  {pricingItem.measure + ' ' + pricingItem.unit}\r\n                </div>\r\n                <button\r\n                  className='btn btn-light col-3'\r\n                  onClick={() => {\r\n                    if (count < pricings.length - 1) {\r\n                      setCount(count + 1);\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className='fa fa-plus'></i>\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            <div className='w-100'></div>\r\n\r\n            <div className='form-group col-2 mt-3'>\r\n              <label htmlFor=''>Quantity</label>\r\n              <input\r\n                type='\r\n            '\r\n                className='form-control '\r\n                value={selectedForCart.quantity}\r\n                onChange={(e) =>\r\n                  setSelectedForCart({\r\n                    ...selectedForCart,\r\n                    quantity: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {(!pricingItem.quantity_remaining &&\r\n            parseInt(place) === places.BAR) ||\r\n          (pricingItem.quantity_remaining &&\r\n            parseInt(pricingItem.quantity_remaining) <\r\n              parseInt(selectedForCart.quantity) &&\r\n            parseInt(place) === places.BAR) ? (\r\n            <div className=' badge badge-danger text-white p-1 w-100'>\r\n              <h1 className='text-center'>Oops !</h1>\r\n              <h5 className='text-center'>This product is out of quantity!</h5>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className='mt-4 row justify-content-center'\r\n              onClick={handleAddCart}\r\n            >\r\n              <button className='btn btn-primary text-uppercase p-2 col-6'>\r\n                Add To Cart\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className='add-subtract bg-danger text-white p-2'>\r\n          <h1 className='text-center'>Oops !</h1>\r\n          <h5 className='text-center'>\r\n            This product do not have pricing, please add pricing in the admin\r\n            section\r\n          </h5>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {showNotification} from '../../services/api-handle';\r\nimport {\r\n  payment_methods,\r\n  places,\r\n  printer_widths,\r\n} from '../../services/constants';\r\nimport {getFormattedAmount, getFormattedMeasure} from '../../services/utility';\r\n\r\nfunction Receipt(props) {\r\n  const {cartItems, removeFromCart, handleSale, place, payObj} = props;\r\n  const [useOnlinePrice, setUseOnlinePrice] = useState(false);\r\n\r\n  const getRawTotalAmount = () => {\r\n    if (cartItems.length) {\r\n      let amount = 0;\r\n      cartItems.forEach((item) => {\r\n        if (useOnlinePrice && parseInt(item.price.online_price) === 0) {\r\n          showNotification(\r\n            'This good does not have online price. please add',\r\n            'error',\r\n            null,\r\n            'no-duplicate'\r\n          );\r\n          setUseOnlinePrice(false);\r\n          return;\r\n        }\r\n        amount +=\r\n          (useOnlinePrice\r\n            ? parseInt(item.price.online_price)\r\n            : item.price.amount) * item.quantity;\r\n      });\r\n      return amount;\r\n    }\r\n    return 0;\r\n  };\r\n  const getTotalAmount = () => {\r\n    return getFormattedAmount(getRawTotalAmount(), 1);\r\n  };\r\n\r\n  const [payment, setPayment] = useState({\r\n    payment_method: payment_methods[0],\r\n    transaction_code: '',\r\n    total: getTotalAmount(),\r\n    receiptWidth:\r\n      parseInt(place) === places.BAR\r\n        ? printer_widths.FUSION_PRINTER\r\n        : printer_widths.KITCHEN_PRINTER,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPayment({\r\n      ...payment,\r\n      ...payObj,\r\n    });\r\n  }, [payObj.sale_id, payObj]);\r\n\r\n  const checkIfUseOnline = (method) => {\r\n    let methods = [...payment_methods];\r\n    const removeFromArray = (item, arr) => {\r\n      return arr.filter((it) => it !== item);\r\n    };\r\n\r\n    methods = removeFromArray(\r\n      'Mpesa',\r\n      removeFromArray('Cash', removeFromArray('Card', methods))\r\n    );\r\n    return methods.includes(method);\r\n  };\r\n\r\n  return (\r\n    <div className='card bg-transparent border-0'>\r\n      <h4 className='text-uppercase text-center mb-3'>Receipt</h4>\r\n      {cartItems.map((item) => (\r\n        <Item\r\n          key={item.id + item.price.amount}\r\n          item={item}\r\n          removeFromCart={removeFromCart}\r\n          useOnlinePrice={useOnlinePrice}\r\n        />\r\n      ))}\r\n      <hr />\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>PAYMENT METHOD</div>\r\n        <div className='col text-center'>\r\n          <select\r\n            name=''\r\n            id=''\r\n            className='form-control'\r\n            value={payment.payment_method}\r\n            onChange={(e) => {\r\n              let payment_method = e.target.value;\r\n              setPayment({\r\n                ...payment,\r\n                payment_method,\r\n              });\r\n\r\n              let useOnline = checkIfUseOnline(payment_method);\r\n              setUseOnlinePrice(useOnline);\r\n            }}\r\n          >\r\n            {payment_methods.map((method) => (\r\n              <option value={method} key={method}>\r\n                {method}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>SUB TOTAL</div>\r\n        <div className='col text-center'>{getTotalAmount()}</div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>ADDITIONAL CHARGES</div>\r\n        <div className='col text-center'>Ksh 0</div>\r\n      </div>\r\n      <div className='form-group row'>\r\n        <div className='col text-left'>TOTAL</div>\r\n        <div className='col text-center'>{getTotalAmount()}</div>\r\n      </div>\r\n      {payment.payment_method === 'Mpesa' && (\r\n        <div className='form-group  mt-3'>\r\n          <label htmlFor=''>Transaction Code</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='OK749ZTL6Y'\r\n            value={payment.transaction_code}\r\n            onChange={(e) =>\r\n              setPayment({...payment, transaction_code: e.target.value})\r\n            }\r\n          />\r\n        </div>\r\n      )}\r\n      <div className='form-group  mt-3'>\r\n        <label htmlFor=''>Customer Paid</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          placeholder='Amount customer paid'\r\n          value={payment.customer_pay}\r\n          onChange={(e) =>\r\n            setPayment({\r\n              ...payment,\r\n              customer_pay: e.target.value,\r\n              customer_change: parseFloat(e.target.value) - getRawTotalAmount(),\r\n            })\r\n          }\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label htmlFor=''>Choose Printer</label>\r\n        <select\r\n          name=''\r\n          id=''\r\n          className='form-control'\r\n          value={payment.receiptWidth}\r\n          onChange={(e) =>\r\n            setPayment({...payment, receiptWidth: e.target.value})\r\n          }\r\n        >\r\n          <option value={printer_widths.FUSION_PRINTER}>Fusion Printer</option>\r\n          <option value={printer_widths.KITCHEN_PRINTER}>\r\n            Kitchen Printer\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div className='mt-4 row justify-content-center '>\r\n        <button\r\n          className='btn btn-secondary text-uppercase p-1 mr-2'\r\n          onClick={() =>\r\n            handleSale({\r\n              ...payment,\r\n              total: getTotalAmount(),\r\n              continueToPrint: false,\r\n            })\r\n          }\r\n        >\r\n          {payment.sale_id ? 'Edit' : 'Confirm'}\r\n        </button>\r\n        <button\r\n          className='btn btn-success text-uppercase p-1 ml-2'\r\n          onClick={() =>\r\n            handleSale({\r\n              ...payment,\r\n              total: getTotalAmount(),\r\n              continueToPrint: true,\r\n            })\r\n          }\r\n        >\r\n          {payment.sale_id ? 'Edit' : 'Confirm'} & Print\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Item(props) {\r\n  const {item, removeFromCart, useOnlinePrice} = props;\r\n  const [itemPrice, setItemPrice] = useState('Ksh 0');\r\n\r\n  useEffect(() => {\r\n    setItemPrice(\r\n      getFormattedAmount(\r\n        useOnlinePrice ? item.price.online_price : item.price.amount,\r\n        item.quantity\r\n      )\r\n    );\r\n  }, [\r\n    item.quantity,\r\n    item.price.online_price,\r\n    item.price.amount,\r\n    useOnlinePrice,\r\n  ]);\r\n\r\n  return (\r\n    <div className='item p-2  mb-2'>\r\n      <div className='row'>\r\n        <div className='col text-left'>{item.name}</div>\r\n        <div className='col text-center'>\r\n          {getFormattedMeasure(item.price.unit, item.price.measure)}\r\n        </div>\r\n        <div className='col text-center'>{item.quantity}</div>\r\n        <div className='col text-center'>{itemPrice}</div>\r\n        <div\r\n          className='col text-right link'\r\n          onClick={() => removeFromCart(item)}\r\n        >\r\n          <i className='fa fa-times'></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Receipt;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../services/api-handle';\r\nimport {formatDate} from '../../services/utility';\r\nimport './receipt-print.scss';\r\n\r\nimport {jsPDF} from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\nexport default function ReceiptPrint(props) {\r\n  const {width, sale_id} = props;\r\n\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [payment, setPayment] = useState({});\r\n  const [count, setCount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    let url = 'sales/cart-items/' + sale_id;\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          setCartItems(res.data.cart_items);\r\n          setPayment(res.data.sale);\r\n        })\r\n      )\r\n    );\r\n  }, [sale_id]);\r\n  const onAfterPrint = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const printAndroid = () => {\r\n    setCount(1);\r\n    for (let i = 1; i <= 2; i++) {\r\n      setCount(i);\r\n      html2canvas(document.getElementById('receipt')).then((canvas) => {\r\n        const imgData = canvas.toDataURL('image/png');\r\n        const pdf = new jsPDF();\r\n        pdf.addImage(imgData, 'JPEG', 0, 0);\r\n        pdf.save(`receipt${sale_id}-${i === 1 ? 'bill' : 'order'}.pdf`);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    setCount(1);\r\n    for (let i = 1; i <= 2; i++) {\r\n      setCount(i);\r\n      window.print();\r\n    }\r\n    onAfterPrint();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='ticket'\r\n        style={{width: width, maxWidth: width}}\r\n        id='receipt'\r\n      >\r\n        <p className='centered'>\r\n          SCRATCH KITCHEN LTD\r\n          <br />\r\n          {count === 1 ? 'CUSTOMER BILL' : 'ORDER'}\r\n          <br />\r\n          <small>\r\n            P.O.BOX 102358-00101 NRB TELEPHONE: 0791 482 995/0756936852\r\n          </small>\r\n          <br />\r\n          <small style={{fontWeight: 'bolder'}}>Till No. 4028177</small>\r\n        </p>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className='description'>Description</th>\r\n              <th className='quantity'>Q.</th>\r\n              <th className='price'>@</th>\r\n              <th className='price'>S.T</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cartItems.map((item) => (\r\n              <tr key={item.id}>\r\n                <td className='description'>{item.name}</td>\r\n                <td className='quantity'>{item.quantity}</td>\r\n                <td className='price'>{item.price.amount}</td>\r\n                <td className='price'>{item.price.amount * item.quantity}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <td className='description centered' colSpan='2'>\r\n                Total\r\n              </td>\r\n              <td className='price' colSpan='2'>\r\n                {payment.total}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p className='centered'>\r\n          Served by\r\n          {' ' +\r\n            payment.firstname +\r\n            ' ' +\r\n            payment.lastname +\r\n            ' at ' +\r\n            formatDate(payment.created_at)}\r\n          <br />\r\n          askscratchkitchen@gmail.com /ig@scratchkitchen\r\n        </p>\r\n      </div>\r\n      <div\r\n        className='justify-content-center  row hidden-print'\r\n        style={{width: width, maxWidth: width}}\r\n      >\r\n        <button\r\n          className='btn btn-secondary ml-2'\r\n          onClick={() => onAfterPrint()}\r\n        >\r\n          Back\r\n        </button>\r\n        <button\r\n          id='btnPrint'\r\n          className='hidden-print btn btn-dark ml-5 print-computer'\r\n          onClick={handlePrint}\r\n        >\r\n          Print\r\n        </button>\r\n        <button\r\n          id='btnPrint'\r\n          className='hidden-print btn btn-dark ml-5 print-android'\r\n          onClick={printAndroid}\r\n        >\r\n          Download Pdf\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {getFromLocal} from '../../services/utility';\r\n\r\nfunction withEmployeeValidation(WrappedComponent) {\r\n  return class WithEmployeeValidation extends Component {\r\n    render() {\r\n      let currentUser = getFromLocal('currentUser');\r\n      if (!currentUser || currentUser.isAdmin) {\r\n        this.props.history.push('/');\r\n        return <></>;\r\n      }\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n}\r\n\r\nexport default withEmployeeValidation;\r\n","import React, {Component} from 'react';\r\nimport Category from '../../components/category/category';\r\nimport Header from '../../components/header/header';\r\nimport ProcessTransaction from '../../components/process-transaction/process-transaction';\r\nimport Receipt from '../../components/receipt/receipt';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n  showNotification,\r\n} from '../../services/api-handle';\r\nimport {\r\n  formatUrl,\r\n  getFormattedMeasure,\r\n  getFromLocal,\r\n} from '../../services/utility';\r\nimport './employee.scss';\r\nimport ReceiptPrint from '../../components/receipt/receipt-print';\r\nimport withEmployeeValidation from './with-employee-validation';\r\nimport {trackPromise} from 'react-promise-tracker';\r\n\r\nclass EmployeeDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n      filteredCategories: [],\r\n      selectedCategoryId: '',\r\n      q: '',\r\n      selectedItem: {},\r\n      cartItems: [],\r\n      payment: {},\r\n      showPrint: false,\r\n      saleId: '',\r\n    };\r\n    this.receiptRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.getCategories();\r\n    let saleId = this.props.match.params.sale_id;\r\n    if (saleId) {\r\n      this.setState({saleId});\r\n      let url = 'sales/cart-items/' + saleId;\r\n\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(sendGetRequest(url)).then((res) => {\r\n            let cartItems = res.data.cart_items;\r\n            let sale = res.data.sale;\r\n            let payment = {\r\n              payment_method: sale.payment_method,\r\n              customer_pay: sale.customer_pay,\r\n              transaction_code: sale.transaction_code,\r\n              sale_id: sale.id,\r\n              customer_change: sale.customer_change,\r\n            };\r\n            this.setState({cartItems, payment});\r\n          })\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  getCategories() {\r\n    let place = this.props.match.params.id;\r\n\r\n    let url = formatUrl('categories', {place});\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let categories = res.data.categories;\r\n          this.setState({\r\n            categories: categories,\r\n            filteredCategories: categories,\r\n          });\r\n        })\r\n      )\r\n    );\r\n  }\r\n  getFilteredCategories() {\r\n    const {selectedCategoryId, q} = this.state;\r\n    let place = this.props.match.params.id;\r\n\r\n    let url = formatUrl(\r\n      'categories/filtered',\r\n      {category: selectedCategoryId},\r\n      {q},\r\n      {place}\r\n    );\r\n    handleError(\r\n      handleSuccess(sendGetRequest(url)).then((res) => {\r\n        this.setState({filteredCategories: res.data.categories});\r\n      })\r\n    );\r\n  }\r\n\r\n  handleChangeCategory = (e) => {\r\n    this.setState({selectedCategoryId: e.target.value}, () =>\r\n      this.getFilteredCategories()\r\n    );\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    this.setState({q: e.target.value}, () => this.getFilteredCategories());\r\n  };\r\n\r\n  onItemClick = (selectedItem) => {\r\n    this.setState({selectedItem});\r\n  };\r\n\r\n  handleAddToCart = (item) => {\r\n    let {cartItems} = this.state;\r\n    let index = cartItems.findIndex(\r\n      (cItem) =>\r\n        cItem.id === item.id && item.price.measure === cItem.price.measure\r\n    );\r\n    if (index >= 0) {\r\n      showNotification('Item updated in the cart', 'success', 'bottom-right');\r\n      cartItems[index] = item;\r\n    } else {\r\n      showNotification('Item added to cart', 'success', 'bottom-right');\r\n      cartItems.push(item);\r\n    }\r\n\r\n    this.setState({cartItems});\r\n  };\r\n\r\n  removeFromCart = (item) => {\r\n    let {cartItems} = this.state;\r\n\r\n    let index = cartItems.findIndex(\r\n      (cItem) =>\r\n        cItem.id === item.id && item.price.measure === cItem.price.measure\r\n    );\r\n    if (index >= 0) {\r\n      cartItems.splice(index, 1);\r\n\r\n      showNotification('Item removed from cart', 'warning', 'bottom-right');\r\n      this.setState(cartItems);\r\n    }\r\n  };\r\n\r\n  handleSale = (payment) => {\r\n    const {cartItems} = this.state;\r\n    const currentUser = getFromLocal('currentUser');\r\n    const {continueToPrint, sale_id} = payment;\r\n    let addSaleUrl = 'sales';\r\n    let addHistoryUrl = 'sales/history';\r\n    let successMessage = 'Sale made successfully';\r\n    if (sale_id) {\r\n      addSaleUrl = `sales/${sale_id}/edit`;\r\n      addHistoryUrl = `sales/${sale_id}/history/edit`;\r\n      successMessage = 'Sale edited successfully';\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(addSaleUrl, {\r\n            ...payment,\r\n            sold_by: `${currentUser.id}`,\r\n            sold_goods: cartItems.length,\r\n            sold_by_text: `${currentUser.firstname} ${currentUser.lastname}`,\r\n          }).then((res) => {\r\n            let saleResp = res.data.sale;\r\n            this.setState({\r\n              payment: {\r\n                ...saleResp,\r\n                sold_by_text: `${currentUser.firstname} ${currentUser.lastname}`,\r\n                receiptWidth: payment.receiptWidth,\r\n              },\r\n            });\r\n            let goods = [];\r\n            let quantities = [];\r\n            let measures = [];\r\n            let prices = [];\r\n            let ids = [];\r\n\r\n            cartItems.forEach((item) => {\r\n              goods.push(item.id);\r\n              quantities.push(parseInt(item.quantity));\r\n              measures.push(\r\n                getFormattedMeasure(item.price.unit, item.price.measure)\r\n              );\r\n              prices.push(`Ksh ${item.price.amount}`);\r\n              ids.push(item.price.id);\r\n            });\r\n\r\n            trackPromise(\r\n              handleError(\r\n                handleSuccess(\r\n                  sendPostRequest(addHistoryUrl, {\r\n                    goods,\r\n                    quantities,\r\n                    prices,\r\n                    measures,\r\n                    sale_id: saleResp.id,\r\n                    sold_by: `${currentUser.firstname} ${currentUser.lastname}`,\r\n                    ids,\r\n                  }),\r\n                  successMessage\r\n                ).then((res) => {\r\n                  if (continueToPrint) {\r\n                    this.props.history.push(\r\n                      formatUrl('/employee/print', {\r\n                        sale_id: saleResp.id,\r\n                        width: payment.receiptWidth,\r\n                      })\r\n                    );\r\n                  } else {\r\n                    this.onAfterPrint();\r\n                  }\r\n                })\r\n              )\r\n            );\r\n          })\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  onAfterPrint = () => {\r\n    let place = this.props.match.params.id;\r\n    this.setState({\r\n      selectedItem: {},\r\n      cartItems: [],\r\n      payment: {},\r\n      showPrint: false,\r\n    });\r\n    this.props.history.push('/employee/dashboard/' + place);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      categories,\r\n      filteredCategories,\r\n      q,\r\n      selectedItem,\r\n      cartItems,\r\n      payment,\r\n      showPrint,\r\n    } = this.state;\r\n\r\n    if (showPrint) {\r\n      return (\r\n        <ReceiptPrint\r\n          cartItems={cartItems}\r\n          payment={payment}\r\n          printReceipt={this.printReceipt}\r\n          onAfterPrint={this.onAfterPrint}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className='container-fluid hidden-print'>\r\n        <div className='row'>\r\n          <Header place={this.props.match.params.id} />\r\n\r\n          <div className='col-md-12 row mt-2 justify-content-center'>\r\n            <div className='col-sm  side-part p-2 section'>\r\n              <div className='input-group mb-3'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Search anything'\r\n                  aria-label=\"Recipient's username\"\r\n                  aria-describedby='basic-addon2'\r\n                  value={q}\r\n                  onChange={this.handleSearch}\r\n                />\r\n                <div className='input-group-append'>\r\n                  <button className='btn btn-outline-secondary' type='button'>\r\n                    <i className='fa fa-search'></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <label htmlFor='category'>Select Category</label>\r\n                <select\r\n                  name='\r\n                '\r\n                  id=''\r\n                  className='form-control'\r\n                  onChange={this.handleChangeCategory}\r\n                >\r\n                  <option value=''>All Categories</option>\r\n                  {categories.map((category) => (\r\n                    <option value={category.id} key={category.id}>\r\n                      {category.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {filteredCategories.map((category) =>\r\n                category.goods.length ? (\r\n                  <Category\r\n                    category={category}\r\n                    onItemClick={this.onItemClick}\r\n                    key={category.id}\r\n                  />\r\n                ) : null\r\n              )}\r\n            </div>\r\n\r\n            <div className='col-sm border-right border-dark border-left border-dark section'>\r\n              <ProcessTransaction\r\n                selectedItem={selectedItem}\r\n                handleAddToCart={this.handleAddToCart}\r\n                place={this.props.match.params.id}\r\n              />\r\n            </div>\r\n            <div className='col-sm'>\r\n              <Receipt\r\n                cartItems={cartItems}\r\n                removeFromCart={this.removeFromCart}\r\n                handleSale={this.handleSale}\r\n                place={this.props.match.params.id}\r\n                payObj={payment}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeDashboard);\r\n","import React, {useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\n\r\nimport {toast} from 'react-toastify';\r\nimport Modal from '../../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {objetPropEmpty} from '../../../services/utility';\r\n\r\nfunction AddEmployee(props) {\r\n  const {handleClose} = props;\r\n  const [admin, setAdmin] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n  });\r\n\r\n  const updateEmpProp = (obj) => {\r\n    setAdmin({...admin, ...obj});\r\n  };\r\n\r\n  const saveEmployee = () => {\r\n    if (admin.password !== admin.confirm_password) {\r\n      toast.error('The two passwords do not match');\r\n    } else if (objetPropEmpty(admin)) {\r\n      toast.error('Do not leave fields empty');\r\n    } else {\r\n      trackPromise(\r\n        handleError(\r\n          handleSuccess(\r\n            sendPostRequest('employees', admin),\r\n            'Employee added successfully'\r\n          ).then((res) => {\r\n            handleClose();\r\n          })\r\n        )\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>New Employee</div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>First name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter firstname'\r\n              value={admin.firstname}\r\n              onChange={(e) => updateEmpProp({firstname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Last name</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter lastname'\r\n              value={admin.lastname}\r\n              onChange={(e) => updateEmpProp({lastname: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Phone Number</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter phone number'\r\n              value={admin.phone}\r\n              onChange={(e) => updateEmpProp({phone: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Email</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Enter email'\r\n              value={admin.email}\r\n              onChange={(e) => updateEmpProp({email: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Password</label>\r\n            <input\r\n              type='password'\r\n              className='form-control'\r\n              placeholder='Enter password'\r\n              value={admin.password}\r\n              onChange={(e) => updateEmpProp({password: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor='firstname'>Confirm Password</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Confirm password'\r\n              value={admin.confirm_password}\r\n              onChange={(e) =>\r\n                updateEmpProp({confirm_password: e.target.value})\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={saveEmployee}>\r\n              Save Employee\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddEmployee;\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport AddEmployee from './add-employee';\r\n\r\nclass Employees extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddEmployee: false,\r\n      employees: [],\r\n    };\r\n  }\r\n  fetchEmployees() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('employees')).then((res) => {\r\n          let employees = res.data;\r\n          this.setState({employees});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchEmployees();\r\n  }\r\n\r\n  updateShowAdmin = (showAddEmployee) => {\r\n    this.setState({showAddEmployee});\r\n  };\r\n\r\n  onDelete = (employee) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`employees/${employee.id}/delete`),\r\n          'Employee deleted successfully'\r\n        ).then((res) => this.fetchEmployees())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddEmployee, employees} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddEmployee && (\r\n          <AddEmployee\r\n            handleClose={() => {\r\n              this.updateShowAdmin(false);\r\n              this.fetchEmployees();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Employees </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAdmin(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Phone Number</th>\r\n                <th>Email</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {employees.map((emp, index) => (\r\n                <tr key={emp.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{emp.firstname + ' ' + emp.lastname}</td>\r\n                  <td>{emp.phone}</td>\r\n                  <td>{emp.email}</td>\r\n                  <td>\r\n                    <span title={formatDate(emp.updated_at)}>\r\n                      {getDateTimeAgo(emp.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(emp)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Employees);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../services/api-handle';\r\nimport {user_types} from '../../services/constants';\r\nimport {removeFromLocalStorage, storeUserLocally} from '../../services/utility';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        level: user_types.EMPLOYEE,\r\n      },\r\n    };\r\n  }\r\n\r\n  updatePropChange = (obj) => {\r\n    this.setState({\r\n      user: {\r\n        ...this.state.user,\r\n        ...obj,\r\n      },\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    removeFromLocalStorage('currentUser');\r\n  }\r\n\r\n  handleLogin = () => {\r\n    const {user} = this.state;\r\n    let url = 'admins/login';\r\n    let successMessage = 'Login successful';\r\n    let redirectUrl = '/admin';\r\n    let isAdmin = user.level === user_types.ADMIN;\r\n    if (!isAdmin) {\r\n      url = 'employees/login';\r\n      redirectUrl = '/employee';\r\n    }\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendPostRequest(url, user), successMessage).then(\r\n          (res) => {\r\n            let user = res.data.user;\r\n            storeUserLocally('currentUser', {\r\n              ...user,\r\n              isAdmin,\r\n            });\r\n            this.props.history.push(redirectUrl);\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {user} = this.state;\r\n    return (\r\n      <div className='container'>\r\n        <div className='row justify-content-center'>\r\n          <div className='card shadow shadow-secondary mt-4'>\r\n            <div className='card-body'>\r\n              <h1 className='jumbotron jumbotron-fluid bg-transparent'>\r\n                SCRATCH KITCHEN\r\n              </h1>\r\n              <hr />\r\n              <div className='form-group row justify-content-center'>\r\n                <div\r\n                  className='btn-group col-12'\r\n                  role='group'\r\n                  aria-label='Basic example'\r\n                >\r\n                  <button\r\n                    type='button'\r\n                    className={`btn btn-${\r\n                      user.level === user_types.EMPLOYEE\r\n                        ? 'white border-dark'\r\n                        : 'dark'\r\n                    }`}\r\n                    onClick={() =>\r\n                      this.updatePropChange({level: user_types.ADMIN})\r\n                    }\r\n                  >\r\n                    Admin\r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    className={`btn btn-${\r\n                      user.level === user_types.ADMIN\r\n                        ? 'white border-dark'\r\n                        : 'dark'\r\n                    }`}\r\n                    onClick={() =>\r\n                      this.updatePropChange({level: user_types.EMPLOYEE})\r\n                    }\r\n                  >\r\n                    Employee\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='form-group'>\r\n                <label htmlFor='email'>Email</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Enter email'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({email: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='username'>Password</label>\r\n                <input\r\n                  type='password'\r\n                  className='form-control'\r\n                  placeholder='Enter password'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({password: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <hr />\r\n              <div className='row justify-content-center'>\r\n                <button\r\n                  className='btn btn-primary col-6'\r\n                  onClick={this.handleLogin}\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport Modal from '../../../components/modal/modal';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Categories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  fetchCategories() {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('categories')).then((res) => {\r\n          this.setState({categories: res.data.categories});\r\n        })\r\n      )\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.fetchCategories();\r\n  }\r\n\r\n  updateShowAddCategory = (showAddCategory) => {\r\n    this.setState({showAddCategory});\r\n  };\r\n\r\n  onDelete = (category) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`categories/${category.id}/delete`),\r\n          'Category deleted successfully'\r\n        ).then((res) => this.fetchCategories())\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {showAddCategory, categories} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddCategory && (\r\n          <AddCategory\r\n            handleClose={() => {\r\n              this.updateShowAddCategory(false);\r\n              this.fetchCategories();\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <h2>Categories </h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAddCategory(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Created</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {categories.map((category, index) => (\r\n                <tr key={category.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/admin/products/${category.id}`}\r\n                      className='link'\r\n                    >\r\n                      {category.name}\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    {category.place === places.BAR ? 'Bar' : 'Restaurant'}\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(category.created_at)}>\r\n                      {getDateTimeAgo(category.created_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(category.updated_at)}>\r\n                      {getDateTimeAgo(category.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(category)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction AddCategory(props) {\r\n  const {handleClose} = props;\r\n  const [category, setCategory] = useState({});\r\n  const onSave = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('categories', category),\r\n          'Category added successfully'\r\n        ).then((res) => handleClose())\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className='modal-header'>\r\n        <div className='h4 text-center'>Add Category</div>\r\n      </div>\r\n      <div className='modal-body'>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Type</label>\r\n          <select\r\n            name=''\r\n            id=''\r\n            className='form-control'\r\n            onChange={(e) => setCategory({...category, place: e.target.value})}\r\n          >\r\n            <option value=''>Select Type</option>\r\n            <option value={places.BAR}>Bar</option>\r\n            <option value={places.RESTAURANT}>Restaurant</option>\r\n          </select>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Enter name '\r\n            value={category.name}\r\n            onChange={(e) => setCategory({...category, name: e.target.value})}\r\n          />\r\n        </div>\r\n\r\n        <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n          <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n            Cancel\r\n          </button>\r\n          <button className='btn btn-primary col-4' onClick={onSave}>\r\n            Save Category\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default withTemplate(Categories);\r\n","import React, {Component, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport Modal from '../../../components/modal/modal';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {formatDate, getDateTimeAgo} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Goods extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddProduct: false,\r\n      products: [],\r\n      category: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.fetchProducts();\r\n  }\r\n\r\n  fetchProducts() {\r\n    let categoryId = this.props.match.params.id;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(`products?category=${categoryId}`)).then(\r\n          (res) => {\r\n            let {products, category} = res.data;\r\n            this.setState({products, category});\r\n          }\r\n        )\r\n      )\r\n    );\r\n  }\r\n  updateShowAddProduct = (showAddProduct) => {\r\n    this.setState({showAddProduct});\r\n  };\r\n  onDelete = (good) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`products/${good.id}/delete`),\r\n          'Product deleted successfully'\r\n        ).then((res) => this.fetchProducts())\r\n      )\r\n    );\r\n  };\r\n  render() {\r\n    const {showAddProduct, products, category} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        {showAddProduct && (\r\n          <AddProduct\r\n            handleClose={() => {\r\n              this.updateShowAddProduct(false);\r\n              this.fetchProducts();\r\n            }}\r\n            category={this.props.match.params.id}\r\n          />\r\n        )}\r\n        <h2>{`Products (${category.name})`}</h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <button\r\n            className='btn btn-info'\r\n            onClick={() => this.updateShowAddProduct(true)}\r\n          >\r\n            <i className='fa fa-plus mr-2'></i>Add New\r\n          </button>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Created</th>\r\n                <th>Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product, index) => (\r\n                <tr>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/admin/products/${product.id}/pricing`}\r\n                      className='link'\r\n                    >\r\n                      {product.name}\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(product.created_at)}>\r\n                      {getDateTimeAgo(product.created_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span title={formatDate(product.updated_at)}>\r\n                      {getDateTimeAgo(product.updated_at)}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <TableIcon onClick={() => this.onDelete(product)}>\r\n                      <i className='fa fa-trash'></i>\r\n                    </TableIcon>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction AddProduct(props) {\r\n  const {handleClose, category} = props;\r\n  const [product, setProduct] = useState({});\r\n\r\n  const onSave = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest('products', {...product, category}),\r\n          'Product added successfully'\r\n        ).then((res) => handleClose())\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className='modal-header'>\r\n        <div className='h4 text-center'>Add Product</div>\r\n      </div>\r\n      <div className='modal-body'>\r\n        <div className='form-group'>\r\n          <label htmlFor=''>Name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder='Enter name '\r\n            value={product.name}\r\n            onChange={(e) => setProduct({...product, name: e.target.value})}\r\n          />\r\n        </div>\r\n\r\n        <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n          <button className='btn btn-secondary col-4' onClick={handleClose}>\r\n            Cancel\r\n          </button>\r\n          <button className='btn btn-primary col-4' onClick={onSave}>\r\n            Save Product\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nexport default withTemplate(Goods);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {toast} from 'react-toastify';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {\r\n  formatDate,\r\n  getDateTimeAgo,\r\n  getFormattedMeasure,\r\n  getFromLocal,\r\n} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Pricing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pricings: [],\r\n      selectedPricing: {},\r\n      good: {},\r\n    };\r\n  }\r\n\r\n  getPricings() {\r\n    let goodId = this.props.match.params.id;\r\n    if (!goodId) {\r\n      toast.warn('The good id is required to view this page');\r\n      this.props.history.goBack();\r\n      return;\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest('pricings?good=' + goodId)).then((res) => {\r\n          let pricings = res.data.pricings;\r\n          let good = res.data.good;\r\n          this.setState({pricings, good});\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPricings();\r\n  }\r\n\r\n  updatePropChange = (obj) => {\r\n    this.setState({\r\n      selectedPricing: {\r\n        ...this.state.selectedPricing,\r\n        ...obj,\r\n      },\r\n    });\r\n  };\r\n\r\n  addPricing = () => {\r\n    const {selectedPricing} = this.state;\r\n    let goodId = this.props.match.params.id;\r\n    const currentUser = getFromLocal('currentUser') || {};\r\n\r\n    let url = 'pricings',\r\n      successMessage = 'Price added successfully';\r\n    if (selectedPricing.id) {\r\n      url = `pricings/${selectedPricing.id}/edit`;\r\n      successMessage = 'Price updated successfully';\r\n    }\r\n\r\n    selectedPricing.good = goodId;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(url, {\r\n            ...selectedPricing,\r\n            updated_by: `${currentUser.firstname} ${currentUser.lastname}`,\r\n          }),\r\n          successMessage\r\n        ).then((res) => {\r\n          this.setState({selectedPricing: {}});\r\n          this.getPricings();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  showEditPricing = (selectedPricing) => {\r\n    this.setState({selectedPricing});\r\n  };\r\n  onDelete = (pricing) => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`pricings/${pricing.id}/delete`)\r\n        ).then((res) => this.getPricings())\r\n      )\r\n    );\r\n  };\r\n\r\n  displayProfileLossBadge = (buyingPrice, selllingPrice) => {\r\n    let percent = ((selllingPrice - buyingPrice) / buyingPrice) * 100;\r\n    let badgeClass = 'badge badge-danger ml-2',\r\n      displayText = 'loss';\r\n    if (percent >= 0) {\r\n      badgeClass = ' badge badge-success ml-2';\r\n      displayText = 'profit';\r\n    }\r\n\r\n    return (\r\n      <span className={badgeClass}>\r\n        {Math.abs(percent.toFixed(2)) + '% ' + displayText}\r\n      </span>\r\n    );\r\n  };\r\n  render() {\r\n    const {pricings, selectedPricing, good} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2>{`Pricing (${good.name})`} </h2>\r\n        <div className='card'>\r\n          <div className='card-body'>\r\n            <div className='row'>\r\n              <div className='form-group'>\r\n                <label htmlFor=''>Unit</label>\r\n                <select\r\n                  name=''\r\n                  id=''\r\n                  className='form-control'\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({unit: e.target.value})\r\n                  }\r\n                  value={selectedPricing.unit || ''}\r\n                >\r\n                  <option value=''>Select Unit</option>\r\n                  <option value='ml'>ML</option>\r\n                  <option value='kg'>KG</option>\r\n                  <option value='count'>Count</option>\r\n                </select>\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Measure - {selectedPricing.unit}</label>\r\n\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder='Eg 1/4'\r\n                  value={selectedPricing.measure || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({measure: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Buying Price</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder=' Eg 200'\r\n                  value={selectedPricing.buying_price || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({buying_price: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Retail Price</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder=' Eg 300'\r\n                  value={selectedPricing.amount || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({amount: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-1'>\r\n                <label htmlFor=''>Online Price</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  placeholder=' Eg 400'\r\n                  value={selectedPricing.online_price || ''}\r\n                  onChange={(e) =>\r\n                    this.updatePropChange({online_price: e.target.value})\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group ml-2 mt-2 '>\r\n                <button\r\n                  className='btn btn-primary mt-4 w-100'\r\n                  onClick={this.addPricing}\r\n                >\r\n                  {selectedPricing.id ? (\r\n                    <i className='fa fa-edit mr-2'></i>\r\n                  ) : (\r\n                    <i className='fa fa-plus mr-2'></i>\r\n                  )}\r\n                  {selectedPricing.id ? 'Update' : 'Add'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='card mt-3'>\r\n          <div className='card-body'>\r\n            <div className='table-responsive'>\r\n              <table\r\n                className='table display table-hover table-striped datatable'\r\n                style={{width: '100%'}}\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Measure</th>\r\n                    <th>Buying Price</th>\r\n                    <th>Retail Price</th>\r\n                    <th>Online Price</th>\r\n                    <th>Created</th>\r\n                    <th>Updated</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {pricings.map((pricing, index) => (\r\n                    <tr key={pricing.id} className='link'>\r\n                      <td>{++index}</td>\r\n                      <td>\r\n                        {getFormattedMeasure(pricing.unit, pricing.measure)}\r\n                      </td>\r\n                      <td>{'Ksh ' + pricing.buying_price}</td>\r\n                      <td>\r\n                        {'Ksh ' + pricing.amount}\r\n                        {this.displayProfileLossBadge(\r\n                          pricing.buying_price,\r\n                          pricing.amount\r\n                        )}\r\n                      </td>\r\n\r\n                      <td>\r\n                        {'Ksh ' + pricing.online_price}\r\n                        {this.displayProfileLossBadge(\r\n                          pricing.buying_price,\r\n                          pricing.online_price\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <span title={formatDate(pricing.created_at)}>\r\n                          {getDateTimeAgo(pricing.created_at)}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <span title={formatDate(pricing.updated_at)}>\r\n                          {getDateTimeAgo(pricing.updated_at)}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <div className='d-flex justify-content-around w-75'>\r\n                          <TableIcon onClick={() => this.onDelete(pricing)}>\r\n                            <i className='fa fa-trash'></i>\r\n                          </TableIcon>\r\n                          <TableIcon\r\n                            onClick={() => this.showEditPricing(pricing)}\r\n                          >\r\n                            <i className='fa fa-edit'></i>\r\n                          </TableIcon>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Pricing);\r\n","import React from 'react';\r\nimport {places} from '../../services/constants';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nfunction EmployeeWelcome(props) {\r\n  return (\r\n    <div\r\n      className='row'\r\n      style={{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '50vh',\r\n        marginTop: '15vh',\r\n      }}\r\n    >\r\n      <h1 className='jumbotron-fluid bg-transparent text-center col-12'>\r\n        Menu\r\n      </h1>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '75px'}}\r\n        onClick={() => props.history.push(`/employee/dashboard/${places.BAR}`)}\r\n      >\r\n        <h5>\r\n          Bar <i className='float-right fas fa-glass-cheers'></i>\r\n        </h5>\r\n      </div>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '75px'}}\r\n        onClick={() =>\r\n          props.history.push(`/employee/dashboard/${places.RESTAURANT}`)\r\n        }\r\n      >\r\n        <h5>\r\n          Restaurant <i className='float-right fas fa-utensils'></i>\r\n        </h5>\r\n      </div>\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '75px'}}\r\n        onClick={() =>\r\n          props.history.push(`/employee/sales/${places.RESTAURANT}`)\r\n        }\r\n      >\r\n        <h5>\r\n          Sale History <i className='float-right fas fa-history'></i>\r\n        </h5>\r\n      </div>\r\n\r\n      <div\r\n        className='col-md-8 pt-4 shadow shadow-dark   link emp-menu'\r\n        style={{height: '75px'}}\r\n        onClick={() => props.history.push(`/employee/stock`)}\r\n      >\r\n        <h5>\r\n          Stock <i className='float-right fas fa-cart-plus'></i>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeWelcome);\r\n","import React, {useEffect} from 'react';\r\nimport $ from 'jquery';\r\n\r\nexport default function ToolTipElement(props) {\r\n  const {children, tooltip} = props;\r\n  useEffect(() => {\r\n    $('[data-toggle=\"tooltip\"]').tooltip();\r\n  }, []);\r\n  return (\r\n    <div\r\n      className='link w-50 '\r\n      data-toggle='tooltip'\r\n      data-placement='bottom'\r\n      title={tooltip}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport SelectPeriod from '../../components/select-period/select-period';\r\nimport ToolTipElement from '../../components/tooltip/tooltip-element';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../services/api-handle';\r\nimport {time_periods} from '../../services/constants';\r\nimport {\r\n  formatDate,\r\n  formatUrl,\r\n  getFormattedAmount,\r\n  getFromLocal,\r\n} from '../../services/utility';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nfunction EmployeeSales(props) {\r\n  const currentUser = getFromLocal('currentUser');\r\n  const [sales, setSales] = useState([]);\r\n  const [period, setPeriod] = useState(time_periods.TODAY.value);\r\n\r\n  const updateData = () => {\r\n    let url = formatUrl('sales', {sold_by: currentUser.id, period});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let sales = res.data.sales;\r\n          setSales(sales);\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(updateData, [period, currentUser.id]);\r\n\r\n  const handleDelete = (id) => {\r\n    const updated_by = `${currentUser.firstname} ${currentUser.lastname}`;\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`sales/${id}/delete`, {sale_id: id, updated_by}),\r\n          'Sale deleted successfully'\r\n        ).then((res) => {\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n  const place = props.match.params.place;\r\n\r\n  return (\r\n    <div className='container-fluid ml-2 mr-2'>\r\n      <div className='row'>\r\n        <div className='col-12'>\r\n          <div className='card'>\r\n            <div className='card-header border-bottom-0'>\r\n              <h1 className='text-center jumbotron gradient-3 w-100'>\r\n                Sales for {currentUser.firstname}\r\n                <div className='float-right'>\r\n                  <div className='form-group'>\r\n                    <SelectPeriod\r\n                      selectedPeriod={period}\r\n                      updatePeriod={(prd) => setPeriod(prd)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </h1>\r\n            </div>\r\n            <div className='card-body'>\r\n              <div className='table-responsive'>\r\n                <table\r\n                  className='table display table-hover table-striped datatable'\r\n                  style={{width: '100%'}}\r\n                >\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Date</th>\r\n                      <th>Number of goods</th>\r\n                      <th>Total amount</th>\r\n                      <th>Payment Type</th>\r\n                      <th>\r\n                        Customer Pay\r\n                        <br />\r\n                        Customer Change\r\n                      </th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {sales.map((sale, index) => (\r\n                      <tr key={sale.id}>\r\n                        <td>{++index}</td>\r\n                        <td>\r\n                          <Link to={`/employee/sales/view/${sale.id}`}>\r\n                            {formatDate(sale.created_at)}\r\n                          </Link>\r\n                        </td>\r\n                        <td>{sale.goods_count}</td>\r\n                        <td>{sale.total}</td>\r\n                        <td>{sale.payment_method}</td>\r\n                        <td>\r\n                          {getFormattedAmount(sale.customer_pay, 1)}\r\n                          <br />\r\n                          {getFormattedAmount(sale.customer_change, 1)}\r\n                        </td>\r\n                        <td>\r\n                          {sale.status !== 1 && (\r\n                            <>\r\n                              <button\r\n                                className='btn btn-danger ml-1'\r\n                                onClick={() => handleDelete(sale.id)}\r\n                              >\r\n                                <i className='fa fa-trash mr-2'></i>\r\n                                Delete\r\n                              </button>\r\n                              <button\r\n                                className='btn btn-info ml-1'\r\n                                onClick={() =>\r\n                                  props.history.push(\r\n                                    `/employee/dashboard/${place}/edit/${sale.id}`\r\n                                  )\r\n                                }\r\n                              >\r\n                                <i className='fa fa-edit mr-2'></i>\r\n                                Edit\r\n                              </button>\r\n                            </>\r\n                          )}\r\n                          {sale.status === 2 && (\r\n                            <ToolTipElement\r\n                              tooltip={`Edited by ${\r\n                                sale.updated_by\r\n                              } at ${formatDate(sale.updated_at)}`}\r\n                            >\r\n                              <div className='badge badge-success'>Edited</div>\r\n                            </ToolTipElement>\r\n                          )}\r\n\r\n                          {sale.status === 1 && (\r\n                            <ToolTipElement\r\n                              tooltip={`Deleted by ${\r\n                                sale.updated_by\r\n                              } at ${formatDate(sale.updated_at)}`}\r\n                            >\r\n                              <div className='badge badge-danger'>Deleted</div>\r\n                            </ToolTipElement>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeSales);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  sendGetRequest,\r\n  handleError,\r\n  handleSuccess,\r\n} from '../../services/api-handle';\r\nimport {formatDate, formatUrl} from '../../services/utility';\r\nimport withEmployeeValidation from './with-employee-validation';\r\n\r\nfunction EmployeeSaleDetail(props) {\r\n  const [sale, setSale] = useState({});\r\n  const [history, setHistory] = useState([]);\r\n  const saleId = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    let url = formatUrl('sales/history', {sale_id: saleId});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let sale = res.data.sale[0];\r\n          let history = res.data.history;\r\n          setSale(sale);\r\n          setHistory(history);\r\n        })\r\n      )\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-12'>\r\n          <div className='card'>\r\n            <div className='card-body border-bottom-0 gradient-3'>\r\n              <h1 className='text-center jumbotron w-100 bg-transparent'>\r\n                Sale Details\r\n              </h1>\r\n              <br />\r\n              <div className='p-2  row'>\r\n                <div className='col text-white'>\r\n                  Sold By : {`${sale.firstname} ${sale.lastname}`}\r\n                </div>\r\n                <div className='col text-white'>\r\n                  Date: {formatDate(sale.created_at)}\r\n                </div>\r\n                <div className='col text-white'>Goods: {history.length}</div>\r\n                <div className='col text-white'>Total: {sale.total}</div>\r\n              </div>\r\n            </div>\r\n            <div className='card-body'>\r\n              <div className='table-responsive'>\r\n                <table className='table table-bordered table-hover'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Name</th>\r\n                      <th>Category</th>\r\n                      <th>Quantity</th>\r\n                      <th>Measure</th>\r\n                      <th>Amount</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {history.map((sale, index) => (\r\n                      <tr key={sale.id}>\r\n                        <td>{++index}</td>\r\n                        <td>{sale.good_name}</td>\r\n                        <td>{sale.category_name}</td>\r\n                        <td>{sale.quantity}</td>\r\n                        <td>{sale.measure}</td>\r\n                        <td>{sale.price}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withEmployeeValidation(EmployeeSaleDetail);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleSuccess,\r\n  handleError,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {formatUrl, formatDate} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nfunction SaleDetail(props) {\r\n  const [sale, setSale] = useState({});\r\n  const [history, setHistory] = useState([]);\r\n  const saleId = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    let url = formatUrl('sales/history', {sale_id: saleId});\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(url)).then((res) => {\r\n          let sale = res.data.sale[0];\r\n          let history = res.data.history;\r\n          setSale(sale);\r\n          setHistory(history);\r\n        })\r\n      )\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className='mt-3'>\r\n      <h4 className='text-center'>Sale Details</h4>\r\n      <div className='p-2 col-12 row'>\r\n        <div className='col'>\r\n          Sold By : {`${sale.firstname} ${sale.lastname}`}\r\n        </div>\r\n        <div className='col'>Date: {formatDate(sale.created_at)}</div>\r\n        <div className='col'>Goods: {history.length}</div>\r\n        <div className='col'>Total: {sale.total}</div>\r\n      </div>\r\n      <div className='row justify-content-center pr-2 pl-2'>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Category</th>\r\n                <th>Quantity</th>\r\n                <th>Measure</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {history.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>{sale.good_name}</td>\r\n                  <td>{sale.category_name}</td>\r\n                  <td>{sale.quantity}</td>\r\n                  <td>{sale.measure}</td>\r\n                  <td>{sale.price}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withTemplate(SaleDetail);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport SelectPeriod from '../../../components/select-period/select-period';\r\nimport ToolTipElement from '../../../components/tooltip/tooltip-element';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {time_periods} from '../../../services/constants';\r\nimport {\r\n  formatDate,\r\n  formatUrl,\r\n  getFormattedAmount,\r\n  getFromLocal,\r\n} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass Sales extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sales: [],\r\n      period: time_periods.ALL_TIME.value,\r\n    };\r\n  }\r\n\r\n  updateData = () => {\r\n    const {period} = this.state;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(formatUrl('sales', {period}))).then(\r\n          (res) => {\r\n            let sales = res.data.sales;\r\n            this.setState({sales});\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n  handleDelete = (id) => {\r\n    let currentUser = getFromLocal('currentUser');\r\n    const updated_by = `${currentUser.firstname} ${currentUser.lastname}`;\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(`sales/${id}/delete`, {sale_id: id, updated_by}),\r\n          'Sale deleted successfully'\r\n        ).then((res) => {\r\n          this.updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  updateFilter = (obj) => {\r\n    this.setState({...this.state, ...obj}, () => this.updateData());\r\n  };\r\n  render() {\r\n    const {sales, period} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2>Sales</h2>\r\n        <div className='w-100 row justify-content-end mb-2'>\r\n          <div className='form-group'>\r\n            <SelectPeriod\r\n              selectedPeriod={period}\r\n              updatePeriod={(period) => this.updateFilter({period})}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Sold By</th>\r\n                <th>Payment Method</th>\r\n                <th>Number</th>\r\n                <th>Amount</th>\r\n                <th>Customer Pay</th>\r\n                <th>Customer Change</th>\r\n                <th>Date</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sales.map((sale, index) => (\r\n                <tr key={sale.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link to={'/admin/sales/view/' + sale.id}>\r\n                      {sale.firstname + ' ' + sale.lastname}\r\n                    </Link>\r\n                  </td>\r\n                  <td>{sale.payment_method}</td>\r\n                  <td>{sale.goods_count}</td>\r\n                  <td>{sale.total}</td>\r\n                  <td>{getFormattedAmount(sale.customer_pay, 1)}</td>\r\n                  <td>{getFormattedAmount(sale.customer_change, 1)}</td>\r\n                  <td>{formatDate(sale.created_at)}</td>\r\n                  <td>\r\n                    {sale.status === 1 && (\r\n                      <ToolTipElement\r\n                        tooltip={`Deleted by ${sale.updated_by} at ${formatDate(\r\n                          sale.updated_at\r\n                        )}`}\r\n                      >\r\n                        <div className='badge badge-danger'>Deleted</div>\r\n                      </ToolTipElement>\r\n                    )}\r\n                    {sale.status === 2 && (\r\n                      <ToolTipElement\r\n                        tooltip={`Edited by ${sale.updated_by} at ${formatDate(\r\n                          sale.updated_at\r\n                        )}`}\r\n                      >\r\n                        <div className='badge badge-success'>Edited</div>\r\n                      </ToolTipElement>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Sales);\r\n","import React from 'react';\r\nimport './loader.scss';\r\nimport {usePromiseTracker} from 'react-promise-tracker';\r\n\r\nfunction Loader() {\r\n  const {promiseInProgress} = usePromiseTracker();\r\n  if (promiseInProgress) {\r\n    return (\r\n      <div className='loader-container hidden-print'>\r\n        <div className='loader'>\r\n          <span>Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n\r\nexport default Loader;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Modal from '../../../components/modal/modal';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {getFromLocal} from '../../../services/utility';\r\n\r\nexport default function AddStock(props) {\r\n  const {\r\n    handleCloseModal,\r\n    updateData,\r\n    selectedStock,\r\n    selectedPlace,\r\n    isAddEdit,\r\n  } = props;\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [stock, setStock] = useState({});\r\n  const [stockAdd, setStockAdd] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (selectedStock.id) {\r\n      setStock(selectedStock);\r\n      setStockAdd({price: selectedStock.buying_price});\r\n      setIsEdit(true);\r\n    }\r\n  }, [selectedStock]);\r\n\r\n  const handleSubmit = () => {\r\n    let url = '',\r\n      successMessage = '';\r\n    const currentUser = getFromLocal('currentUser') || {};\r\n\r\n    if (selectedPlace === places.RESTAURANT) {\r\n      url = 'stock/add-restaurant';\r\n      successMessage = 'Stock added successfully';\r\n\r\n      if (isEdit) {\r\n        url = 'stock/edit-restaurant';\r\n        successMessage = 'Stock edited successfully';\r\n        delete stock.quantity;\r\n        delete stock.price;\r\n      }\r\n    } else {\r\n      if (isEdit) {\r\n        url = `pricings/${stock.id}/edit`;\r\n        successMessage = 'Stock updated successfully';\r\n        stock.quantity_remaining = stock.quantity;\r\n        stock.buying_price = stock.price;\r\n      }\r\n    }\r\n\r\n    if (!isAddEdit && isEdit) {\r\n      if (selectedPlace === places.RESTAURANT) {\r\n        stock.price = stockAdd.price;\r\n        stock.quantity = stockAdd.quantity;\r\n        successMessage = 'Stock quantity updated';\r\n      } else {\r\n        stock.quantity_remaining = stockAdd.quantity;\r\n        stock.buying_price = stockAdd.price;\r\n        successMessage = 'Stock quantity updated';\r\n      }\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(url, {\r\n            ...stock,\r\n            updated_by: `${currentUser.firstname} ${currentUser.lastname}`,\r\n          }),\r\n          successMessage\r\n        ).then((res) => {\r\n          setStock({});\r\n          handleCloseModal();\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateStockChange = (obj) => {\r\n    setStock({...stock, ...obj});\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>\r\n            {!isAddEdit\r\n              ? 'Update Good Stock'\r\n              : isEdit\r\n              ? 'Edit Stock'\r\n              : 'New Stock'}\r\n          </div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          {isAddEdit ? (\r\n            <div className='form-group'>\r\n              <label htmlFor=''>Name</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='E.g Salt'\r\n                value={stock.stock_name}\r\n                onChange={(e) =>\r\n                  updateStockChange({stock_name: e.target.value})\r\n                }\r\n                disabled={selectedPlace === places.BAR}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {selectedPlace === places.RESTAURANT && isAddEdit ? (\r\n            <div className='form-group'>\r\n              <label htmlFor=''>Measure</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='E.g Bales'\r\n                value={stock.measure}\r\n                onChange={(e) => updateStockChange({measure: e.target.value})}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {!isAddEdit ? (\r\n            <div className='form-group'>\r\n              <label htmlFor=''>\r\n                Buying Price{' '}\r\n                {stock.measure ? `Per ${stock.measure.slice(0, -1)}` : ''}\r\n              </label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Eg 300'\r\n                value={stockAdd.price}\r\n                onChange={(e) =>\r\n                  setStockAdd({...stockAdd, price: e.target.value})\r\n                }\r\n              />\r\n            </div>\r\n          ) : null}\r\n          '\r\n          {!isAddEdit && (\r\n            <div className='form-group'>\r\n              <label htmlFor=''>Quantity in {selectedStock.measure}</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='e.g 4'\r\n                value={stockAdd.quantity}\r\n                onChange={(e) =>\r\n                  setStockAdd({...stockAdd, quantity: e.target.value})\r\n                }\r\n              />\r\n            </div>\r\n          )}\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button\r\n              className='btn btn-secondary col-4'\r\n              onClick={handleCloseModal}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={handleSubmit}>\r\n              {isAddEdit ? 'Save Stock' : 'Add stock'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {Link} from 'react-router-dom';\r\nimport TableIcon from '../../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../../services/api-handle';\r\nimport {places} from '../../../services/constants';\r\nimport {formatUrl} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\nimport AddStock from './add-stock';\r\n\r\nclass Stock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedPlace: places.BAR,\r\n      stock: [],\r\n      showAddStock: false,\r\n      selectedStock: {},\r\n      isAddEdit: false,\r\n    };\r\n  }\r\n\r\n  updateData = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendGetRequest(formatUrl('stock', {place: this.state.selectedPlace}))\r\n        ).then((res) => {\r\n          let {stock} = res.data;\r\n          this.setState({stock, selectedStock: {}});\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n\r\n  updatePropChange = (obj) => {\r\n    this.setState({...this.state, ...obj}, () => this.updateData());\r\n  };\r\n\r\n  onDelete = (item) => {\r\n    const {selectedPlace} = this.state;\r\n    let url = `stock/${item.id}/delete`;\r\n\r\n    if (selectedPlace === places.BAR) {\r\n      url = `pricings/${item.id}/delete`;\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendPostRequest(url)).then((res) => {\r\n          this.updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  onEdit = (selectedStock) => {\r\n    this.setState({selectedStock, showAddStock: true, isAddEdit: true});\r\n  };\r\n\r\n  onAddStock = (selectedStock) => {\r\n    this.setState({selectedStock, showAddStock: true, isAddEdit: false});\r\n  };\r\n\r\n  toggleShowAdd = () => {\r\n    this.setState({\r\n      showAddStock: !this.state.showAddStock,\r\n      selectedStock: {},\r\n      isAddEdit: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedPlace,\r\n      stock,\r\n      showAddStock,\r\n      selectedStock,\r\n      isAddEdit,\r\n    } = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h2>Stock</h2>\r\n        {showAddStock && (\r\n          <AddStock\r\n            selectedStock={selectedStock}\r\n            handleCloseModal={this.toggleShowAdd}\r\n            updateData={this.updateData}\r\n            selectedPlace={selectedPlace}\r\n            isAddEdit={isAddEdit}\r\n          />\r\n        )}\r\n        <div className='row '>\r\n          <div className='col row justify-content-start'>\r\n            <div className='form-group'>\r\n              <div\r\n                className='btn-group col-12'\r\n                role='group'\r\n                aria-label='Basic example'\r\n              >\r\n                <button\r\n                  type='button'\r\n                  className={`btn btn-${\r\n                    selectedPlace === places.RESTAURANT\r\n                      ? 'white border-dark'\r\n                      : 'dark'\r\n                  }`}\r\n                  onClick={() =>\r\n                    this.updatePropChange({selectedPlace: places.BAR})\r\n                  }\r\n                >\r\n                  Bar Stock\r\n                </button>\r\n                <button\r\n                  type='button'\r\n                  className={`btn btn-${\r\n                    selectedPlace === places.BAR ? 'white border-dark' : 'dark'\r\n                  }`}\r\n                  onClick={() =>\r\n                    this.updatePropChange({selectedPlace: places.RESTAURANT})\r\n                  }\r\n                >\r\n                  Restaurant Stock\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col row justify-content-end'>\r\n            {selectedPlace === places.RESTAURANT && (\r\n              <div className='form-group'>\r\n                <button className='btn btn-info' onClick={this.toggleShowAdd}>\r\n                  <i className='fa fa-plus mr-2'></i>\r\n                  Add Stock\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='table-responsive'>\r\n          <table\r\n            className='table display table-hover table-striped datatable'\r\n            style={{width: '100%'}}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Good</th>\r\n                <th>Quantity</th>\r\n                <th>@</th>\r\n                <th>Total</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {stock.map((item, index) => (\r\n                <tr key={item.id}>\r\n                  <td>{++index}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={formatUrl('/admin/stock/history', {\r\n                        stock: item.id,\r\n                        place: selectedPlace,\r\n                      })}\r\n                    >\r\n                      {item.stock_name}\r\n                    </Link>\r\n                  </td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>\r\n                    {item.buying_price ? 'Ksh ' + item.buying_price : '_'}\r\n                  </td>\r\n                  <td>{'Ksh ' + item.price}</td>\r\n                  <td>\r\n                    <div className='d-flex justify-content-center w-75'>\r\n                      {selectedPlace === places.RESTAURANT ? (\r\n                        <TableIcon onClick={() => this.onEdit(item)}>\r\n                          <i className='fa fa-edit'></i>\r\n                        </TableIcon>\r\n                      ) : null}\r\n                      <TableIcon onClick={() => this.onAddStock(item)}>\r\n                        <i className='fa fa-plus'></i>\r\n                      </TableIcon>\r\n                      <TableIcon onClick={() => this.onDelete(item)}>\r\n                        <i className='fa fa-trash'></i>\r\n                      </TableIcon>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(Stock);\r\n","import React, {Component} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n} from '../../../services/api-handle';\r\nimport {action_types} from '../../../services/constants';\r\nimport {\r\n  formatDate,\r\n  formatUrl,\r\n  getDateTimeAgo,\r\n  convertObjectToArray,\r\n} from '../../../services/utility';\r\nimport withTemplate from '../with-template';\r\n\r\nclass StockHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [],\r\n      stock: {},\r\n    };\r\n  }\r\n\r\n  updateData = () => {\r\n    const {stock, place} = this.props;\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendGetRequest(formatUrl('stock/history', {stock_id: stock, place}))\r\n        ).then((res) => {\r\n          const {history, stock} = res.data;\r\n          this.setState({history, stock});\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateData();\r\n  }\r\n\r\n  getBadgeColor = (action_type) => {\r\n    let action =\r\n      convertObjectToArray(action_types).find(\r\n        (act) => act.value === parseInt(action_type)\r\n      ) || {};\r\n\r\n    return (\r\n      <span className={`badge badge-${action.badgeColor}`}>\r\n        {action.display}\r\n      </span>\r\n    );\r\n  };\r\n  render() {\r\n    const {history, stock} = this.state;\r\n    return (\r\n      <div className='mt-3'>\r\n        <h3 className='text-center mb-2'>Stock history</h3>\r\n        <div className='card'>\r\n          <div className='card-header'>\r\n            <div className='row'>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Stock Name</h6>\r\n                <p className='text-dark'>{stock.stock_name}</p>\r\n              </div>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Current Quantity</h6>\r\n                <p className='text-dark'>{stock.quantity}</p>\r\n              </div>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Total Stock Cost</h6>\r\n                <p className='text-dark'>{stock.price}</p>\r\n              </div>\r\n              <div className='col-lg-3 col-lg-4 col-12'>\r\n                <h6 className='text-secondary'>Created</h6>\r\n                <p className='text-dark'>{formatDate(stock.created_at)}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='card-body'>\r\n            <div className='table-responsive'>\r\n              <table\r\n                className='table display table-hover table-striped datatable'\r\n                style={{width: '100%'}}\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Date</th>\r\n                    <th>Buying Price</th>\r\n                    <th>Quantity</th>\r\n                    <th>Action Type</th>\r\n                    <th>Updated By</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {history.map((hst, index) => (\r\n                    <tr key={hst.id}>\r\n                      <td>{++index}</td>\r\n                      <td title={formatDate(hst.updated_at)}>\r\n                        {getDateTimeAgo(hst.updated_at)}\r\n                      </td>\r\n                      <td>{'Ksh ' + hst.buying_price}</td>\r\n                      <td>{hst.quantity}</td>\r\n                      <td>{this.getBadgeColor(hst.action_type)}</td>\r\n                      <td>{hst.updated_by}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTemplate(StockHistory);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Modal from '../../components/modal/modal';\r\nimport TableIcon from '../../components/table-icon/table-icon';\r\nimport {\r\n  handleError,\r\n  handleSuccess,\r\n  sendGetRequest,\r\n  sendPostRequest,\r\n} from '../../services/api-handle';\r\nimport {places} from '../../services/constants';\r\nimport {formatUrl, getFromLocal} from '../../services/utility';\r\nimport AddStock from '../admin/stock/add-stock';\r\n\r\nexport default function EmployeeStock(props) {\r\n  const [stock, setStock] = useState([]);\r\n  const [place, setPlace] = useState(places.BAR);\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [showUpdate, setShowUpdate] = useState(false);\r\n  const [selectedStock, setSelectedStock] = useState({});\r\n\r\n  const updateData = () => {\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(sendGetRequest(formatUrl('stock', {place}))).then(\r\n          (res) => {\r\n            setStock(res.data.stock);\r\n          }\r\n        )\r\n      )\r\n    );\r\n  };\r\n  useEffect(updateData, [place]);\r\n\r\n  const toggleShowAdd = () => {\r\n    setShowAdd(!showAdd);\r\n  };\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      {showAdd && (\r\n        <AddStock\r\n          selectedStock={{}}\r\n          handleCloseModal={toggleShowAdd}\r\n          updateData={updateData}\r\n          selectedPlace={place}\r\n          isAddEdit={true}\r\n        />\r\n      )}\r\n\r\n      {showUpdate && (\r\n        <UpdateStock\r\n          handleCloseModal={() => {\r\n            setShowUpdate(false);\r\n            setSelectedStock({});\r\n          }}\r\n          updateData={updateData}\r\n          selectedStock={selectedStock}\r\n          place={place}\r\n        />\r\n      )}\r\n      <div className='row'>\r\n        <div className='col-12'>\r\n          <div className='card'>\r\n            <div className='card-header border-bottom-0'>\r\n              <h1 className='text-center jumbotron w-100 gradient-3'>Stock</h1>\r\n            </div>\r\n            <div className='card-body'>\r\n              <div className='w-100 row'>\r\n                <div className='col row justify-content-start'>\r\n                  <div className='form-group'>\r\n                    <div\r\n                      className='btn-group col-12'\r\n                      role='group'\r\n                      aria-label='Basic example'\r\n                    >\r\n                      <button\r\n                        type='button'\r\n                        className={`btn btn-${\r\n                          place === places.RESTAURANT\r\n                            ? 'white border-dark'\r\n                            : 'dark'\r\n                        }`}\r\n                        onClick={() => setPlace(places.BAR)}\r\n                      >\r\n                        Bar Stock\r\n                      </button>\r\n                      <button\r\n                        type='button'\r\n                        className={`btn btn-${\r\n                          place === places.BAR ? 'white border-dark' : 'dark'\r\n                        }`}\r\n                        onClick={() => setPlace(places.RESTAURANT)}\r\n                      >\r\n                        Restaurant Stock\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='col row justify-content-end'>\r\n                  {place === places.RESTAURANT && (\r\n                    <div className='form-group'>\r\n                      <button className='btn btn-info' onClick={toggleShowAdd}>\r\n                        <i className='fa fa-plus mr-2'></i>\r\n                        Add Stock\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className='table-responsive'>\r\n                <table className='table table-striped table-hover'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Good</th>\r\n                      <th>Quantity</th>\r\n                      <th>@</th>\r\n                      <th>Total</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {stock.map((item, index) => (\r\n                      <tr key={item.id}>\r\n                        <td>{++index}</td>\r\n                        <td>{item.stock_name}</td>\r\n                        <td>{item.quantity}</td>\r\n                        <td>\r\n                          {item.buying_price ? 'Ksh ' + item.buying_price : '_'}\r\n                        </td>\r\n                        <td>{'Ksh ' + item.price}</td>\r\n                        <td>\r\n                          <div className='d-flex justify-content-center w-75'>\r\n                            <TableIcon\r\n                              onClick={() => {\r\n                                setShowUpdate(true);\r\n                                setSelectedStock(item);\r\n                              }}\r\n                            >\r\n                              <i className='fa fa-plus'></i>\r\n                            </TableIcon>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UpdateStock(props) {\r\n  const {selectedStock, handleCloseModal, place, updateData} = props;\r\n  const [stock, setStock] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (selectedStock.id) {\r\n      setStock({\r\n        id: selectedStock.id,\r\n        price: selectedStock.buying_price,\r\n      });\r\n    }\r\n  }, [selectedStock]);\r\n\r\n  const updateStockChange = (obj) => {\r\n    setStock({...stock, ...obj});\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let url = '',\r\n      successMessage = '';\r\n    const currentUser = getFromLocal('currentUser') || {};\r\n\r\n    if (place === places.RESTAURANT) {\r\n      url = 'stock/edit-restaurant';\r\n      successMessage = 'Stock edited successfully';\r\n    } else {\r\n      url = `pricings/${stock.id}/edit`;\r\n      successMessage = 'Stock updated successfully';\r\n      stock.quantity_remaining = stock.quantity;\r\n      stock.buying_price = stock.price;\r\n    }\r\n\r\n    trackPromise(\r\n      handleError(\r\n        handleSuccess(\r\n          sendPostRequest(url, {\r\n            ...stock,\r\n            updated_by: `${currentUser.firstname} ${currentUser.lastname}`,\r\n          }),\r\n          successMessage\r\n        ).then((res) => {\r\n          setStock({});\r\n          handleCloseModal();\r\n          updateData();\r\n        })\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className=''>\r\n        <div className='modal-header'>\r\n          <div className='h4 text-center'>\r\n            New Stock for -{selectedStock.stock_name}\r\n          </div>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Buying Price</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Eg 300'\r\n              value={stock.price}\r\n              onChange={(e) => updateStockChange({price: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor=''>Quantity in {selectedStock.measure}</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='Eg 3'\r\n              value={stock.quantity}\r\n              onChange={(e) => updateStockChange({quantity: e.target.value})}\r\n            />\r\n          </div>\r\n          <div className='mt-2 mb-2 row justify-content-between pl-2 pr-2'>\r\n            <button\r\n              className='btn btn-secondary col-4'\r\n              onClick={handleCloseModal}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button className='btn btn-primary col-4' onClick={handleSubmit}>\r\n              Add Stock\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport Admins from './pages/admin/admins/admins';\r\nimport AdminDashboard from './pages/admin/dashboard/admin-dashboard';\r\nimport EmployeeDashboard from './pages/employee/employee-dashboard';\r\nimport Employees from './pages/admin/employees/employees';\r\nimport Login from './pages/login/login';\r\nimport Categories from './pages/admin/category/categories';\r\nimport Goods from './pages/admin/goods/goods';\r\nimport Pricing from './pages/admin/pricing/pricing';\r\nimport EmployeeWelcome from './pages/employee/employee-welcome';\r\nimport EmployeeSales from './pages/employee/employee-sales';\r\nimport EmployeeSaleDetail from './pages/employee/employee-sale-detai';\r\nimport SaleDetail from './pages/admin/sales/sale-detail';\r\nimport Sales from './pages/admin/sales/sales';\r\nimport Loader from './components/loader/loader';\r\nimport ReceiptPrint from './components/receipt/receipt-print';\r\nimport Stock from './pages/admin/stock/stock';\r\nimport stock from './pages/admin/stock/stock';\r\nimport StockHistory from './pages/admin/stock/stock-history';\r\nimport EmployeeStock from './pages/employee/employee-stock';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nfunction Routes() {\r\n  let query = useQuery();\r\n  return (\r\n    <>\r\n      <Loader />\r\n\r\n      <ToastContainer hideProgressBar={true} />\r\n      <Switch>\r\n        <Route path='/login' render={(props) => <Login {...props} />}></Route>\r\n        <Route\r\n          exact\r\n          path='/employee'\r\n          render={(props) => <EmployeeWelcome {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/dashboard/:id'\r\n          render={(props) => <EmployeeDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/dashboard/:id/edit/:sale_id'\r\n          render={(props) => <EmployeeDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/sales/:place'\r\n          render={(props) => <EmployeeSales {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/stock'\r\n          render={(props) => <EmployeeStock {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/sales/view/:id'\r\n          render={(props) => <EmployeeSaleDetail {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/employee/print'\r\n          render={(props) => (\r\n            <ReceiptPrint\r\n              {...props}\r\n              sale_id={query.get('sale_id')}\r\n              width={query.get('width')}\r\n            />\r\n          )}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin'\r\n          render={(props) => <AdminDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='admin/dashboard'\r\n          render={(props) => <AdminDashboard {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/sales/view/:id'\r\n          render={(props) => <SaleDetail {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/sales'\r\n          render={(props) => <Sales {...props} />}\r\n        ></Route>\r\n\r\n        <Route\r\n          exact\r\n          path='/admin/admins'\r\n          render={(props) => <Admins {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/stock'\r\n          render={(props) => <Stock {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/stock/history'\r\n          render={(props) => (\r\n            <StockHistory\r\n              {...props}\r\n              stock={query.get('stock')}\r\n              place={query.get('place')}\r\n            />\r\n          )}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/employees'\r\n          render={(props) => <Employees {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/categories'\r\n          render={(props) => <Categories {...props} />}\r\n        ></Route>\r\n\r\n        <Route\r\n          exact\r\n          path='/admin/products/:id'\r\n          render={(props) => <Goods {...props} />}\r\n        ></Route>\r\n        <Route\r\n          exact\r\n          path='/admin/products/:id/pricing'\r\n          render={(props) => <Pricing {...props} />}\r\n        ></Route>\r\n\r\n        <Redirect exact to='/login' />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport Routes from './routes';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\n\nimport 'bootstrap';\nimport 'bootstrap-select';\nimport 'global';\nimport 'datatables.net-dt'\nimport './services/common';\nimport './sass/app.scss';\n\nwindow.$ = $;\nwindow.Popper = Popper;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}